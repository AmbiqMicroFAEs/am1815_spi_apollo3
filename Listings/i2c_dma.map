Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.text.low_power_init) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init) for am_hal_pwrctrl_low_power_init
    main.o(.text.low_power_init) refers to am_hal_rtc.o(.text.am_hal_rtc_osc_disable) for am_hal_rtc_osc_disable
    main.o(.ARM.exidx.text.low_power_init) refers to main.o(.text.low_power_init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.toVal) refers to main.o(.text.toVal) for [Anonymous Symbol]
    main.o(.text.mthToIndex) refers to main.o(.data.g_pcMonth) for g_pcMonth
    main.o(.text.mthToIndex) refers to am_util_string.o(.text.am_util_string_strnicmp) for am_util_string_strnicmp
    main.o(.ARM.exidx.text.mthToIndex) refers to main.o(.text.mthToIndex) for [Anonymous Symbol]
    main.o(.text.amx8x5_ext1_gen) refers to am_hal_gpio.o(.text.am_hal_gpio_state_write) for am_hal_gpio_state_write
    main.o(.text.amx8x5_ext1_gen) refers to am_util_delay.o(.text.am_util_delay_us) for am_util_delay_us
    main.o(.ARM.exidx.text.amx8x5_ext1_gen) refers to main.o(.text.amx8x5_ext1_gen) for [Anonymous Symbol]
    main.o(.text.amx8x5_init) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    main.o(.text.amx8x5_init) refers to am_util_delay.o(.text.am_util_delay_us) for am_util_delay_us
    main.o(.ARM.exidx.text.amx8x5_init) refers to main.o(.text.amx8x5_init) for [Anonymous Symbol]
    main.o(.text.amx8x5_ext_reset) refers to am_hal_gpio.o(.text.am_hal_gpio_state_write) for am_hal_gpio_state_write
    main.o(.text.amx8x5_ext_reset) refers to am_util_delay.o(.text.am_util_delay_ms) for am_util_delay_ms
    main.o(.ARM.exidx.text.amx8x5_ext_reset) refers to main.o(.text.amx8x5_ext_reset) for [Anonymous Symbol]
    main.o(.text.amx8x5_int_clear) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    main.o(.text.amx8x5_int_clear) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    main.o(.ARM.exidx.text.amx8x5_int_clear) refers to main.o(.text.amx8x5_int_clear) for [Anonymous Symbol]
    main.o(.text.amx8x5_wait_por_ready) refers to am_hal_gpio.o(.text.am_hal_gpio_state_read) for am_hal_gpio_state_read
    main.o(.text.amx8x5_wait_por_ready) refers to am_util_delay.o(.text.am_util_delay_ms) for am_util_delay_ms
    main.o(.ARM.exidx.text.amx8x5_wait_por_ready) refers to main.o(.text.amx8x5_wait_por_ready) for [Anonymous Symbol]
    main.o(.text.rtc_assa_abloy_test_loop) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    main.o(.text.rtc_assa_abloy_test_loop) refers to am_util_delay.o(.text.am_util_delay_us) for am_util_delay_us
    main.o(.text.rtc_assa_abloy_test_loop) refers to amx8x5_device.o(.text.amx8x5_reg_set) for amx8x5_reg_set
    main.o(.text.rtc_assa_abloy_test_loop) refers to amx8x5_device.o(.text.amx8x5_countdown_set) for amx8x5_countdown_set
    main.o(.text.rtc_assa_abloy_test_loop) refers to main.o(.text.amx8x5_int_clear) for amx8x5_int_clear
    main.o(.text.rtc_assa_abloy_test_loop) refers to amx8x5_device.o(.text.amx8x5_sleep_set) for amx8x5_sleep_set
    main.o(.text.rtc_assa_abloy_test_loop) refers to am_util_delay.o(.text.am_util_delay_ms) for am_util_delay_ms
    main.o(.text.rtc_assa_abloy_test_loop) refers to main.o(.text.amx8x5_ext1_gen) for amx8x5_ext1_gen
    main.o(.ARM.exidx.text.rtc_assa_abloy_test_loop) refers to main.o(.text.rtc_assa_abloy_test_loop) for [Anonymous Symbol]
    main.o(.text.sleep_loop) refers to main.o(.rodata.str1.1) for .L.str.19
    main.o(.text.sleep_loop) refers to main.o(.text.toVal) for toVal
    main.o(.text.sleep_loop) refers to main.o(.bss.g_psTimeRegs) for g_psTimeRegs
    main.o(.text.sleep_loop) refers to main.o(.text.mthToIndex) for mthToIndex
    main.o(.text.sleep_loop) refers to am_util_time.o(.text.am_util_time_computeDayofWeek) for am_util_time_computeDayofWeek
    main.o(.text.sleep_loop) refers to amx8x5_device.o(.text.amx8x5_time_set) for amx8x5_time_set
    main.o(.text.sleep_loop) refers to am_util_delay.o(.text.am_util_delay_us) for am_util_delay_us
    main.o(.text.sleep_loop) refers to amx8x5_device.o(.text.amx8x5_reg_set) for amx8x5_reg_set
    main.o(.text.sleep_loop) refers to main.o(.text.amx8x5_int_clear) for amx8x5_int_clear
    main.o(.text.sleep_loop) refers to amx8x5_device.o(.text.amx8x5_sleep_set) for amx8x5_sleep_set
    main.o(.text.sleep_loop) refers to am_util_delay.o(.text.am_util_delay_ms) for am_util_delay_ms
    main.o(.text.sleep_loop) refers to main.o(.text.amx8x5_ext1_gen) for amx8x5_ext1_gen
    main.o(.text.sleep_loop) refers to amx8x5_device.o(.text.amx8x5_time_get) for amx8x5_time_get
    main.o(.text.sleep_loop) refers to am_util_stdio.o(.text.am_util_stdio_printf) for am_util_stdio_printf
    main.o(.text.sleep_loop) refers to main.o(.data.g_pcWeekday) for g_pcWeekday
    main.o(.text.sleep_loop) refers to main.o(.data.g_pcMonth) for g_pcMonth
    main.o(.ARM.exidx.text.sleep_loop) refers to main.o(.text.sleep_loop) for [Anonymous Symbol]
    main.o(.text.main) refers to am_hal_clkgen.o(.text.am_hal_clkgen_control) for am_hal_clkgen_control
    main.o(.text.main) refers to am_hal_cachectrl.o(.rodata.am_hal_cachectrl_defaults) for am_hal_cachectrl_defaults
    main.o(.text.main) refers to am_hal_cachectrl.o(.text.am_hal_cachectrl_config) for am_hal_cachectrl_config
    main.o(.text.main) refers to am_hal_cachectrl.o(.text.am_hal_cachectrl_enable) for am_hal_cachectrl_enable
    main.o(.text.main) refers to main.o(.text.low_power_init) for low_power_init
    main.o(.text.main) refers to iom_spi.o(.text.iom_spi_init) for iom_spi_init
    main.o(.text.main) refers to uart_debug.o(.text.debug_printf_enable) for debug_printf_enable
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str.30
    main.o(.text.main) refers to am_util_stdio.o(.text.am_util_stdio_printf) for am_util_stdio_printf
    main.o(.text.main) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_enable) for am_hal_interrupt_master_enable
    main.o(.text.main) refers to main.o(.text.amx8x5_ext_reset) for amx8x5_ext_reset
    main.o(.text.main) refers to amx8x5_device.o(.text.amx8x5_reset) for amx8x5_reset
    main.o(.text.main) refers to am_util_delay.o(.text.am_util_delay_us) for am_util_delay_us
    main.o(.text.main) refers to main.o(.text.amx8x5_wait_por_ready) for amx8x5_wait_por_ready
    main.o(.text.main) refers to am_util_delay.o(.text.am_util_delay_ms) for am_util_delay_ms
    main.o(.text.main) refers to main.o(.text.amx8x5_init) for amx8x5_init
    main.o(.text.main) refers to main.o(.text.sleep_loop) for sleep_loop
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.data.g_pcWeekday) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.data.g_pcMonth) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    uart_debug.o(.text.itm_printf_enable) refers to uart_debug.o(.data.g_ui32PrintInterface) for g_ui32PrintInterface
    uart_debug.o(.text.itm_printf_enable) refers to am_hal_itm.o(.text.am_hal_itm_enable) for am_hal_itm_enable
    uart_debug.o(.text.itm_printf_enable) refers to am_hal_tpiu.o(.text.am_hal_tpiu_enable) for am_hal_tpiu_enable
    uart_debug.o(.text.itm_printf_enable) refers to uart_debug.o(.rodata.g_GPIO_ITM_SWO) for g_GPIO_ITM_SWO
    uart_debug.o(.text.itm_printf_enable) refers to am_hal_gpio.o(.text.am_hal_gpio_pinconfig) for am_hal_gpio_pinconfig
    uart_debug.o(.text.itm_printf_enable) refers to am_hal_itm.o(.text.am_hal_itm_print) for am_hal_itm_print
    uart_debug.o(.text.itm_printf_enable) refers to am_util_stdio.o(.text.am_util_stdio_printf_init) for am_util_stdio_printf_init
    uart_debug.o(.ARM.exidx.text.itm_printf_enable) refers to uart_debug.o(.text.itm_printf_enable) for [Anonymous Symbol]
    uart_debug.o(.text.uart_string_print) refers to uart_debug.o(.bss.g_sCOMUART) for g_sCOMUART
    uart_debug.o(.text.uart_string_print) refers to am_hal_uart.o(.text.am_hal_uart_transfer) for am_hal_uart_transfer
    uart_debug.o(.ARM.exidx.text.uart_string_print) refers to uart_debug.o(.text.uart_string_print) for [Anonymous Symbol]
    uart_debug.o(.text.uart_printf_enable) refers to uart_debug.o(.data.g_ui32PrintInterface) for g_ui32PrintInterface
    uart_debug.o(.text.uart_printf_enable) refers to uart_debug.o(.bss.g_sCOMUART) for g_sCOMUART
    uart_debug.o(.text.uart_printf_enable) refers to am_hal_uart.o(.text.am_hal_uart_initialize) for am_hal_uart_initialize
    uart_debug.o(.text.uart_printf_enable) refers to am_hal_uart.o(.text.am_hal_uart_power_control) for am_hal_uart_power_control
    uart_debug.o(.text.uart_printf_enable) refers to uart_debug.o(.rodata.g_sBspUartConfig) for g_sBspUartConfig
    uart_debug.o(.text.uart_printf_enable) refers to am_hal_uart.o(.text.am_hal_uart_configure) for am_hal_uart_configure
    uart_debug.o(.text.uart_printf_enable) refers to uart_debug.o(.rodata.g_GPIO_COM_UART_TX) for g_GPIO_COM_UART_TX
    uart_debug.o(.text.uart_printf_enable) refers to am_hal_gpio.o(.text.am_hal_gpio_pinconfig) for am_hal_gpio_pinconfig
    uart_debug.o(.text.uart_printf_enable) refers to uart_debug.o(.rodata.g_GPIO_COM_UART_RX) for g_GPIO_COM_UART_RX
    uart_debug.o(.text.uart_printf_enable) refers to uart_debug.o(.text.uart_string_print) for uart_string_print
    uart_debug.o(.text.uart_printf_enable) refers to am_util_stdio.o(.text.am_util_stdio_printf_init) for am_util_stdio_printf_init
    uart_debug.o(.ARM.exidx.text.uart_printf_enable) refers to uart_debug.o(.text.uart_printf_enable) for [Anonymous Symbol]
    uart_debug.o(.text.uart_printf_disable) refers to uart_debug.o(.bss.g_sCOMUART) for g_sCOMUART
    uart_debug.o(.text.uart_printf_disable) refers to am_hal_uart.o(.text.am_hal_uart_tx_flush) for am_hal_uart_tx_flush
    uart_debug.o(.text.uart_printf_disable) refers to am_util_stdio.o(.text.am_util_stdio_printf_init) for am_util_stdio_printf_init
    uart_debug.o(.text.uart_printf_disable) refers to am_hal_uart.o(.text.am_hal_uart_power_control) for am_hal_uart_power_control
    uart_debug.o(.text.uart_printf_disable) refers to am_hal_uart.o(.text.am_hal_uart_deinitialize) for am_hal_uart_deinitialize
    uart_debug.o(.text.uart_printf_disable) refers to uart_debug.o(.rodata.g_GPIO_DISABLE) for g_GPIO_DISABLE
    uart_debug.o(.text.uart_printf_disable) refers to am_hal_gpio.o(.text.am_hal_gpio_pinconfig) for am_hal_gpio_pinconfig
    uart_debug.o(.ARM.exidx.text.uart_printf_disable) refers to uart_debug.o(.text.uart_printf_disable) for [Anonymous Symbol]
    uart_debug.o(.text.debug_printf_enable) refers to uart_debug.o(.data.g_ui32PrintInterface) for g_ui32PrintInterface
    uart_debug.o(.text.debug_printf_enable) refers to uart_debug.o(.text.itm_printf_enable) for itm_printf_enable
    uart_debug.o(.text.debug_printf_enable) refers to uart_debug.o(.text.uart_printf_enable) for uart_printf_enable
    uart_debug.o(.ARM.exidx.text.debug_printf_enable) refers to uart_debug.o(.text.debug_printf_enable) for [Anonymous Symbol]
    uart_debug.o(.text.debug_printf_disable) refers to uart_debug.o(.data.g_ui32PrintInterface) for g_ui32PrintInterface
    uart_debug.o(.text.debug_printf_disable) refers to uart_debug.o(.text.itm_printf_enable) for itm_printf_enable
    uart_debug.o(.text.debug_printf_disable) refers to uart_debug.o(.text.uart_printf_disable) for uart_printf_disable
    uart_debug.o(.ARM.exidx.text.debug_printf_disable) refers to uart_debug.o(.text.debug_printf_disable) for [Anonymous Symbol]
    iom_dma.o(.text.iom_dma_spi_configure) refers to iom_dma.o(.text.iom_get_interface_clock_cfg) for iom_get_interface_clock_cfg
    iom_dma.o(.ARM.exidx.text.iom_dma_spi_configure) refers to iom_dma.o(.text.iom_dma_spi_configure) for [Anonymous Symbol]
    iom_dma.o(.text.iom_get_interface_clock_cfg) refers to iom_dma.o(.text.compute_freq) for compute_freq
    iom_dma.o(.text.iom_get_interface_clock_cfg) refers to iom_dma.o(.text.onebit) for onebit
    iom_dma.o(.ARM.exidx.text.iom_get_interface_clock_cfg) refers to iom_dma.o(.text.iom_get_interface_clock_cfg) for [Anonymous Symbol]
    iom_dma.o(.ARM.exidx.text.iom_dma_i2c_configure) refers to iom_dma.o(.text.iom_dma_i2c_configure) for [Anonymous Symbol]
    iom_dma.o(.text.iom_dma_configure) refers to iom_dma.o(.text.iom_dma_i2c_configure) for iom_dma_i2c_configure
    iom_dma.o(.text.iom_dma_configure) refers to iom_dma.o(.text.iom_dma_spi_configure) for iom_dma_spi_configure
    iom_dma.o(.ARM.exidx.text.iom_dma_configure) refers to iom_dma.o(.text.iom_dma_configure) for [Anonymous Symbol]
    iom_dma.o(.ARM.exidx.text.iom_dma_enable) refers to iom_dma.o(.text.iom_dma_enable) for [Anonymous Symbol]
    iom_dma.o(.ARM.exidx.text.iom_dma_disable) refers to iom_dma.o(.text.iom_dma_disable) for [Anonymous Symbol]
    iom_dma.o(.text.iom_dma_start) refers to iom_dma.o(.bss.user_callbacks) for user_callbacks
    iom_dma.o(.text.iom_dma_start) refers to iom_dma.o(.bss.callback_cntx) for callback_cntx
    iom_dma.o(.text.iom_dma_start) refers to iom_dma.o(.bss.pop_tail) for pop_tail
    iom_dma.o(.text.iom_dma_start) refers to iom_dma.o(.bss.transaction_rx_buff) for transaction_rx_buff
    iom_dma.o(.text.iom_dma_start) refers to iom_dma.o(.bss.transaction_rx_size) for transaction_rx_size
    iom_dma.o(.ARM.exidx.text.iom_dma_start) refers to iom_dma.o(.text.iom_dma_start) for [Anonymous Symbol]
    iom_dma.o(.text.iom_i2c_dma_pop_tail) refers to iom_dma.o(.bss.pop_tail) for pop_tail
    iom_dma.o(.text.iom_i2c_dma_pop_tail) refers to iom_dma.o(.bss.transaction_rx_size) for transaction_rx_size
    iom_dma.o(.text.iom_i2c_dma_pop_tail) refers to iom_dma.o(.bss.transaction_rx_buff) for transaction_rx_buff
    iom_dma.o(.ARM.exidx.text.iom_i2c_dma_pop_tail) refers to iom_dma.o(.text.iom_i2c_dma_pop_tail) for [Anonymous Symbol]
    iom_dma.o(.text.am_iomaster0_isr) refers to iom_dma.o(.bss.user_callbacks) for user_callbacks
    iom_dma.o(.text.am_iomaster0_isr) refers to iom_dma.o(.bss.callback_cntx) for callback_cntx
    iom_dma.o(.ARM.exidx.text.am_iomaster0_isr) refers to iom_dma.o(.text.am_iomaster0_isr) for [Anonymous Symbol]
    iom_dma.o(.text.am_iomaster1_isr) refers to iom_dma.o(.bss.user_callbacks) for user_callbacks
    iom_dma.o(.text.am_iomaster1_isr) refers to iom_dma.o(.bss.callback_cntx) for callback_cntx
    iom_dma.o(.ARM.exidx.text.am_iomaster1_isr) refers to iom_dma.o(.text.am_iomaster1_isr) for [Anonymous Symbol]
    iom_dma.o(.text.am_iomaster2_isr) refers to iom_dma.o(.bss.user_callbacks) for user_callbacks
    iom_dma.o(.text.am_iomaster2_isr) refers to iom_dma.o(.bss.callback_cntx) for callback_cntx
    iom_dma.o(.ARM.exidx.text.am_iomaster2_isr) refers to iom_dma.o(.text.am_iomaster2_isr) for [Anonymous Symbol]
    iom_dma.o(.text.am_iomaster3_isr) refers to iom_dma.o(.bss.user_callbacks) for user_callbacks
    iom_dma.o(.text.am_iomaster3_isr) refers to iom_dma.o(.bss.callback_cntx) for callback_cntx
    iom_dma.o(.ARM.exidx.text.am_iomaster3_isr) refers to iom_dma.o(.text.am_iomaster3_isr) for [Anonymous Symbol]
    iom_dma.o(.text.am_iomaster4_isr) refers to iom_dma.o(.bss.user_callbacks) for user_callbacks
    iom_dma.o(.text.am_iomaster4_isr) refers to iom_dma.o(.bss.callback_cntx) for callback_cntx
    iom_dma.o(.ARM.exidx.text.am_iomaster4_isr) refers to iom_dma.o(.text.am_iomaster4_isr) for [Anonymous Symbol]
    iom_dma.o(.text.am_iomaster5_isr) refers to iom_dma.o(.bss.user_callbacks) for user_callbacks
    iom_dma.o(.text.am_iomaster5_isr) refers to iom_dma.o(.bss.callback_cntx) for callback_cntx
    iom_dma.o(.ARM.exidx.text.am_iomaster5_isr) refers to iom_dma.o(.text.am_iomaster5_isr) for [Anonymous Symbol]
    iom_dma.o(.text.iom_dma_int_enable) refers to iom_dma.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    iom_dma.o(.ARM.exidx.text.iom_dma_int_enable) refers to iom_dma.o(.text.iom_dma_int_enable) for [Anonymous Symbol]
    iom_dma.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to iom_dma.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    iom_dma.o(.text.iom_dma_int_disable) refers to iom_dma.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    iom_dma.o(.ARM.exidx.text.iom_dma_int_disable) refers to iom_dma.o(.text.iom_dma_int_disable) for [Anonymous Symbol]
    iom_dma.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to iom_dma.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    iom_dma.o(.ARM.exidx.text.compute_freq) refers to iom_dma.o(.text.compute_freq) for [Anonymous Symbol]
    iom_dma.o(.ARM.exidx.text.onebit) refers to iom_dma.o(.text.onebit) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_reg_clear) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_reg_clear) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_clear) refers to amx8x5_device.o(.text.amx8x5_reg_clear) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_reg_read) refers to iom_spi.o(.text.iom_spi_write) for iom_spi_write
    amx8x5_device.o(.text.amx8x5_reg_read) refers to iom_spi.o(.text.iom_spi_read) for iom_spi_read
    amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_read) refers to amx8x5_device.o(.text.amx8x5_reg_read) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_reg_write) refers to iom_spi.o(.text.iom_spi_write) for iom_spi_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_write) refers to amx8x5_device.o(.text.amx8x5_reg_write) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_reg_set) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_reg_set) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_set) refers to amx8x5_device.o(.text.amx8x5_reg_set) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_reg_block_read) refers to iom_spi.o(.text.iom_spi_write) for iom_spi_write
    amx8x5_device.o(.text.amx8x5_reg_block_read) refers to iom_spi.o(.text.iom_spi_read) for iom_spi_read
    amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_block_read) refers to amx8x5_device.o(.text.amx8x5_reg_block_read) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_reg_block_write) refers to iom_spi.o(.text.iom_spi_write) for iom_spi_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_block_write) refers to amx8x5_device.o(.text.amx8x5_reg_block_write) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_reset) refers to iom_spi.o(.text.iom_spi_write) for iom_spi_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_reset) refers to amx8x5_device.o(.text.amx8x5_reset) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_time_get) refers to amx8x5_device.o(.text.amx8x5_reg_block_read) for amx8x5_reg_block_read
    amx8x5_device.o(.text.amx8x5_time_get) refers to amx8x5_device.o(.text.bcd_to_dec) for bcd_to_dec
    amx8x5_device.o(.text.amx8x5_time_get) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.ARM.exidx.text.amx8x5_time_get) refers to amx8x5_device.o(.text.amx8x5_time_get) for [Anonymous Symbol]
    amx8x5_device.o(.ARM.exidx.text.bcd_to_dec) refers to amx8x5_device.o(.text.bcd_to_dec) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_time_set) refers to amx8x5_device.o(.text.dec_to_bcd) for dec_to_bcd
    amx8x5_device.o(.text.amx8x5_time_set) refers to amx8x5_device.o(.text.amx8x5_reg_clear) for amx8x5_reg_clear
    amx8x5_device.o(.text.amx8x5_time_set) refers to amx8x5_device.o(.text.amx8x5_reg_set) for amx8x5_reg_set
    amx8x5_device.o(.text.amx8x5_time_set) refers to amx8x5_device.o(.text.amx8x5_reg_block_write) for amx8x5_reg_block_write
    amx8x5_device.o(.text.amx8x5_time_set) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_time_set) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_time_set) refers to amx8x5_device.o(.text.amx8x5_time_set) for [Anonymous Symbol]
    amx8x5_device.o(.ARM.exidx.text.dec_to_bcd) refers to amx8x5_device.o(.text.dec_to_bcd) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_cal_set) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.text.amx8x5_cal_set) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.ARM.exidx.text.amx8x5_cal_set) refers to amx8x5_device.o(.text.amx8x5_cal_set) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_alarm_set) refers to amx8x5_device.o(.text.dec_to_bcd) for dec_to_bcd
    amx8x5_device.o(.text.amx8x5_alarm_set) refers to amx8x5_device.o(.text.amx8x5_reg_clear) for amx8x5_reg_clear
    amx8x5_device.o(.text.amx8x5_alarm_set) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_alarm_set) refers to amx8x5_device.o(.text.amx8x5_reg_set) for amx8x5_reg_set
    amx8x5_device.o(.text.amx8x5_alarm_set) refers to amx8x5_device.o(.text.amx8x5_reg_block_write) for amx8x5_reg_block_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_alarm_set) refers to amx8x5_device.o(.text.amx8x5_alarm_set) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_countdown_set) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_countdown_set) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.text.amx8x5_countdown_set) refers to amx8x5_device.o(.text.amx8x5_reg_clear) for amx8x5_reg_clear
    amx8x5_device.o(.text.amx8x5_countdown_set) refers to amx8x5_device.o(.text.amx8x5_reg_set) for amx8x5_reg_set
    amx8x5_device.o(.ARM.exidx.text.amx8x5_countdown_set) refers to amx8x5_device.o(.text.amx8x5_countdown_set) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_osc_sel) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_osc_sel) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.text.amx8x5_osc_sel) refers to am_util_delay.o(.text.am_util_delay_ms) for am_util_delay_ms
    amx8x5_device.o(.ARM.exidx.text.amx8x5_osc_sel) refers to amx8x5_device.o(.text.amx8x5_osc_sel) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_sqw_set) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_sqw_set) refers to amx8x5_device.o(.text.amx8x5_reg_clear) for amx8x5_reg_clear
    amx8x5_device.o(.text.amx8x5_sqw_set) refers to amx8x5_device.o(.text.amx8x5_reg_set) for amx8x5_reg_set
    amx8x5_device.o(.text.amx8x5_sqw_set) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_sqw_set) refers to amx8x5_device.o(.text.amx8x5_sqw_set) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_sleep_set) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_sleep_set) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_sleep_set) refers to amx8x5_device.o(.text.amx8x5_sleep_set) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_watchdog_set) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.text.amx8x5_watchdog_set) refers to amx8x5_device.o(.text.amx8x5_reg_clear) for amx8x5_reg_clear
    amx8x5_device.o(.ARM.exidx.text.amx8x5_watchdog_set) refers to amx8x5_device.o(.text.amx8x5_watchdog_set) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_autocal_set) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.text.amx8x5_autocal_set) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.text.amx8x5_autocal_set) refers to am_util_delay.o(.text.am_util_delay_ms) for am_util_delay_ms
    amx8x5_device.o(.ARM.exidx.text.amx8x5_autocal_set) refers to amx8x5_device.o(.text.amx8x5_autocal_set) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_ext_address_get) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.ARM.exidx.text.amx8x5_ext_address_get) refers to amx8x5_device.o(.text.amx8x5_ext_address_get) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_ram_read) refers to amx8x5_device.o(.text.amx8x5_ext_address_get) for amx8x5_ext_address_get
    amx8x5_device.o(.text.amx8x5_ram_read) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.text.amx8x5_ram_read) refers to amx8x5_device.o(.text.amx8x5_reg_read) for amx8x5_reg_read
    amx8x5_device.o(.ARM.exidx.text.amx8x5_ram_read) refers to amx8x5_device.o(.text.amx8x5_ram_read) for [Anonymous Symbol]
    amx8x5_device.o(.text.amx8x5_ram_write) refers to amx8x5_device.o(.text.amx8x5_ext_address_get) for amx8x5_ext_address_get
    amx8x5_device.o(.text.amx8x5_ram_write) refers to amx8x5_device.o(.text.amx8x5_reg_write) for amx8x5_reg_write
    amx8x5_device.o(.ARM.exidx.text.amx8x5_ram_write) refers to amx8x5_device.o(.text.amx8x5_ram_write) for [Anonymous Symbol]
    iom_spi.o(.text.spi_callback) refers to iom_spi.o(.bss.spi_cmd_completed) for spi_cmd_completed
    iom_spi.o(.text.spi_callback) refers to iom_spi.o(.bss.spi_dma_completed) for spi_dma_completed
    iom_spi.o(.text.spi_callback) refers to iom_spi.o(.bss.spi_cmd_error) for spi_cmd_error
    iom_spi.o(.ARM.exidx.text.spi_callback) refers to iom_spi.o(.text.spi_callback) for [Anonymous Symbol]
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_MOSI) for g_GPIO_RTC_MOSI
    iom_spi.o(.text.iom_gpio_config) refers to am_hal_gpio.o(.text.am_hal_gpio_pinconfig) for am_hal_gpio_pinconfig
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_MISO) for g_GPIO_RTC_MISO
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_SCK) for g_GPIO_RTC_SCK
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_CS) for g_GPIO_RTC_CS
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_FOUT) for g_GPIO_RTC_FOUT
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_EXTR) for g_GPIO_RTC_EXTR
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_CLKOUT) for g_GPIO_RTC_CLKOUT
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_EXTI) for g_GPIO_RTC_EXTI
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_PSW) for g_GPIO_RTC_PSW
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_WDI) for g_GPIO_RTC_WDI
    iom_spi.o(.text.iom_gpio_config) refers to iom_spi.o(.rodata.g_GPIO_RTC_RST) for g_GPIO_RTC_RST
    iom_spi.o(.ARM.exidx.text.iom_gpio_config) refers to iom_spi.o(.text.iom_gpio_config) for [Anonymous Symbol]
    iom_spi.o(.text.iom_spi_write) refers to iom_spi.o(.text.spi_callback) for spi_callback
    iom_spi.o(.text.iom_spi_write) refers to iom_spi.o(.data.spi_wr_callback_cntx) for spi_wr_callback_cntx
    iom_spi.o(.text.iom_spi_write) refers to iom_spi.o(.bss.spi_cmd_completed) for spi_cmd_completed
    iom_spi.o(.text.iom_spi_write) refers to iom_spi.o(.bss.spi_dma_completed) for spi_dma_completed
    iom_spi.o(.text.iom_spi_write) refers to iom_spi.o(.bss.spi_cmd_error) for spi_cmd_error
    iom_spi.o(.text.iom_spi_write) refers to iom_spi.o(.bss.g_IOMHandle) for g_IOMHandle
    iom_spi.o(.text.iom_spi_write) refers to iom_dma.o(.text.iom_dma_start) for iom_dma_start
    iom_spi.o(.ARM.exidx.text.iom_spi_write) refers to iom_spi.o(.text.iom_spi_write) for [Anonymous Symbol]
    iom_spi.o(.text.iom_spi_read) refers to iom_spi.o(.text.spi_callback) for spi_callback
    iom_spi.o(.text.iom_spi_read) refers to iom_spi.o(.data.spi_rd_callback_cntx) for spi_rd_callback_cntx
    iom_spi.o(.text.iom_spi_read) refers to iom_spi.o(.bss.spi_cmd_completed) for spi_cmd_completed
    iom_spi.o(.text.iom_spi_read) refers to iom_spi.o(.bss.spi_dma_completed) for spi_dma_completed
    iom_spi.o(.text.iom_spi_read) refers to iom_spi.o(.bss.spi_cmd_error) for spi_cmd_error
    iom_spi.o(.text.iom_spi_read) refers to iom_spi.o(.bss.g_IOMHandle) for g_IOMHandle
    iom_spi.o(.text.iom_spi_read) refers to iom_dma.o(.text.iom_dma_start) for iom_dma_start
    iom_spi.o(.ARM.exidx.text.iom_spi_read) refers to iom_spi.o(.text.iom_spi_read) for [Anonymous Symbol]
    iom_spi.o(.text.iom_spi_init) refers to iom_spi.o(.bss.g_IOMHandle) for g_IOMHandle
    iom_spi.o(.text.iom_spi_init) refers to am_hal_iom.o(.text.am_hal_iom_initialize) for am_hal_iom_initialize
    iom_spi.o(.text.iom_spi_init) refers to am_hal_iom.o(.text.am_hal_iom_power_ctrl) for am_hal_iom_power_ctrl
    iom_spi.o(.text.iom_spi_init) refers to iom_spi.o(.data.g_sIOMSpiConfig) for g_sIOMSpiConfig
    iom_spi.o(.text.iom_spi_init) refers to iom_dma.o(.text.iom_dma_configure) for iom_dma_configure
    iom_spi.o(.text.iom_spi_init) refers to iom_spi.o(.text.iom_gpio_config) for iom_gpio_config
    iom_spi.o(.text.iom_spi_init) refers to iom_dma.o(.text.iom_dma_int_enable) for iom_dma_int_enable
    iom_spi.o(.text.iom_spi_init) refers to iom_dma.o(.text.iom_dma_enable) for iom_dma_enable
    iom_spi.o(.ARM.exidx.text.iom_spi_init) refers to iom_spi.o(.text.iom_spi_init) for [Anonymous Symbol]
    startup_keil.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_keil.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_keil.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_keil.o(RESET) refers to startup_keil.o(STACK) for StackMem
    startup_keil.o(RESET) refers to iom_dma.o(.text.am_iomaster0_isr) for am_iomaster0_isr
    startup_keil.o(RESET) refers to iom_dma.o(.text.am_iomaster1_isr) for am_iomaster1_isr
    startup_keil.o(RESET) refers to iom_dma.o(.text.am_iomaster2_isr) for am_iomaster2_isr
    startup_keil.o(RESET) refers to iom_dma.o(.text.am_iomaster3_isr) for am_iomaster3_isr
    startup_keil.o(RESET) refers to iom_dma.o(.text.am_iomaster4_isr) for am_iomaster4_isr
    startup_keil.o(RESET) refers to iom_dma.o(.text.am_iomaster5_isr) for am_iomaster5_isr
    startup_keil.o(RESET) refers to __main.o(!!!main) for __main
    startup_keil.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_keil.o(.text) refers to startup_keil.o(HEAP) for HeapMem
    startup_keil.o(.text) refers to startup_keil.o(STACK) for StackMem
    am_util_delay.o(.text.am_util_delay_cycles) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_util_delay.o(.ARM.exidx.text.am_util_delay_cycles) refers to am_util_delay.o(.text.am_util_delay_cycles) for [Anonymous Symbol]
    am_util_delay.o(.text.am_util_delay_ms) refers to am_hal_clkgen.o(.text.am_hal_clkgen_status_get) for am_hal_clkgen_status_get
    am_util_delay.o(.text.am_util_delay_ms) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_util_delay.o(.ARM.exidx.text.am_util_delay_ms) refers to am_util_delay.o(.text.am_util_delay_ms) for [Anonymous Symbol]
    am_util_delay.o(.text.am_util_delay_us) refers to am_hal_clkgen.o(.text.am_hal_clkgen_status_get) for am_hal_clkgen_status_get
    am_util_delay.o(.text.am_util_delay_us) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_util_delay.o(.ARM.exidx.text.am_util_delay_us) refers to am_util_delay.o(.text.am_util_delay_us) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_printf_init) refers to am_util_stdio.o(.bss.g_pfnCharPrint) for g_pfnCharPrint
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_printf_init) refers to am_util_stdio.o(.text.am_util_stdio_printf_init) for [Anonymous Symbol]
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_strtoul) refers to am_util_stdio.o(.text.am_util_stdio_strtoul) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_textmode_set) refers to am_util_stdio.o(.bss.g_bTxtXlate) for g_bTxtXlate
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_textmode_set) refers to am_util_stdio.o(.text.am_util_stdio_textmode_set) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.bss.g_bTxtXlate) for g_bTxtXlate
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.decstr_to_int) for decstr_to_int
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.simple_strlen) for simple_strlen
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.padbuffer) for padbuffer
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.ndigits_in_hex) for ndigits_in_hex
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.uint64_to_hexstr) for uint64_to_hexstr
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.ndigits_in_u64) for ndigits_in_u64
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.uint64_to_str) for uint64_to_str
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.ndigits_in_i64) for ndigits_in_i64
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    am_util_stdio.o(.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.ftoa) for ftoa
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_vsprintf) refers to am_util_stdio.o(.text.am_util_stdio_vsprintf) for [Anonymous Symbol]
    am_util_stdio.o(.ARM.exidx.text.decstr_to_int) refers to am_util_stdio.o(.text.decstr_to_int) for [Anonymous Symbol]
    am_util_stdio.o(.ARM.exidx.text.simple_strlen) refers to am_util_stdio.o(.text.simple_strlen) for [Anonymous Symbol]
    am_util_stdio.o(.ARM.exidx.text.padbuffer) refers to am_util_stdio.o(.text.padbuffer) for [Anonymous Symbol]
    am_util_stdio.o(.ARM.exidx.text.ndigits_in_hex) refers to am_util_stdio.o(.text.ndigits_in_hex) for [Anonymous Symbol]
    am_util_stdio.o(.ARM.exidx.text.uint64_to_hexstr) refers to am_util_stdio.o(.text.uint64_to_hexstr) for [Anonymous Symbol]
    am_util_stdio.o(.text.ndigits_in_u64) refers to am_util_stdio.o(.text.divu64_10) for divu64_10
    am_util_stdio.o(.ARM.exidx.text.ndigits_in_u64) refers to am_util_stdio.o(.text.ndigits_in_u64) for [Anonymous Symbol]
    am_util_stdio.o(.text.uint64_to_str) refers to am_util_stdio.o(.text.divu64_10) for divu64_10
    am_util_stdio.o(.ARM.exidx.text.uint64_to_str) refers to am_util_stdio.o(.text.uint64_to_str) for [Anonymous Symbol]
    am_util_stdio.o(.text.ndigits_in_i64) refers to am_util_stdio.o(.text.ndigits_in_u64) for ndigits_in_u64
    am_util_stdio.o(.ARM.exidx.text.ndigits_in_i64) refers to am_util_stdio.o(.text.ndigits_in_i64) for [Anonymous Symbol]
    am_util_stdio.o(.text.ftoa) refers to am_util_stdio.o(.text.uint64_to_str) for uint64_to_str
    am_util_stdio.o(.ARM.exidx.text.ftoa) refers to am_util_stdio.o(.text.ftoa) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_sprintf) refers to am_util_stdio.o(.text.am_util_stdio_vsprintf) for am_util_stdio_vsprintf
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_sprintf) refers to am_util_stdio.o(.text.am_util_stdio_sprintf) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_printf) refers to am_util_stdio.o(.bss.g_pfnCharPrint) for g_pfnCharPrint
    am_util_stdio.o(.text.am_util_stdio_printf) refers to am_util_stdio.o(.bss.g_prfbuf) for g_prfbuf
    am_util_stdio.o(.text.am_util_stdio_printf) refers to am_util_stdio.o(.text.am_util_stdio_vsprintf) for am_util_stdio_vsprintf
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_printf) refers to am_util_stdio.o(.text.am_util_stdio_printf) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_vsnprintf) refers to am_util_stdio.o(.bss.g_prfbuf) for g_prfbuf
    am_util_stdio.o(.text.am_util_stdio_vsnprintf) refers to am_util_stdio.o(.text.am_util_stdio_vsprintf) for am_util_stdio_vsprintf
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_vsnprintf) refers to am_util_stdio.o(.text.am_util_stdio_vsnprintf) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_snprintf) refers to am_util_stdio.o(.text.am_util_stdio_vsnprintf) for am_util_stdio_vsnprintf
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_snprintf) refers to am_util_stdio.o(.text.am_util_stdio_snprintf) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_vprintf) refers to am_util_stdio.o(.bss.g_pfnCharPrint) for g_pfnCharPrint
    am_util_stdio.o(.text.am_util_stdio_vprintf) refers to am_util_stdio.o(.bss.g_prfbuf) for g_prfbuf
    am_util_stdio.o(.text.am_util_stdio_vprintf) refers to am_util_stdio.o(.text.am_util_stdio_vsprintf) for am_util_stdio_vsprintf
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_vprintf) refers to am_util_stdio.o(.text.am_util_stdio_vprintf) for [Anonymous Symbol]
    am_util_stdio.o(.text.am_util_stdio_terminal_clear) refers to am_util_stdio.o(.rodata.str1.1) for .L.str
    am_util_stdio.o(.text.am_util_stdio_terminal_clear) refers to am_util_stdio.o(.text.am_util_stdio_printf) for am_util_stdio_printf
    am_util_stdio.o(.ARM.exidx.text.am_util_stdio_terminal_clear) refers to am_util_stdio.o(.text.am_util_stdio_terminal_clear) for [Anonymous Symbol]
    am_util_stdio.o(.ARM.exidx.text.divu64_10) refers to am_util_stdio.o(.text.divu64_10) for [Anonymous Symbol]
    am_util_string.o(.text.am_util_string_strcmp) refers to am_util_string.o(.text.am_util_string_strncmp) for am_util_string_strncmp
    am_util_string.o(.ARM.exidx.text.am_util_string_strcmp) refers to am_util_string.o(.text.am_util_string_strcmp) for [Anonymous Symbol]
    am_util_string.o(.ARM.exidx.text.am_util_string_strncmp) refers to am_util_string.o(.text.am_util_string_strncmp) for [Anonymous Symbol]
    am_util_string.o(.text.am_util_string_strnicmp) refers to am_util_string.o(.rodata.am_cattr) for am_cattr
    am_util_string.o(.ARM.exidx.text.am_util_string_strnicmp) refers to am_util_string.o(.text.am_util_string_strnicmp) for [Anonymous Symbol]
    am_util_string.o(.text.am_util_string_stricmp) refers to am_util_string.o(.rodata.am_cattr) for am_cattr
    am_util_string.o(.ARM.exidx.text.am_util_string_stricmp) refers to am_util_string.o(.text.am_util_string_stricmp) for [Anonymous Symbol]
    am_util_string.o(.ARM.exidx.text.am_util_string_strlen) refers to am_util_string.o(.text.am_util_string_strlen) for [Anonymous Symbol]
    am_util_string.o(.ARM.exidx.text.am_util_string_strcpy) refers to am_util_string.o(.text.am_util_string_strcpy) for [Anonymous Symbol]
    am_util_string.o(.ARM.exidx.text.am_util_string_strncpy) refers to am_util_string.o(.text.am_util_string_strncpy) for [Anonymous Symbol]
    am_util_string.o(.text.am_util_string_strcat) refers to am_util_string.o(.text.am_util_string_strcpy) for am_util_string_strcpy
    am_util_string.o(.ARM.exidx.text.am_util_string_strcat) refers to am_util_string.o(.text.am_util_string_strcat) for [Anonymous Symbol]
    am_util_time.o(.text.am_util_time_computeDayofWeek) refers to am_util_time.o(.rodata.g_iDaysPerMonth) for g_iDaysPerMonth
    am_util_time.o(.text.am_util_time_computeDayofWeek) refers to am_util_time.o(.rodata.g_iMonthOffsets) for g_iMonthOffsets
    am_util_time.o(.ARM.exidx.text.am_util_time_computeDayofWeek) refers to am_util_time.o(.text.am_util_time_computeDayofWeek) for [Anonymous Symbol]
    am_hal_cachectrl.o(.text.am_hal_cachectrl_config) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_cachectrl.o(.text.am_hal_cachectrl_config) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_config) refers to am_hal_cachectrl.o(.text.am_hal_cachectrl_config) for [Anonymous Symbol]
    am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_enable) refers to am_hal_cachectrl.o(.text.am_hal_cachectrl_enable) for [Anonymous Symbol]
    am_hal_cachectrl.o(.text.am_hal_cachectrl_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_cachectrl.o(.text.am_hal_cachectrl_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_disable) refers to am_hal_cachectrl.o(.text.am_hal_cachectrl_disable) for [Anonymous Symbol]
    am_hal_cachectrl.o(.text.am_hal_cachectrl_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_cachectrl.o(.text.am_hal_cachectrl_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_cachectrl.o(.text.am_hal_cachectrl_control) refers to am_hal_cachectrl.o(.text.set_LPMMODE) for set_LPMMODE
    am_hal_cachectrl.o(.text.am_hal_cachectrl_control) refers to am_hal_cachectrl.o(.text.set_SEDELAY) for set_SEDELAY
    am_hal_cachectrl.o(.text.am_hal_cachectrl_control) refers to am_hal_cachectrl.o(.text.set_RDWAIT) for set_RDWAIT
    am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_control) refers to am_hal_cachectrl.o(.text.am_hal_cachectrl_control) for [Anonymous Symbol]
    am_hal_cachectrl.o(.text.set_LPMMODE) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_cachectrl.o(.text.set_LPMMODE) refers to am_hal_flash.o(.text.am_hal_flash_load_ui32) for am_hal_flash_load_ui32
    am_hal_cachectrl.o(.text.set_LPMMODE) refers to am_hal_flash.o(.text.am_hal_flash_store_ui32) for am_hal_flash_store_ui32
    am_hal_cachectrl.o(.text.set_LPMMODE) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_cachectrl.o(.ARM.exidx.text.set_LPMMODE) refers to am_hal_cachectrl.o(.text.set_LPMMODE) for [Anonymous Symbol]
    am_hal_cachectrl.o(.text.set_SEDELAY) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_cachectrl.o(.text.set_SEDELAY) refers to am_hal_flash.o(.text.am_hal_flash_load_ui32) for am_hal_flash_load_ui32
    am_hal_cachectrl.o(.text.set_SEDELAY) refers to am_hal_flash.o(.text.am_hal_flash_store_ui32) for am_hal_flash_store_ui32
    am_hal_cachectrl.o(.text.set_SEDELAY) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_cachectrl.o(.ARM.exidx.text.set_SEDELAY) refers to am_hal_cachectrl.o(.text.set_SEDELAY) for [Anonymous Symbol]
    am_hal_cachectrl.o(.text.set_RDWAIT) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_cachectrl.o(.text.set_RDWAIT) refers to am_hal_flash.o(.text.am_hal_flash_load_ui32) for am_hal_flash_load_ui32
    am_hal_cachectrl.o(.text.set_RDWAIT) refers to am_hal_flash.o(.text.am_hal_flash_store_ui32) for am_hal_flash_store_ui32
    am_hal_cachectrl.o(.text.set_RDWAIT) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_cachectrl.o(.ARM.exidx.text.set_RDWAIT) refers to am_hal_cachectrl.o(.text.set_RDWAIT) for [Anonymous Symbol]
    am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_status_get) refers to am_hal_cachectrl.o(.text.am_hal_cachectrl_status_get) for [Anonymous Symbol]
    am_hal_clkgen.o(.text.am_hal_clkgen_control) refers to am_hal_reset.o(.bss.gAmHalResetStatus) for gAmHalResetStatus
    am_hal_clkgen.o(.text.am_hal_clkgen_control) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_control) refers to am_hal_clkgen.o(.text.am_hal_clkgen_control) for [Anonymous Symbol]
    am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_status_get) refers to am_hal_clkgen.o(.text.am_hal_clkgen_status_get) for [Anonymous Symbol]
    am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_clkout_enable) refers to am_hal_clkgen.o(.text.am_hal_clkgen_clkout_enable) for [Anonymous Symbol]
    am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_enable) refers to am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_enable) for [Anonymous Symbol]
    am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_disable) refers to am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_disable) for [Anonymous Symbol]
    am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_clear) refers to am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_clear) for [Anonymous Symbol]
    am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_status_get) refers to am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_status_get) for [Anonymous Symbol]
    am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_set) refers to am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_set) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_int_service) refers to am_hal_ctimer.o(.bss.g_am_hal_ctimer_ppfnHandlers) for g_am_hal_ctimer_ppfnHandlers
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_service) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_service) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_int_register) refers to am_hal_ctimer.o(.rodata.str1.1) for .L.str
    am_hal_ctimer.o(.text.am_hal_ctimer_int_register) refers to am_hal_debug.o(.text.am_hal_debug_error) for am_hal_debug_error
    am_hal_ctimer.o(.text.am_hal_ctimer_int_register) refers to am_hal_ctimer.o(.bss.g_am_hal_ctimer_ppfnHandlers) for g_am_hal_ctimer_ppfnHandlers
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_register) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_register) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_globen) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_globen) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_globen) refers to am_hal_ctimer.o(.text.am_hal_ctimer_globen) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_config) refers to am_hal_ctimer.o(.text.ctimer_clr) for ctimer_clr
    am_hal_ctimer.o(.text.am_hal_ctimer_config) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_config) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.text.am_hal_ctimer_config) refers to am_hal_ctimer.o(.data.g_ui8ClkSrc) for g_ui8ClkSrc
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_config) refers to am_hal_ctimer.o(.text.am_hal_ctimer_config) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.ctimer_clr) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.ctimer_clr) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.ctimer_clr) refers to am_hal_ctimer.o(.text.ctimer_clr) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_config_single) refers to am_hal_ctimer.o(.text.ctimer_clr) for ctimer_clr
    am_hal_ctimer.o(.text.am_hal_ctimer_config_single) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_config_single) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.text.am_hal_ctimer_config_single) refers to am_hal_ctimer.o(.data.g_ui8ClkSrc) for g_ui8ClkSrc
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_config_single) refers to am_hal_ctimer.o(.text.am_hal_ctimer_config_single) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_config_trigger) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_config_trigger) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_config_trigger) refers to am_hal_ctimer.o(.text.am_hal_ctimer_config_trigger) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_start) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_start) refers to am_hal_ctimer.o(.data.g_ui8ClkSrc) for g_ui8ClkSrc
    am_hal_ctimer.o(.text.am_hal_ctimer_start) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_start) refers to am_hal_ctimer.o(.text.am_hal_ctimer_start) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_stop) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_stop) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_stop) refers to am_hal_ctimer.o(.text.am_hal_ctimer_stop) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_clear) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_clear) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_clear) refers to am_hal_ctimer.o(.text.am_hal_ctimer_clear) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_read) refers to am_hal_ctimer.o(.rodata.g_ui32TMRAddrTbl) for g_ui32TMRAddrTbl
    am_hal_ctimer.o(.text.am_hal_ctimer_read) refers to am_hal_ctimer.o(.data.g_ui8ClkSrc) for g_ui8ClkSrc
    am_hal_ctimer.o(.text.am_hal_ctimer_read) refers to am_hal_ctimer.o(.rodata.g_ui8TmrClkSrcMask) for g_ui8TmrClkSrcMask
    am_hal_ctimer.o(.text.am_hal_ctimer_read) refers to am_hal_global.o(.emb_text) for am_hal_triple_read
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_read) refers to am_hal_ctimer.o(.text.am_hal_ctimer_read) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_output_config) refers to am_hal_ctimer.o(.rodata.CTx_tbl) for CTx_tbl
    am_hal_ctimer.o(.text.am_hal_ctimer_output_config) refers to am_hal_ctimer.o(.rodata.outcfg_tbl) for outcfg_tbl
    am_hal_ctimer.o(.text.am_hal_ctimer_output_config) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_output_config) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.text.am_hal_ctimer_output_config) refers to am_hal_gpio.o(.text.am_hal_gpio_pinconfig) for am_hal_gpio_pinconfig
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_output_config) refers to am_hal_ctimer.o(.text.am_hal_ctimer_output_config) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_input_config) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_input_config) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_input_config) refers to am_hal_ctimer.o(.text.am_hal_ctimer_input_config) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_compare_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_compare_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_compare_set) refers to am_hal_ctimer.o(.text.am_hal_ctimer_compare_set) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_aux_compare_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_aux_compare_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_aux_compare_set) refers to am_hal_ctimer.o(.text.am_hal_ctimer_aux_compare_set) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_period_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_period_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_period_set) refers to am_hal_ctimer.o(.text.am_hal_ctimer_period_set) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_aux_period_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_aux_period_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_aux_period_set) refers to am_hal_ctimer.o(.text.am_hal_ctimer_aux_period_set) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_adc_trigger_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_adc_trigger_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_adc_trigger_enable) refers to am_hal_ctimer.o(.text.am_hal_ctimer_adc_trigger_enable) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_adc_trigger_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_adc_trigger_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_adc_trigger_disable) refers to am_hal_ctimer.o(.text.am_hal_ctimer_adc_trigger_disable) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_int_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_int_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_enable) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_enable) for [Anonymous Symbol]
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_enable_get) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_enable_get) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_int_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_int_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_disable) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_disable) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_int_clear) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_int_clear) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_clear) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_clear) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_int_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_int_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_set) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_set) for [Anonymous Symbol]
    am_hal_ctimer.o(.text.am_hal_ctimer_int_status_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ctimer.o(.text.am_hal_ctimer_int_status_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_status_get) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_status_get) for [Anonymous Symbol]
    am_hal_debug.o(.ARM.exidx.text.am_hal_debug_error) refers to am_hal_debug.o(.text.am_hal_debug_error) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_pinconfig) refers to am_hal_gpio.o(.rodata.g_ui8Bit76Capabilities) for g_ui8Bit76Capabilities
    am_hal_gpio.o(.text.am_hal_gpio_pinconfig) refers to am_hal_gpio.o(.rodata.g_ui8Inpen) for g_ui8Inpen
    am_hal_gpio.o(.text.am_hal_gpio_pinconfig) refers to am_hal_gpio.o(.rodata.g_ui8nCEpins) for g_ui8nCEpins
    am_hal_gpio.o(.text.am_hal_gpio_pinconfig) refers to am_hal_gpio.o(.rodata.g_ui8NCEtable) for g_ui8NCEtable
    am_hal_gpio.o(.text.am_hal_gpio_pinconfig) refers to am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_DISABLE) for g_AM_HAL_GPIO_DISABLE
    am_hal_gpio.o(.text.am_hal_gpio_pinconfig) refers to am_hal_gpio.o(.text.pincfg_equ) for pincfg_equ
    am_hal_gpio.o(.text.am_hal_gpio_pinconfig) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_gpio.o(.text.am_hal_gpio_pinconfig) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_pinconfig) refers to am_hal_gpio.o(.text.am_hal_gpio_pinconfig) for [Anonymous Symbol]
    am_hal_gpio.o(.ARM.exidx.text.pincfg_equ) refers to am_hal_gpio.o(.text.pincfg_equ) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_fast_pinconfig) refers to am_hal_gpio.o(.text.popcount) for popcount
    am_hal_gpio.o(.text.am_hal_gpio_fast_pinconfig) refers to am_hal_gpio.o(.text.am_hal_gpio_pinconfig) for am_hal_gpio_pinconfig
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_fast_pinconfig) refers to am_hal_gpio.o(.text.am_hal_gpio_fast_pinconfig) for [Anonymous Symbol]
    am_hal_gpio.o(.ARM.exidx.text.popcount) refers to am_hal_gpio.o(.text.popcount) for [Anonymous Symbol]
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_state_read) refers to am_hal_gpio.o(.text.am_hal_gpio_state_read) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_state_write) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_gpio.o(.text.am_hal_gpio_state_write) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_state_write) refers to am_hal_gpio.o(.text.am_hal_gpio_state_write) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_enable) refers to am_hal_gpio.o(.text.am_hal_gpio_interrupt_enable) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_disable) refers to am_hal_gpio.o(.text.am_hal_gpio_interrupt_disable) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_clear) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_clear) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_clear) refers to am_hal_gpio.o(.text.am_hal_gpio_interrupt_clear) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_status_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_status_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_status_get) refers to am_hal_gpio.o(.text.am_hal_gpio_interrupt_status_get) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_register) refers to am_hal_gpio.o(.bss.gpio_ppfnHandlers) for gpio_ppfnHandlers
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_register) refers to am_hal_gpio.o(.text.am_hal_gpio_interrupt_register) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_register_adv) refers to am_hal_gpio.o(.bss.gpio_ppfnHandlers) for gpio_ppfnHandlers
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_register_adv) refers to am_hal_gpio.o(.bss.gpio_pHandlerCtxt) for gpio_pHandlerCtxt
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_register_adv) refers to am_hal_gpio.o(.text.am_hal_gpio_interrupt_register_adv) for [Anonymous Symbol]
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_service) refers to am_hal_gpio.o(.bss.gpio_ppfnHandlers) for gpio_ppfnHandlers
    am_hal_gpio.o(.text.am_hal_gpio_interrupt_service) refers to am_hal_gpio.o(.bss.gpio_pHandlerCtxt) for gpio_pHandlerCtxt
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_service) refers to am_hal_gpio.o(.text.am_hal_gpio_interrupt_service) for [Anonymous Symbol]
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_isinput) refers to am_hal_gpio.o(.text.am_hal_gpio_isinput) for [Anonymous Symbol]
    am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_isgpio) refers to am_hal_gpio.o(.text.am_hal_gpio_isgpio) for [Anonymous Symbol]
    am_hal_interrupt.o(.ARM.exidx.text.am_hal_interrupt_master_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_enable) for [Anonymous Symbol]
    am_hal_interrupt.o(.ARM.exidx.text.am_hal_interrupt_master_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for [Anonymous Symbol]
    am_hal_interrupt.o(.ARM.exidx.text.am_hal_interrupt_master_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.internal_iom_get_int_err) refers to am_hal_iom.o(.text.internal_iom_get_int_err) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_CQInit) refers to am_hal_cmdq.o(.text.am_hal_cmdq_init) for am_hal_cmdq_init
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_CQInit) refers to am_hal_iom.o(.text.am_hal_iom_CQInit) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_IOM_CQReset) refers to am_hal_cmdq.o(.text.am_hal_cmdq_term) for am_hal_cmdq_term
    am_hal_iom.o(.ARM.exidx.text.am_hal_IOM_CQReset) refers to am_hal_iom.o(.text.am_hal_IOM_CQReset) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_CQAddTransaction) refers to am_hal_cmdq.o(.text.am_hal_cmdq_alloc_block) for am_hal_cmdq_alloc_block
    am_hal_iom.o(.text.am_hal_iom_CQAddTransaction) refers to am_hal_iom.o(.text.build_txn_cmdlist) for build_txn_cmdlist
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_CQAddTransaction) refers to am_hal_iom.o(.text.am_hal_iom_CQAddTransaction) for [Anonymous Symbol]
    am_hal_iom.o(.text.build_txn_cmdlist) refers to am_hal_iom.o(.text.build_cmd) for build_cmd
    am_hal_iom.o(.text.build_txn_cmdlist) refers to am_hal_iom.o(.text.get_pause_val) for get_pause_val
    am_hal_iom.o(.ARM.exidx.text.build_txn_cmdlist) refers to am_hal_iom.o(.text.build_txn_cmdlist) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_CQEnable) refers to am_hal_cmdq.o(.text.am_hal_cmdq_enable) for am_hal_cmdq_enable
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_CQEnable) refers to am_hal_iom.o(.text.am_hal_iom_CQEnable) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_CQDisable) refers to am_hal_cmdq.o(.text.am_hal_cmdq_disable) for am_hal_cmdq_disable
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_CQDisable) refers to am_hal_iom.o(.text.am_hal_iom_CQDisable) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.validate_transaction) refers to am_hal_iom.o(.text.validate_transaction) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_uninitialize) refers to am_hal_iom.o(.text.am_hal_iom_disable) for am_hal_iom_disable
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_uninitialize) refers to am_hal_iom.o(.text.am_hal_iom_uninitialize) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_disable) refers to am_hal_iom.o(.text.am_hal_IOM_CQReset) for am_hal_IOM_CQReset
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_disable) refers to am_hal_iom.o(.text.am_hal_iom_disable) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_initialize) refers to am_hal_iom.o(.bss.g_IOMhandles) for g_IOMhandles
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_initialize) refers to am_hal_iom.o(.text.am_hal_iom_initialize) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_enable) refers to am_hal_iom.o(.text.enable_submodule) for enable_submodule
    am_hal_iom.o(.text.am_hal_iom_enable) refers to am_hal_iom.o(.text.am_hal_iom_CQInit) for am_hal_iom_CQInit
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_enable) refers to am_hal_iom.o(.text.am_hal_iom_enable) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.enable_submodule) refers to am_hal_iom.o(.text.enable_submodule) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_status_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_iom.o(.text.am_hal_iom_status_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_status_get) refers to am_hal_iom.o(.text.am_hal_iom_status_get) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_enable) refers to am_hal_iom.o(.text.am_hal_iom_interrupt_enable) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_disable) refers to am_hal_iom.o(.text.am_hal_iom_interrupt_disable) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_status_get) refers to am_hal_iom.o(.text.am_hal_iom_interrupt_status_get) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_clear) refers to am_hal_iom.o(.text.am_hal_iom_interrupt_clear) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_interrupt_service) refers to am_hal_iom.o(.text.internal_iom_get_int_err) for internal_iom_get_int_err
    am_hal_iom.o(.text.am_hal_iom_interrupt_service) refers to am_hal_iom.o(.text.internal_iom_reset_on_error) for internal_iom_reset_on_error
    am_hal_iom.o(.text.am_hal_iom_interrupt_service) refers to am_hal_iom.o(.text.program_dma) for program_dma
    am_hal_iom.o(.text.am_hal_iom_interrupt_service) refers to am_hal_cmdq.o(.text.am_hal_cmdq_get_status) for am_hal_cmdq_get_status
    am_hal_iom.o(.text.am_hal_iom_interrupt_service) refers to am_hal_cmdq.o(.text.am_hal_cmdq_error_resume) for am_hal_cmdq_error_resume
    am_hal_iom.o(.text.am_hal_iom_interrupt_service) refers to am_hal_iom.o(.text.am_hal_iom_CQEnable) for am_hal_iom_CQEnable
    am_hal_iom.o(.text.am_hal_iom_interrupt_service) refers to am_hal_iom.o(.text.am_hal_iom_CQDisable) for am_hal_iom_CQDisable
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_service) refers to am_hal_iom.o(.text.am_hal_iom_interrupt_service) for [Anonymous Symbol]
    am_hal_iom.o(.text.internal_iom_reset_on_error) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_iom.o(.ARM.exidx.text.internal_iom_reset_on_error) refers to am_hal_iom.o(.text.internal_iom_reset_on_error) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.program_dma) refers to am_hal_iom.o(.text.program_dma) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_power_ctrl) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_iom.o(.text.am_hal_iom_power_ctrl) refers to am_hal_iom.o(.text.am_hal_iom_CQEnable) for am_hal_iom_CQEnable
    am_hal_iom.o(.text.am_hal_iom_power_ctrl) refers to am_hal_iom.o(.text.am_hal_iom_CQDisable) for am_hal_iom_CQDisable
    am_hal_iom.o(.text.am_hal_iom_power_ctrl) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for am_hal_pwrctrl_periph_disable
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_power_ctrl) refers to am_hal_iom.o(.text.am_hal_iom_power_ctrl) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_configure) refers to am_hal_iom.o(.text.iom_get_interface_clock_cfg) for iom_get_interface_clock_cfg
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_configure) refers to am_hal_iom.o(.text.am_hal_iom_configure) for [Anonymous Symbol]
    am_hal_iom.o(.text.iom_get_interface_clock_cfg) refers to am_hal_iom.o(.text.compute_freq) for compute_freq
    am_hal_iom.o(.text.iom_get_interface_clock_cfg) refers to am_hal_iom.o(.text.onebit) for onebit
    am_hal_iom.o(.ARM.exidx.text.iom_get_interface_clock_cfg) refers to am_hal_iom.o(.text.iom_get_interface_clock_cfg) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_blocking_transfer) refers to am_hal_iom.o(.text.validate_transaction) for validate_transaction
    am_hal_iom.o(.text.am_hal_iom_blocking_transfer) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_iom.o(.text.am_hal_iom_blocking_transfer) refers to am_hal_iom.o(.text.build_cmd) for build_cmd
    am_hal_iom.o(.text.am_hal_iom_blocking_transfer) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_iom.o(.text.am_hal_iom_blocking_transfer) refers to am_hal_iom.o(.text.internal_iom_get_int_err) for internal_iom_get_int_err
    am_hal_iom.o(.text.am_hal_iom_blocking_transfer) refers to am_hal_iom.o(.text.internal_iom_reset_on_error) for internal_iom_reset_on_error
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_blocking_transfer) refers to am_hal_iom.o(.text.am_hal_iom_blocking_transfer) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.build_cmd) refers to am_hal_iom.o(.text.build_cmd) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) refers to am_hal_iom.o(.text.validate_transaction) for validate_transaction
    am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) refers to am_hal_iom.o(.text.iom_dummy_callback) for iom_dummy_callback
    am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) refers to am_hal_iom.o(.text.am_hal_iom_CQAddTransaction) for am_hal_iom_CQAddTransaction
    am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) refers to am_hal_cmdq.o(.text.am_hal_cmdq_post_block) for am_hal_cmdq_post_block
    am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) refers to am_hal_iom.o(.text.am_hal_iom_CQEnable) for am_hal_iom_CQEnable
    am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) refers to am_hal_cmdq.o(.text.am_hal_cmdq_release_block) for am_hal_cmdq_release_block
    am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_nonblocking_transfer) refers to am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.iom_dummy_callback) refers to am_hal_iom.o(.text.iom_dummy_callback) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_spi_blocking_fullduplex) refers to am_hal_iom.o(.text.validate_transaction) for validate_transaction
    am_hal_iom.o(.text.am_hal_iom_spi_blocking_fullduplex) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_iom.o(.text.am_hal_iom_spi_blocking_fullduplex) refers to am_hal_iom.o(.text.build_cmd) for build_cmd
    am_hal_iom.o(.text.am_hal_iom_spi_blocking_fullduplex) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_iom.o(.text.am_hal_iom_spi_blocking_fullduplex) refers to am_hal_iom.o(.text.internal_iom_get_int_err) for internal_iom_get_int_err
    am_hal_iom.o(.text.am_hal_iom_spi_blocking_fullduplex) refers to am_hal_iom.o(.text.internal_iom_reset_on_error) for internal_iom_reset_on_error
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_spi_blocking_fullduplex) refers to am_hal_iom.o(.text.am_hal_iom_spi_blocking_fullduplex) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_iom.o(.text.iom_cq_pause) for iom_cq_pause
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_reset) for am_hal_cmdq_reset
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_alloc_block) for am_hal_cmdq_alloc_block
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_iom.o(.text.iom_seq_loopback) for iom_seq_loopback
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_post_block) for am_hal_cmdq_post_block
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_release_block) for am_hal_cmdq_release_block
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_iom.o(.text.am_hal_iom_CQEnable) for am_hal_iom_CQEnable
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_iom.o(.text.get_pause_val) for get_pause_val
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_post_loop_block) for am_hal_cmdq_post_loop_block
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_iom.o(.text.sched_hiprio) for sched_hiprio
    am_hal_iom.o(.text.am_hal_iom_control) refers to am_hal_iom.o(.text.iom_dummy_callback) for iom_dummy_callback
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_control) refers to am_hal_iom.o(.text.am_hal_iom_control) for [Anonymous Symbol]
    am_hal_iom.o(.text.iom_cq_pause) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_iom.o(.text.iom_cq_pause) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_iom.o(.ARM.exidx.text.iom_cq_pause) refers to am_hal_iom.o(.text.iom_cq_pause) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.iom_seq_loopback) refers to am_hal_iom.o(.text.iom_seq_loopback) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.get_pause_val) refers to am_hal_iom.o(.text.get_pause_val) for [Anonymous Symbol]
    am_hal_iom.o(.text.sched_hiprio) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_iom.o(.text.sched_hiprio) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_iom.o(.text.sched_hiprio) refers to am_hal_iom.o(.text.iom_cq_pause) for iom_cq_pause
    am_hal_iom.o(.text.sched_hiprio) refers to am_hal_iom.o(.text.program_dma) for program_dma
    am_hal_iom.o(.ARM.exidx.text.sched_hiprio) refers to am_hal_iom.o(.text.sched_hiprio) for [Anonymous Symbol]
    am_hal_iom.o(.text.am_hal_iom_highprio_transfer) refers to am_hal_iom.o(.text.validate_transaction) for validate_transaction
    am_hal_iom.o(.text.am_hal_iom_highprio_transfer) refers to am_hal_iom.o(.text.iom_add_hp_transaction) for iom_add_hp_transaction
    am_hal_iom.o(.text.am_hal_iom_highprio_transfer) refers to am_hal_iom.o(.text.sched_hiprio) for sched_hiprio
    am_hal_iom.o(.ARM.exidx.text.am_hal_iom_highprio_transfer) refers to am_hal_iom.o(.text.am_hal_iom_highprio_transfer) for [Anonymous Symbol]
    am_hal_iom.o(.text.iom_add_hp_transaction) refers to am_hal_iom.o(.text.build_cmd) for build_cmd
    am_hal_iom.o(.ARM.exidx.text.iom_add_hp_transaction) refers to am_hal_iom.o(.text.iom_add_hp_transaction) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.compute_freq) refers to am_hal_iom.o(.text.compute_freq) for [Anonymous Symbol]
    am_hal_iom.o(.ARM.exidx.text.onebit) refers to am_hal_iom.o(.text.onebit) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_power_ctrl) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_ios.o(.text.am_hal_ios_power_ctrl) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for am_hal_pwrctrl_periph_disable
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_power_ctrl) refers to am_hal_ios.o(.text.am_hal_ios_power_ctrl) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_uninitialize) refers to am_hal_ios.o(.text.am_hal_ios_disable) for am_hal_ios_disable
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_uninitialize) refers to am_hal_ios.o(.text.am_hal_ios_uninitialize) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_disable) refers to am_hal_ios.o(.text.am_hal_ios_disable) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_initialize) refers to am_hal_ios.o(.bss.g_IOShandles) for g_IOShandles
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_initialize) refers to am_hal_ios.o(.text.am_hal_ios_initialize) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_enable) refers to am_hal_ios.o(.text.am_hal_ios_enable) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_configure) refers to am_hal_ios.o(.bss.g_sSRAMBuffer) for g_sSRAMBuffer
    am_hal_ios.o(.text.am_hal_ios_configure) refers to am_hal_ios.o(.text.am_hal_ios_buffer_init) for am_hal_ios_buffer_init
    am_hal_ios.o(.text.am_hal_ios_configure) refers to am_hal_ios.o(.text.am_hal_ios_disable) for am_hal_ios_disable
    am_hal_ios.o(.text.am_hal_ios_configure) refers to am_hal_ios.o(.text.am_hal_ios_fifo_ptr_set) for am_hal_ios_fifo_ptr_set
    am_hal_ios.o(.text.am_hal_ios_configure) refers to am_hal_ios.o(.text.am_hal_ios_enable) for am_hal_ios_enable
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_configure) refers to am_hal_ios.o(.text.am_hal_ios_configure) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_buffer_init) refers to am_hal_ios.o(.text.am_hal_ios_buffer_init) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_fifo_ptr_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ios.o(.text.am_hal_ios_fifo_ptr_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_fifo_ptr_set) refers to am_hal_ios.o(.text.am_hal_ios_fifo_ptr_set) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_enable) refers to am_hal_ios.o(.text.am_hal_ios_interrupt_enable) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_disable) refers to am_hal_ios.o(.text.am_hal_ios_interrupt_disable) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_clear) refers to am_hal_ios.o(.text.am_hal_ios_interrupt_clear) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_status_get) refers to am_hal_ios.o(.text.am_hal_ios_interrupt_status_get) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_fifo_space_used) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ios.o(.text.am_hal_ios_fifo_space_used) refers to am_hal_ios.o(.bss.g_sSRAMBuffer) for g_sSRAMBuffer
    am_hal_ios.o(.text.am_hal_ios_fifo_space_used) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_fifo_space_used) refers to am_hal_ios.o(.text.am_hal_ios_fifo_space_used) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_fifo_space_left) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ios.o(.text.am_hal_ios_fifo_space_left) refers to am_hal_ios.o(.bss.g_sSRAMBuffer) for g_sSRAMBuffer
    am_hal_ios.o(.text.am_hal_ios_fifo_space_left) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_fifo_space_left) refers to am_hal_ios.o(.text.am_hal_ios_fifo_space_left) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_interrupt_service) refers to am_hal_ios.o(.bss.g_sSRAMBuffer) for g_sSRAMBuffer
    am_hal_ios.o(.text.am_hal_ios_interrupt_service) refers to am_hal_ios.o(.text.fifo_write) for fifo_write
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_service) refers to am_hal_ios.o(.text.am_hal_ios_interrupt_service) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.fifo_write) refers to am_hal_ios.o(.text.fifo_write) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_fifo_write) refers to am_hal_ios.o(.bss.g_sSRAMBuffer) for g_sSRAMBuffer
    am_hal_ios.o(.text.am_hal_ios_fifo_write) refers to am_hal_ios.o(.rodata.str1.1) for .L.str
    am_hal_ios.o(.text.am_hal_ios_fifo_write) refers to am_hal_debug.o(.text.am_hal_debug_error) for am_hal_debug_error
    am_hal_ios.o(.text.am_hal_ios_fifo_write) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ios.o(.text.am_hal_ios_fifo_write) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ios.o(.text.am_hal_ios_fifo_write) refers to am_hal_ios.o(.text.fifo_space_left) for fifo_space_left
    am_hal_ios.o(.text.am_hal_ios_fifo_write) refers to am_hal_ios.o(.text.fifo_write) for fifo_write
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_fifo_write) refers to am_hal_ios.o(.text.am_hal_ios_fifo_write) for [Anonymous Symbol]
    am_hal_ios.o(.ARM.exidx.text.fifo_space_left) refers to am_hal_ios.o(.text.fifo_space_left) for [Anonymous Symbol]
    am_hal_ios.o(.text.am_hal_ios_control) refers to am_hal_ios.o(.text.am_hal_ios_fifo_space_used) for am_hal_ios_fifo_space_used
    am_hal_ios.o(.text.am_hal_ios_control) refers to am_hal_ios.o(.bss.g_sSRAMBuffer) for g_sSRAMBuffer
    am_hal_ios.o(.text.am_hal_ios_control) refers to am_hal_ios.o(.text.am_hal_ios_buffer_init) for am_hal_ios_buffer_init
    am_hal_ios.o(.ARM.exidx.text.am_hal_ios_control) refers to am_hal_ios.o(.text.am_hal_ios_control) for [Anonymous Symbol]
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_enable) refers to am_hal_itm.o(.text.am_hal_itm_enable) for [Anonymous Symbol]
    am_hal_itm.o(.text.am_hal_itm_disable) refers to am_hal_itm.o(.text.am_hal_itm_enable) for am_hal_itm_enable
    am_hal_itm.o(.text.am_hal_itm_disable) refers to am_hal_itm.o(.text.am_hal_itm_not_busy) for am_hal_itm_not_busy
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_disable) refers to am_hal_itm.o(.text.am_hal_itm_disable) for [Anonymous Symbol]
    am_hal_itm.o(.text.am_hal_itm_not_busy) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_not_busy) refers to am_hal_itm.o(.text.am_hal_itm_not_busy) for [Anonymous Symbol]
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_trace_port_enable) refers to am_hal_itm.o(.text.am_hal_itm_trace_port_enable) for [Anonymous Symbol]
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_trace_port_disable) refers to am_hal_itm.o(.text.am_hal_itm_trace_port_disable) for [Anonymous Symbol]
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_stimulus_not_busy) refers to am_hal_itm.o(.text.am_hal_itm_stimulus_not_busy) for [Anonymous Symbol]
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_stimulus_reg_word_write) refers to am_hal_itm.o(.text.am_hal_itm_stimulus_reg_word_write) for [Anonymous Symbol]
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_stimulus_reg_short_write) refers to am_hal_itm.o(.text.am_hal_itm_stimulus_reg_short_write) for [Anonymous Symbol]
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_stimulus_reg_byte_write) refers to am_hal_itm.o(.text.am_hal_itm_stimulus_reg_byte_write) for [Anonymous Symbol]
    am_hal_itm.o(.text.am_hal_itm_sync_send) refers to am_hal_itm.o(.text.am_hal_itm_stimulus_reg_word_write) for am_hal_itm_stimulus_reg_word_write
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_sync_send) refers to am_hal_itm.o(.text.am_hal_itm_sync_send) for [Anonymous Symbol]
    am_hal_itm.o(.text.am_hal_itm_print_not_busy) refers to am_hal_itm.o(.text.am_hal_itm_stimulus_not_busy) for am_hal_itm_stimulus_not_busy
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_print_not_busy) refers to am_hal_itm.o(.text.am_hal_itm_print_not_busy) for [Anonymous Symbol]
    am_hal_itm.o(.text.am_hal_itm_print) refers to am_hal_itm.o(.text.am_hal_itm_stimulus_reg_byte_write) for am_hal_itm_stimulus_reg_byte_write
    am_hal_itm.o(.ARM.exidx.text.am_hal_itm_print) refers to am_hal_itm.o(.text.am_hal_itm_print) for [Anonymous Symbol]
    am_hal_mcuctrl.o(.text.am_hal_mcuctrl_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_mcuctrl.o(.text.am_hal_mcuctrl_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_mcuctrl.o(.ARM.exidx.text.am_hal_mcuctrl_control) refers to am_hal_mcuctrl.o(.text.am_hal_mcuctrl_control) for [Anonymous Symbol]
    am_hal_mcuctrl.o(.ARM.exidx.text.am_hal_mcuctrl_status_get) refers to am_hal_mcuctrl.o(.text.am_hal_mcuctrl_status_get) for [Anonymous Symbol]
    am_hal_mcuctrl.o(.text.am_hal_mcuctrl_info_get) refers to am_hal_mcuctrl.o(.text.device_info_get) for device_info_get
    am_hal_mcuctrl.o(.text.am_hal_mcuctrl_info_get) refers to am_hal_mcuctrl.o(.text.mcuctrl_fault_status) for mcuctrl_fault_status
    am_hal_mcuctrl.o(.ARM.exidx.text.am_hal_mcuctrl_info_get) refers to am_hal_mcuctrl.o(.text.am_hal_mcuctrl_info_get) for [Anonymous Symbol]
    am_hal_mcuctrl.o(.text.device_info_get) refers to am_hal_mcuctrl.o(.rodata.g_am_hal_mcuctrl_flash_size) for g_am_hal_mcuctrl_flash_size
    am_hal_mcuctrl.o(.text.device_info_get) refers to am_hal_mcuctrl.o(.rodata.g_am_hal_mcuctrl_sram_size) for g_am_hal_mcuctrl_sram_size
    am_hal_mcuctrl.o(.ARM.exidx.text.device_info_get) refers to am_hal_mcuctrl.o(.text.device_info_get) for [Anonymous Symbol]
    am_hal_mcuctrl.o(.ARM.exidx.text.mcuctrl_fault_status) refers to am_hal_mcuctrl.o(.text.mcuctrl_fault_status) for [Anonymous Symbol]
    am_hal_mspi.o(.text.build_dma_cmdlist) refers to am_hal_mspi.o(.text.get_pause_val) for get_pause_val
    am_hal_mspi.o(.ARM.exidx.text.build_dma_cmdlist) refers to am_hal_mspi.o(.text.build_dma_cmdlist) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.get_pause_val) refers to am_hal_mspi.o(.text.get_pause_val) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_initialize) refers to am_hal_mspi.o(.bss.g_MSPIState) for g_MSPIState
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_initialize) refers to am_hal_mspi.o(.text.am_hal_mspi_initialize) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_disable) refers to am_hal_mspi.o(.text.mspi_cq_disable) for mspi_cq_disable
    am_hal_mspi.o(.text.am_hal_mspi_disable) refers to am_hal_mspi.o(.text.mspi_cq_term) for mspi_cq_term
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_disable) refers to am_hal_mspi.o(.text.am_hal_mspi_disable) for [Anonymous Symbol]
    am_hal_mspi.o(.text.mspi_cq_disable) refers to am_hal_cmdq.o(.text.am_hal_cmdq_disable) for am_hal_cmdq_disable
    am_hal_mspi.o(.ARM.exidx.text.mspi_cq_disable) refers to am_hal_mspi.o(.text.mspi_cq_disable) for [Anonymous Symbol]
    am_hal_mspi.o(.text.mspi_cq_term) refers to am_hal_mspi.o(.bss.g_MSPIState) for g_MSPIState
    am_hal_mspi.o(.text.mspi_cq_term) refers to am_hal_cmdq.o(.text.am_hal_cmdq_term) for am_hal_cmdq_term
    am_hal_mspi.o(.ARM.exidx.text.mspi_cq_term) refers to am_hal_mspi.o(.text.mspi_cq_term) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_deinitialize) refers to am_hal_mspi.o(.text.am_hal_mspi_disable) for am_hal_mspi_disable
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_deinitialize) refers to am_hal_mspi.o(.text.am_hal_mspi_deinitialize) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_device_configure) refers to am_hal_mspi.o(.bss.g_MSPIState) for g_MSPIState
    am_hal_mspi.o(.text.am_hal_mspi_device_configure) refers to am_hal_mspi.o(.text.mspi_device_configure) for mspi_device_configure
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_device_configure) refers to am_hal_mspi.o(.text.am_hal_mspi_device_configure) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.mspi_device_configure) refers to am_hal_mspi.o(.text.mspi_device_configure) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_enable) refers to am_hal_mspi.o(.text.mspi_cq_init) for mspi_cq_init
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_enable) refers to am_hal_mspi.o(.text.am_hal_mspi_enable) for [Anonymous Symbol]
    am_hal_mspi.o(.text.mspi_cq_init) refers to am_hal_mspi.o(.bss.g_MSPIState) for g_MSPIState
    am_hal_mspi.o(.text.mspi_cq_init) refers to am_hal_cmdq.o(.text.am_hal_cmdq_init) for am_hal_cmdq_init
    am_hal_mspi.o(.ARM.exidx.text.mspi_cq_init) refers to am_hal_mspi.o(.text.mspi_cq_init) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_mspi.o(.text.mspi_device_configure) for mspi_device_configure
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_mspi.o(.text.mspi_cq_pause) for mspi_cq_pause
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_reset) for am_hal_cmdq_reset
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_alloc_block) for am_hal_cmdq_alloc_block
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_mspi.o(.text.mspi_seq_loopback) for mspi_seq_loopback
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_post_block) for am_hal_cmdq_post_block
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_release_block) for am_hal_cmdq_release_block
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_mspi.o(.text.mspi_cq_enable) for mspi_cq_enable
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_mspi.o(.text.get_pause_val) for get_pause_val
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_cmdq.o(.text.am_hal_cmdq_post_loop_block) for am_hal_cmdq_post_loop_block
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_mspi.o(.text.sched_hiprio) for sched_hiprio
    am_hal_mspi.o(.text.am_hal_mspi_control) refers to am_hal_mspi.o(.text.mspi_dummy_callback) for mspi_dummy_callback
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_control) refers to am_hal_mspi.o(.text.am_hal_mspi_control) for [Anonymous Symbol]
    am_hal_mspi.o(.text.mspi_cq_pause) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_mspi.o(.text.mspi_cq_pause) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_mspi.o(.ARM.exidx.text.mspi_cq_pause) refers to am_hal_mspi.o(.text.mspi_cq_pause) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.mspi_seq_loopback) refers to am_hal_mspi.o(.text.mspi_seq_loopback) for [Anonymous Symbol]
    am_hal_mspi.o(.text.mspi_cq_enable) refers to am_hal_cmdq.o(.text.am_hal_cmdq_enable) for am_hal_cmdq_enable
    am_hal_mspi.o(.ARM.exidx.text.mspi_cq_enable) refers to am_hal_mspi.o(.text.mspi_cq_enable) for [Anonymous Symbol]
    am_hal_mspi.o(.text.sched_hiprio) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_mspi.o(.text.sched_hiprio) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_mspi.o(.text.sched_hiprio) refers to am_hal_mspi.o(.text.mspi_cq_pause) for mspi_cq_pause
    am_hal_mspi.o(.text.sched_hiprio) refers to am_hal_mspi.o(.text.program_dma) for program_dma
    am_hal_mspi.o(.ARM.exidx.text.sched_hiprio) refers to am_hal_mspi.o(.text.sched_hiprio) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.mspi_dummy_callback) refers to am_hal_mspi.o(.text.mspi_dummy_callback) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_capabilities_get) refers to am_hal_mspi.o(.bss.g_MSPIState) for g_MSPIState
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_capabilities_get) refers to am_hal_mspi.o(.text.am_hal_mspi_capabilities_get) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_blocking_transfer) refers to am_hal_mspi.o(.text.mspi_fifo_read) for mspi_fifo_read
    am_hal_mspi.o(.text.am_hal_mspi_blocking_transfer) refers to am_hal_mspi.o(.text.mspi_fifo_write) for mspi_fifo_write
    am_hal_mspi.o(.text.am_hal_mspi_blocking_transfer) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_blocking_transfer) refers to am_hal_mspi.o(.text.am_hal_mspi_blocking_transfer) for [Anonymous Symbol]
    am_hal_mspi.o(.text.mspi_fifo_read) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_mspi.o(.ARM.exidx.text.mspi_fifo_read) refers to am_hal_mspi.o(.text.mspi_fifo_read) for [Anonymous Symbol]
    am_hal_mspi.o(.text.mspi_fifo_write) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_mspi.o(.ARM.exidx.text.mspi_fifo_write) refers to am_hal_mspi.o(.text.mspi_fifo_write) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer) refers to am_hal_mspi.o(.text.mspi_dummy_callback) for mspi_dummy_callback
    am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer) refers to am_hal_mspi.o(.text.mspi_cq_add_transaction) for mspi_cq_add_transaction
    am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer) refers to am_hal_cmdq.o(.text.am_hal_cmdq_post_block) for am_hal_cmdq_post_block
    am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer) refers to am_hal_cmdq.o(.text.am_hal_cmdq_release_block) for am_hal_cmdq_release_block
    am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer) refers to am_hal_mspi.o(.text.mspi_cq_enable) for mspi_cq_enable
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_nonblocking_transfer) refers to am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer) for [Anonymous Symbol]
    am_hal_mspi.o(.text.mspi_cq_add_transaction) refers to am_hal_cmdq.o(.text.am_hal_cmdq_alloc_block) for am_hal_cmdq_alloc_block
    am_hal_mspi.o(.text.mspi_cq_add_transaction) refers to am_hal_mspi.o(.text.build_dma_cmdlist) for build_dma_cmdlist
    am_hal_mspi.o(.text.mspi_cq_add_transaction) refers to am_hal_cmdq.o(.text.am_hal_cmdq_release_block) for am_hal_cmdq_release_block
    am_hal_mspi.o(.ARM.exidx.text.mspi_cq_add_transaction) refers to am_hal_mspi.o(.text.mspi_cq_add_transaction) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_status_get) refers to am_hal_mspi.o(.text.am_hal_mspi_status_get) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_enable) refers to am_hal_mspi.o(.text.am_hal_mspi_interrupt_enable) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_disable) refers to am_hal_mspi.o(.text.am_hal_mspi_interrupt_disable) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_status_get) refers to am_hal_mspi.o(.text.am_hal_mspi_interrupt_status_get) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_clear) refers to am_hal_mspi.o(.text.am_hal_mspi_interrupt_clear) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_interrupt_service) refers to am_hal_mspi.o(.text.program_dma) for program_dma
    am_hal_mspi.o(.text.am_hal_mspi_interrupt_service) refers to am_hal_mspi.o(.bss.g_MSPIState) for g_MSPIState
    am_hal_mspi.o(.text.am_hal_mspi_interrupt_service) refers to am_hal_cmdq.o(.text.am_hal_cmdq_get_status) for am_hal_cmdq_get_status
    am_hal_mspi.o(.text.am_hal_mspi_interrupt_service) refers to am_hal_mspi.o(.text.mspi_cq_disable) for mspi_cq_disable
    am_hal_mspi.o(.text.am_hal_mspi_interrupt_service) refers to am_hal_cmdq.o(.text.am_hal_cmdq_error_resume) for am_hal_cmdq_error_resume
    am_hal_mspi.o(.text.am_hal_mspi_interrupt_service) refers to am_hal_mspi.o(.text.mspi_cq_enable) for mspi_cq_enable
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_service) refers to am_hal_mspi.o(.text.am_hal_mspi_interrupt_service) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.program_dma) refers to am_hal_mspi.o(.text.program_dma) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_mspi.o(.text.am_hal_mspi_power_control) refers to am_hal_mspi.o(.text.mspi_cq_enable) for mspi_cq_enable
    am_hal_mspi.o(.text.am_hal_mspi_power_control) refers to am_hal_mspi.o(.text.mspi_cq_disable) for mspi_cq_disable
    am_hal_mspi.o(.text.am_hal_mspi_power_control) refers to am_hal_mspi.o(.text.am_hal_mspi_interrupt_disable) for am_hal_mspi_interrupt_disable
    am_hal_mspi.o(.text.am_hal_mspi_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for am_hal_pwrctrl_periph_disable
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_power_control) refers to am_hal_mspi.o(.text.am_hal_mspi_power_control) for [Anonymous Symbol]
    am_hal_mspi.o(.text.am_hal_mspi_highprio_transfer) refers to am_hal_mspi.o(.text.mspi_add_hp_transaction) for mspi_add_hp_transaction
    am_hal_mspi.o(.text.am_hal_mspi_highprio_transfer) refers to am_hal_mspi.o(.text.sched_hiprio) for sched_hiprio
    am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_highprio_transfer) refers to am_hal_mspi.o(.text.am_hal_mspi_highprio_transfer) for [Anonymous Symbol]
    am_hal_mspi.o(.ARM.exidx.text.mspi_add_hp_transaction) refers to am_hal_mspi.o(.text.mspi_add_hp_transaction) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) refers to am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_peripheral_control) for am_hal_pwrctrl_peripheral_control
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_periph_enable) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) refers to am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_peripheral_control) for am_hal_pwrctrl_peripheral_control
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) refers to am_hal_pwrctrl.o(.text.pwrctrl_periph_disable_msk_check) for pwrctrl_periph_disable_msk_check
    am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_periph_disable) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.pwrctrl_periph_disable_msk_check) refers to am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_peripheral_control) for am_hal_pwrctrl_peripheral_control
    am_hal_pwrctrl.o(.ARM.exidx.text.pwrctrl_periph_disable_msk_check) refers to am_hal_pwrctrl.o(.text.pwrctrl_periph_disable_msk_check) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enabled) refers to am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_peripheral_control) for am_hal_pwrctrl_peripheral_control
    am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_periph_enabled) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enabled) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_enable) refers to am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_memory_control) for am_hal_pwrctrl_memory_control
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_enable) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_memory_enable) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_enable) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_deepsleep_powerdown) refers to am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_memory_control) for am_hal_pwrctrl_memory_control
    am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_memory_deepsleep_powerdown) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_deepsleep_powerdown) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_deepsleep_retain) refers to am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_memory_control) for am_hal_pwrctrl_memory_control
    am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_memory_deepsleep_retain) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_deepsleep_retain) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init) refers to am_hal_reset.o(.bss.gAmHalResetStatus) for gAmHalResetStatus
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init) refers to am_hal_pwrctrl.o(.text.simobuck_updates) for simobuck_updates
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init) refers to am_hal_cachectrl.o(.text.am_hal_cachectrl_control) for am_hal_cachectrl_control
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_blebuck_trim) for am_hal_pwrctrl_blebuck_trim
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_low_power_init) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.ARM.exidx.text.simobuck_updates) refers to am_hal_pwrctrl.o(.text.simobuck_updates) for [Anonymous Symbol]
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_blebuck_trim) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_pwrctrl.o(.text.am_hal_pwrctrl_blebuck_trim) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_blebuck_trim) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_blebuck_trim) for [Anonymous Symbol]
    am_hal_reset.o(.text.am_hal_reset_configure) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_reset.o(.text.am_hal_reset_configure) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_reset.o(.ARM.exidx.text.am_hal_reset_configure) refers to am_hal_reset.o(.text.am_hal_reset_configure) for [Anonymous Symbol]
    am_hal_reset.o(.ARM.exidx.text.am_hal_reset_control) refers to am_hal_reset.o(.text.am_hal_reset_control) for [Anonymous Symbol]
    am_hal_reset.o(.text.am_hal_reset_status_get) refers to am_hal_reset.o(.bss.gAmHalResetStatus) for gAmHalResetStatus
    am_hal_reset.o(.ARM.exidx.text.am_hal_reset_status_get) refers to am_hal_reset.o(.text.am_hal_reset_status_get) for [Anonymous Symbol]
    am_hal_reset.o(.text.am_hal_reset_interrupt_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_reset.o(.text.am_hal_reset_interrupt_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_reset.o(.ARM.exidx.text.am_hal_reset_interrupt_enable) refers to am_hal_reset.o(.text.am_hal_reset_interrupt_enable) for [Anonymous Symbol]
    am_hal_reset.o(.text.am_hal_reset_interrupt_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_reset.o(.text.am_hal_reset_interrupt_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_reset.o(.ARM.exidx.text.am_hal_reset_interrupt_disable) refers to am_hal_reset.o(.text.am_hal_reset_interrupt_disable) for [Anonymous Symbol]
    am_hal_reset.o(.ARM.exidx.text.am_hal_reset_interrupt_clear) refers to am_hal_reset.o(.text.am_hal_reset_interrupt_clear) for [Anonymous Symbol]
    am_hal_reset.o(.ARM.exidx.text.am_hal_reset_interrupt_status_get) refers to am_hal_reset.o(.text.am_hal_reset_interrupt_status_get) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_osc_select) refers to am_hal_rtc.o(.text.am_hal_rtc_osc_select) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_osc_enable) refers to am_hal_rtc.o(.text.am_hal_rtc_osc_enable) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_osc_disable) refers to am_hal_rtc.o(.text.am_hal_rtc_osc_disable) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_time_12hour) refers to am_hal_rtc.o(.text.am_hal_rtc_time_12hour) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_enable) refers to am_hal_rtc.o(.text.am_hal_rtc_int_enable) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_enable_get) refers to am_hal_rtc.o(.text.am_hal_rtc_int_enable_get) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_disable) refers to am_hal_rtc.o(.text.am_hal_rtc_int_disable) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_set) refers to am_hal_rtc.o(.text.am_hal_rtc_int_set) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_clear) refers to am_hal_rtc.o(.text.am_hal_rtc_int_clear) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_status_get) refers to am_hal_rtc.o(.text.am_hal_rtc_int_status_get) for [Anonymous Symbol]
    am_hal_rtc.o(.text.am_hal_rtc_time_set) refers to am_hal_rtc.o(.text.dec_to_bcd) for dec_to_bcd
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_time_set) refers to am_hal_rtc.o(.text.am_hal_rtc_time_set) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.dec_to_bcd) refers to am_hal_rtc.o(.text.dec_to_bcd) for [Anonymous Symbol]
    am_hal_rtc.o(.text.am_hal_rtc_time_get) refers to am_hal_rtc.o(.text.bcd_to_dec) for bcd_to_dec
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_time_get) refers to am_hal_rtc.o(.text.am_hal_rtc_time_get) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.bcd_to_dec) refers to am_hal_rtc.o(.text.bcd_to_dec) for [Anonymous Symbol]
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_alarm_interval_set) refers to am_hal_rtc.o(.text.am_hal_rtc_alarm_interval_set) for [Anonymous Symbol]
    am_hal_rtc.o(.text.am_hal_rtc_alarm_set) refers to am_hal_rtc.o(.text.dec_to_bcd) for dec_to_bcd
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_alarm_set) refers to am_hal_rtc.o(.text.am_hal_rtc_alarm_set) for [Anonymous Symbol]
    am_hal_rtc.o(.text.am_hal_rtc_alarm_get) refers to am_hal_rtc.o(.text.bcd_to_dec) for bcd_to_dec
    am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_alarm_get) refers to am_hal_rtc.o(.text.am_hal_rtc_alarm_get) for [Anonymous Symbol]
    am_hal_scard.o(.text.am_hal_scard_initialize) refers to am_hal_scard.o(.bss.g_am_hal_scard_states) for g_am_hal_scard_states
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_initialize) refers to am_hal_scard.o(.text.am_hal_scard_initialize) for [Anonymous Symbol]
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_deinitialize) refers to am_hal_scard.o(.text.am_hal_scard_deinitialize) for [Anonymous Symbol]
    am_hal_scard.o(.text.am_hal_scard_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_scard.o(.text.am_hal_scard_power_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_scard.o(.text.am_hal_scard_power_control) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.text.am_hal_scard_power_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_scard.o(.text.am_hal_scard_power_control) refers to am_hal_scard.o(.text.am_hal_scard_interrupt_clear) for am_hal_scard_interrupt_clear
    am_hal_scard.o(.text.am_hal_scard_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for am_hal_pwrctrl_periph_disable
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_power_control) refers to am_hal_scard.o(.text.am_hal_scard_power_control) for [Anonymous Symbol]
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_clear) refers to am_hal_scard.o(.text.am_hal_scard_interrupt_clear) for [Anonymous Symbol]
    am_hal_scard.o(.text.am_hal_scard_configure) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_scard.o(.text.am_hal_scard_configure) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_scard.o(.text.am_hal_scard_configure) refers to am_hal_scard.o(.text.am_hal_scard_control) for am_hal_scard_control
    am_hal_scard.o(.text.am_hal_scard_configure) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.text.am_hal_scard_configure) refers to am_hal_scard.o(.text.buffer_configure) for buffer_configure
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_configure) refers to am_hal_scard.o(.text.am_hal_scard_configure) for [Anonymous Symbol]
    am_hal_scard.o(.text.am_hal_scard_control) refers to am_hal_scard.o(.text.config_etucounter) for config_etucounter
    am_hal_scard.o(.text.am_hal_scard_control) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.text.am_hal_scard_control) refers to am_hal_scard.o(.text.config_baudrate) for config_baudrate
    am_hal_scard.o(.text.am_hal_scard_control) refers to am_hal_scard.o(.text.config_cardformat) for config_cardformat
    am_hal_scard.o(.text.am_hal_scard_control) refers to am_hal_scard.o(.text.config_parity) for config_parity
    am_hal_scard.o(.text.am_hal_scard_control) refers to am_hal_scard.o(.text.config_protocol) for config_protocol
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_control) refers to am_hal_scard.o(.text.am_hal_scard_control) for [Anonymous Symbol]
    am_hal_scard.o(.text.buffer_configure) refers to am_hal_queue.o(.text.am_hal_queue_init) for am_hal_queue_init
    am_hal_scard.o(.text.buffer_configure) refers to am_hal_scard.o(.text.am_hal_scard_interrupt_enable) for am_hal_scard_interrupt_enable
    am_hal_scard.o(.text.buffer_configure) refers to am_hal_scard.o(.text.am_hal_scard_interrupt_disable) for am_hal_scard_interrupt_disable
    am_hal_scard.o(.ARM.exidx.text.buffer_configure) refers to am_hal_scard.o(.text.buffer_configure) for [Anonymous Symbol]
    am_hal_scard.o(.text.scard_fifo_read) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.text.scard_fifo_read) refers to am_hal_scard.o(.data.g_WaitTime) for g_WaitTime
    am_hal_scard.o(.text.scard_fifo_read) refers to am_hal_scard.o(.text.config_etucounter) for config_etucounter
    am_hal_scard.o(.ARM.exidx.text.scard_fifo_read) refers to am_hal_scard.o(.text.scard_fifo_read) for [Anonymous Symbol]
    am_hal_scard.o(.text.config_etucounter) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.ARM.exidx.text.config_etucounter) refers to am_hal_scard.o(.text.config_etucounter) for [Anonymous Symbol]
    am_hal_scard.o(.text.scard_fifo_write) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.ARM.exidx.text.scard_fifo_write) refers to am_hal_scard.o(.text.scard_fifo_write) for [Anonymous Symbol]
    am_hal_scard.o(.text.am_hal_scard_transfer) refers to am_hal_scard.o(.text.write_timeout) for write_timeout
    am_hal_scard.o(.text.am_hal_scard_transfer) refers to am_hal_scard.o(.text.read_timeout) for read_timeout
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_transfer) refers to am_hal_scard.o(.text.am_hal_scard_transfer) for [Anonymous Symbol]
    am_hal_scard.o(.text.write_timeout) refers to am_hal_scard.o(.text.write_nonblocking) for write_nonblocking
    am_hal_scard.o(.text.write_timeout) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.ARM.exidx.text.write_timeout) refers to am_hal_scard.o(.text.write_timeout) for [Anonymous Symbol]
    am_hal_scard.o(.text.read_timeout) refers to am_hal_scard.o(.text.read_nonblocking) for read_nonblocking
    am_hal_scard.o(.text.read_timeout) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.ARM.exidx.text.read_timeout) refers to am_hal_scard.o(.text.read_timeout) for [Anonymous Symbol]
    am_hal_scard.o(.text.am_hal_scard_tx_flush) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_tx_flush) refers to am_hal_scard.o(.text.am_hal_scard_tx_flush) for [Anonymous Symbol]
    am_hal_scard.o(.text.am_hal_scard_interrupt_service) refers to am_hal_scard.o(.text.rx_queue_update) for rx_queue_update
    am_hal_scard.o(.text.am_hal_scard_interrupt_service) refers to am_hal_scard.o(.text.tx_queue_update) for tx_queue_update
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_service) refers to am_hal_scard.o(.text.am_hal_scard_interrupt_service) for [Anonymous Symbol]
    am_hal_scard.o(.text.rx_queue_update) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_scard.o(.text.rx_queue_update) refers to am_hal_scard.o(.text.scard_fifo_read) for scard_fifo_read
    am_hal_scard.o(.text.rx_queue_update) refers to am_hal_queue.o(.text.am_hal_queue_item_add) for am_hal_queue_item_add
    am_hal_scard.o(.text.rx_queue_update) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_scard.o(.ARM.exidx.text.rx_queue_update) refers to am_hal_scard.o(.text.rx_queue_update) for [Anonymous Symbol]
    am_hal_scard.o(.text.tx_queue_update) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_scard.o(.text.tx_queue_update) refers to am_hal_queue.o(.text.am_hal_queue_item_get) for am_hal_queue_item_get
    am_hal_scard.o(.text.tx_queue_update) refers to am_hal_scard.o(.text.scard_fifo_write) for scard_fifo_write
    am_hal_scard.o(.text.tx_queue_update) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_scard.o(.ARM.exidx.text.tx_queue_update) refers to am_hal_scard.o(.text.tx_queue_update) for [Anonymous Symbol]
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_enable) refers to am_hal_scard.o(.text.am_hal_scard_interrupt_enable) for [Anonymous Symbol]
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_disable) refers to am_hal_scard.o(.text.am_hal_scard_interrupt_disable) for [Anonymous Symbol]
    am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_status_get) refers to am_hal_scard.o(.text.am_hal_scard_interrupt_status_get) for [Anonymous Symbol]
    am_hal_scard.o(.text.config_baudrate) refers to am_hal_scard.o(.data.g_F_Integer) for g_F_Integer
    am_hal_scard.o(.text.config_baudrate) refers to am_hal_scard.o(.data.g_D_Integer) for g_D_Integer
    am_hal_scard.o(.ARM.exidx.text.config_baudrate) refers to am_hal_scard.o(.text.config_baudrate) for [Anonymous Symbol]
    am_hal_scard.o(.text.config_cardformat) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.ARM.exidx.text.config_cardformat) refers to am_hal_scard.o(.text.config_cardformat) for [Anonymous Symbol]
    am_hal_scard.o(.text.config_parity) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.ARM.exidx.text.config_parity) refers to am_hal_scard.o(.text.config_parity) for [Anonymous Symbol]
    am_hal_scard.o(.text.config_protocol) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_scard.o(.ARM.exidx.text.config_protocol) refers to am_hal_scard.o(.text.config_protocol) for [Anonymous Symbol]
    am_hal_scard.o(.text.write_nonblocking) refers to am_hal_queue.o(.text.am_hal_queue_item_add) for am_hal_queue_item_add
    am_hal_scard.o(.text.write_nonblocking) refers to am_hal_scard.o(.text.tx_queue_update) for tx_queue_update
    am_hal_scard.o(.text.write_nonblocking) refers to am_hal_scard.o(.text.scard_fifo_write) for scard_fifo_write
    am_hal_scard.o(.ARM.exidx.text.write_nonblocking) refers to am_hal_scard.o(.text.write_nonblocking) for [Anonymous Symbol]
    am_hal_scard.o(.text.read_nonblocking) refers to am_hal_scard.o(.text.rx_queue_update) for rx_queue_update
    am_hal_scard.o(.text.read_nonblocking) refers to am_hal_queue.o(.text.am_hal_queue_item_get) for am_hal_queue_item_get
    am_hal_scard.o(.text.read_nonblocking) refers to am_hal_scard.o(.text.scard_fifo_read) for scard_fifo_read
    am_hal_scard.o(.ARM.exidx.text.read_nonblocking) refers to am_hal_scard.o(.text.read_nonblocking) for [Anonymous Symbol]
    am_hal_secure_ota.o(.text.am_hal_ota_init) refers to am_hal_mcuctrl.o(.text.am_hal_mcuctrl_info_get) for am_hal_mcuctrl_info_get
    am_hal_secure_ota.o(.text.am_hal_ota_init) refers to am_hal_secure_ota.o(.bss.gSOtaState) for gSOtaState
    am_hal_secure_ota.o(.text.am_hal_ota_init) refers to am_hal_secure_ota.o(.text.erase_flash_page) for erase_flash_page
    am_hal_secure_ota.o(.ARM.exidx.text.am_hal_ota_init) refers to am_hal_secure_ota.o(.text.am_hal_ota_init) for [Anonymous Symbol]
    am_hal_secure_ota.o(.text.erase_flash_page) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_secure_ota.o(.text.erase_flash_page) refers to am_hal_flash.o(.text.am_hal_flash_page_erase) for am_hal_flash_page_erase
    am_hal_secure_ota.o(.text.erase_flash_page) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_secure_ota.o(.ARM.exidx.text.erase_flash_page) refers to am_hal_secure_ota.o(.text.erase_flash_page) for [Anonymous Symbol]
    am_hal_secure_ota.o(.text.am_hal_ota_add) refers to am_hal_secure_ota.o(.bss.gSOtaState) for gSOtaState
    am_hal_secure_ota.o(.text.am_hal_ota_add) refers to am_hal_flash.o(.text.am_hal_flash_program_main) for am_hal_flash_program_main
    am_hal_secure_ota.o(.ARM.exidx.text.am_hal_ota_add) refers to am_hal_secure_ota.o(.text.am_hal_ota_add) for [Anonymous Symbol]
    am_hal_secure_ota.o(.ARM.exidx.text.am_hal_get_ota_status) refers to am_hal_secure_ota.o(.text.am_hal_get_ota_status) for [Anonymous Symbol]
    am_hal_security.o(.text.am_hal_security_get_info) refers to am_hal_security.o(.bss.g_pFlash0) for g_pFlash0
    am_hal_security.o(.text.am_hal_security_get_info) refers to am_hal_security.o(.data.g_pFlash4) for g_pFlash4
    am_hal_security.o(.text.am_hal_security_get_info) refers to am_hal_security.o(.data.sblPreV2) for sblPreV2
    am_hal_security.o(.ARM.exidx.text.am_hal_security_get_info) refers to am_hal_security.o(.text.am_hal_security_get_info) for [Anonymous Symbol]
    am_hal_security.o(.ARM.exidx.text.am_hal_security_set_key) refers to am_hal_security.o(.text.am_hal_security_set_key) for [Anonymous Symbol]
    am_hal_security.o(.ARM.exidx.text.am_hal_security_get_lock_status) refers to am_hal_security.o(.text.am_hal_security_get_lock_status) for [Anonymous Symbol]
    am_hal_security.o(.ARM.exidx.text.am_hal_crc32_init) refers to am_hal_security.o(.text.am_hal_crc32_init) for [Anonymous Symbol]
    am_hal_security.o(.text.am_hal_crc32_accum) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_change) for am_hal_flash_delay_status_change
    am_hal_security.o(.text.am_hal_crc32_accum) refers to am_hal_security.o(.bss.g_CRC_buffer) for g_CRC_buffer
    am_hal_security.o(.ARM.exidx.text.am_hal_crc32_accum) refers to am_hal_security.o(.text.am_hal_crc32_accum) for [Anonymous Symbol]
    am_hal_security.o(.text.am_hal_crc32) refers to am_hal_security.o(.text.am_hal_crc32_init) for am_hal_crc32_init
    am_hal_security.o(.text.am_hal_crc32) refers to am_hal_security.o(.text.am_hal_crc32_accum) for am_hal_crc32_accum
    am_hal_security.o(.ARM.exidx.text.am_hal_crc32) refers to am_hal_security.o(.text.am_hal_crc32) for [Anonymous Symbol]
    am_hal_security.o(.text.am_hal_bootloader_exit) refers to am_hal_security.o(.text.am_hal_security_set_key) for am_hal_security_set_key
    am_hal_security.o(.text.am_hal_bootloader_exit) refers to am_hal_security.o(.text.am_hal_security_get_lock_status) for am_hal_security_get_lock_status
    am_hal_security.o(.text.am_hal_bootloader_exit) refers to am_hal_security.o(.text.bl_run_main) for bl_run_main
    am_hal_security.o(.ARM.exidx.text.am_hal_bootloader_exit) refers to am_hal_security.o(.text.am_hal_bootloader_exit) for [Anonymous Symbol]
    am_hal_security.o(.ARM.exidx.text.bl_run_main) refers to am_hal_security.o(.text.bl_run_main) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_config) refers to am_hal_stimer.o(.text.am_hal_stimer_config) for [Anonymous Symbol]
    am_hal_stimer.o(.text.am_hal_stimer_counter_get) refers to am_hal_global.o(.emb_text) for am_hal_triple_read
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_counter_get) refers to am_hal_stimer.o(.text.am_hal_stimer_counter_get) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_counter_clear) refers to am_hal_stimer.o(.text.am_hal_stimer_counter_clear) for [Anonymous Symbol]
    am_hal_stimer.o(.text.am_hal_stimer_compare_delta_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_stimer.o(.text.am_hal_stimer_compare_delta_set) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_compare_delta_set) refers to am_hal_stimer.o(.text.am_hal_stimer_compare_delta_set) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_compare_get) refers to am_hal_stimer.o(.text.am_hal_stimer_compare_get) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_capture_start) refers to am_hal_stimer.o(.text.am_hal_stimer_capture_start) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_capture_stop) refers to am_hal_stimer.o(.text.am_hal_stimer_capture_stop) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_nvram_set) refers to am_hal_stimer.o(.text.am_hal_stimer_nvram_set) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_nvram_get) refers to am_hal_stimer.o(.text.am_hal_stimer_nvram_get) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_capture_get) refers to am_hal_stimer.o(.text.am_hal_stimer_capture_get) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_enable) refers to am_hal_stimer.o(.text.am_hal_stimer_int_enable) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_enable_get) refers to am_hal_stimer.o(.text.am_hal_stimer_int_enable_get) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_disable) refers to am_hal_stimer.o(.text.am_hal_stimer_int_disable) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_set) refers to am_hal_stimer.o(.text.am_hal_stimer_int_set) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_clear) refers to am_hal_stimer.o(.text.am_hal_stimer_int_clear) for [Anonymous Symbol]
    am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_status_get) refers to am_hal_stimer.o(.text.am_hal_stimer_int_status_get) for [Anonymous Symbol]
    am_hal_sysctrl.o(.text.am_hal_sysctrl_sleep) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_sysctrl.o(.text.am_hal_sysctrl_sleep) refers to am_hal_sysctrl.o(.bss.g_am_hal_sysctrl_sleep_count) for g_am_hal_sysctrl_sleep_count
    am_hal_sysctrl.o(.text.am_hal_sysctrl_sleep) refers to am_hal_reset.o(.bss.gAmHalResetStatus) for gAmHalResetStatus
    am_hal_sysctrl.o(.text.am_hal_sysctrl_sleep) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_sysctrl.o(.text.am_hal_sysctrl_sleep) refers to am_hal_sysctrl.o(.bss.g_ui32BusWriteFlush) for g_ui32BusWriteFlush
    am_hal_sysctrl.o(.text.am_hal_sysctrl_sleep) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_sleep) refers to am_hal_sysctrl.o(.text.am_hal_sysctrl_sleep) for [Anonymous Symbol]
    am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_fpu_enable) refers to am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_enable) for [Anonymous Symbol]
    am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_fpu_disable) refers to am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_disable) for [Anonymous Symbol]
    am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_stacking_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_stacking_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_fpu_stacking_enable) refers to am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_stacking_enable) for [Anonymous Symbol]
    am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_stacking_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_stacking_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_fpu_stacking_disable) refers to am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_stacking_disable) for [Anonymous Symbol]
    am_hal_sysctrl.o(.text.am_hal_sysctrl_aircr_reset) refers to am_hal_sysctrl.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_aircr_reset) refers to am_hal_sysctrl.o(.text.am_hal_sysctrl_aircr_reset) for [Anonymous Symbol]
    am_hal_sysctrl.o(.ARM.exidx.text.__NVIC_SystemReset) refers to am_hal_sysctrl.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_start) refers to am_hal_systick.o(.text.am_hal_systick_start) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_stop) refers to am_hal_systick.o(.text.am_hal_systick_stop) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_int_enable) refers to am_hal_systick.o(.text.am_hal_systick_int_enable) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_int_disable) refers to am_hal_systick.o(.text.am_hal_systick_int_disable) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_int_status_get) refers to am_hal_systick.o(.text.am_hal_systick_int_status_get) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_reset) refers to am_hal_systick.o(.text.am_hal_systick_reset) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_load) refers to am_hal_systick.o(.text.am_hal_systick_load) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_count) refers to am_hal_systick.o(.text.am_hal_systick_count) for [Anonymous Symbol]
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_wait_ticks) refers to am_hal_systick.o(.text.am_hal_systick_wait_ticks) for [Anonymous Symbol]
    am_hal_systick.o(.text.am_hal_systick_delay_us) refers to am_hal_systick.o(.text.am_hal_systick_wait_ticks) for am_hal_systick_wait_ticks
    am_hal_systick.o(.ARM.exidx.text.am_hal_systick_delay_us) refers to am_hal_systick.o(.text.am_hal_systick_delay_us) for [Anonymous Symbol]
    am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_clock_enable) refers to am_hal_tpiu.o(.text.am_hal_tpiu_clock_enable) for [Anonymous Symbol]
    am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_clock_disable) refers to am_hal_tpiu.o(.text.am_hal_tpiu_clock_disable) for [Anonymous Symbol]
    am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_port_width_set) refers to am_hal_tpiu.o(.text.am_hal_tpiu_port_width_set) for [Anonymous Symbol]
    am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_supported_port_width_get) refers to am_hal_tpiu.o(.text.am_hal_tpiu_supported_port_width_get) for [Anonymous Symbol]
    am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_port_width_get) refers to am_hal_tpiu.o(.text.am_hal_tpiu_port_width_get) for [Anonymous Symbol]
    am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_configure) refers to am_hal_tpiu.o(.text.am_hal_tpiu_configure) for [Anonymous Symbol]
    am_hal_tpiu.o(.text.am_hal_tpiu_enable) refers to am_hal_clkgen.o(.text.am_hal_clkgen_status_get) for am_hal_clkgen_status_get
    am_hal_tpiu.o(.text.am_hal_tpiu_enable) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_enable) refers to am_hal_tpiu.o(.text.am_hal_tpiu_enable) for [Anonymous Symbol]
    am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_disable) refers to am_hal_tpiu.o(.text.am_hal_tpiu_disable) for [Anonymous Symbol]
    am_hal_uart.o(.text.am_hal_uart_initialize) refers to am_hal_uart.o(.bss.g_am_hal_uart_states) for g_am_hal_uart_states
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_initialize) refers to am_hal_uart.o(.text.am_hal_uart_initialize) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_deinitialize) refers to am_hal_uart.o(.text.am_hal_uart_deinitialize) for [Anonymous Symbol]
    am_hal_uart.o(.text.am_hal_uart_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_uart.o(.text.am_hal_uart_power_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_uart.o(.text.am_hal_uart_power_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_uart.o(.text.am_hal_uart_power_control) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_clear) for am_hal_uart_interrupt_clear
    am_hal_uart.o(.text.am_hal_uart_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for am_hal_pwrctrl_periph_disable
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_power_control) refers to am_hal_uart.o(.text.am_hal_uart_power_control) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_clear) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_clear) for [Anonymous Symbol]
    am_hal_uart.o(.text.am_hal_uart_configure) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_uart.o(.text.am_hal_uart_configure) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_uart.o(.text.am_hal_uart_configure) refers to am_hal_uart.o(.text.config_baudrate) for config_baudrate
    am_hal_uart.o(.text.am_hal_uart_configure) refers to am_hal_uart.o(.text.buffer_configure) for buffer_configure
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_configure) refers to am_hal_uart.o(.text.am_hal_uart_configure) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.config_baudrate) refers to am_hal_uart.o(.text.config_baudrate) for [Anonymous Symbol]
    am_hal_uart.o(.text.buffer_configure) refers to am_hal_queue.o(.text.am_hal_queue_init) for am_hal_queue_init
    am_hal_uart.o(.text.buffer_configure) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_enable) for am_hal_uart_interrupt_enable
    am_hal_uart.o(.text.buffer_configure) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_disable) for am_hal_uart_interrupt_disable
    am_hal_uart.o(.ARM.exidx.text.buffer_configure) refers to am_hal_uart.o(.text.buffer_configure) for [Anonymous Symbol]
    am_hal_uart.o(.text.am_hal_uart_transfer) refers to am_hal_uart.o(.text.write_timeout) for write_timeout
    am_hal_uart.o(.text.am_hal_uart_transfer) refers to am_hal_uart.o(.text.read_timeout) for read_timeout
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_transfer) refers to am_hal_uart.o(.text.am_hal_uart_transfer) for [Anonymous Symbol]
    am_hal_uart.o(.text.write_timeout) refers to am_hal_uart.o(.text.write_nonblocking) for write_nonblocking
    am_hal_uart.o(.text.write_timeout) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_uart.o(.ARM.exidx.text.write_timeout) refers to am_hal_uart.o(.text.write_timeout) for [Anonymous Symbol]
    am_hal_uart.o(.text.read_timeout) refers to am_hal_uart.o(.text.read_nonblocking) for read_nonblocking
    am_hal_uart.o(.text.read_timeout) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_uart.o(.ARM.exidx.text.read_timeout) refers to am_hal_uart.o(.text.read_timeout) for [Anonymous Symbol]
    am_hal_uart.o(.text.am_hal_uart_tx_flush) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_tx_flush) refers to am_hal_uart.o(.text.am_hal_uart_tx_flush) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_flags_get) refers to am_hal_uart.o(.text.am_hal_uart_flags_get) for [Anonymous Symbol]
    am_hal_uart.o(.text.am_hal_uart_fifo_read) refers to am_hal_uart.o(.text.uart_fifo_read) for uart_fifo_read
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_fifo_read) refers to am_hal_uart.o(.text.am_hal_uart_fifo_read) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.uart_fifo_read) refers to am_hal_uart.o(.text.uart_fifo_read) for [Anonymous Symbol]
    am_hal_uart.o(.text.am_hal_uart_fifo_write) refers to am_hal_uart.o(.text.uart_fifo_write) for uart_fifo_write
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_fifo_write) refers to am_hal_uart.o(.text.am_hal_uart_fifo_write) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.uart_fifo_write) refers to am_hal_uart.o(.text.uart_fifo_write) for [Anonymous Symbol]
    am_hal_uart.o(.text.am_hal_uart_interrupt_service) refers to am_hal_uart.o(.text.rx_queue_update) for rx_queue_update
    am_hal_uart.o(.text.am_hal_uart_interrupt_service) refers to am_hal_uart.o(.text.tx_queue_update) for tx_queue_update
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_service) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_service) for [Anonymous Symbol]
    am_hal_uart.o(.text.rx_queue_update) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_uart.o(.text.rx_queue_update) refers to am_hal_uart.o(.text.uart_fifo_read) for uart_fifo_read
    am_hal_uart.o(.text.rx_queue_update) refers to am_hal_queue.o(.text.am_hal_queue_item_add) for am_hal_queue_item_add
    am_hal_uart.o(.text.rx_queue_update) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_uart.o(.ARM.exidx.text.rx_queue_update) refers to am_hal_uart.o(.text.rx_queue_update) for [Anonymous Symbol]
    am_hal_uart.o(.text.tx_queue_update) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_uart.o(.text.tx_queue_update) refers to am_hal_queue.o(.text.am_hal_queue_item_get) for am_hal_queue_item_get
    am_hal_uart.o(.text.tx_queue_update) refers to am_hal_uart.o(.text.uart_fifo_write) for uart_fifo_write
    am_hal_uart.o(.text.tx_queue_update) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_uart.o(.ARM.exidx.text.tx_queue_update) refers to am_hal_uart.o(.text.tx_queue_update) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_enable) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_enable) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_disable) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_disable) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_status_get) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_status_get) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_enable_get) refers to am_hal_uart.o(.text.am_hal_uart_interrupt_enable_get) for [Anonymous Symbol]
    am_hal_uart.o(.ARM.exidx.text.am_hal_uart_control) refers to am_hal_uart.o(.text.am_hal_uart_control) for [Anonymous Symbol]
    am_hal_uart.o(.text.write_nonblocking) refers to am_hal_queue.o(.text.am_hal_queue_item_add) for am_hal_queue_item_add
    am_hal_uart.o(.text.write_nonblocking) refers to am_hal_uart.o(.text.tx_queue_update) for tx_queue_update
    am_hal_uart.o(.text.write_nonblocking) refers to am_hal_uart.o(.text.uart_fifo_write) for uart_fifo_write
    am_hal_uart.o(.ARM.exidx.text.write_nonblocking) refers to am_hal_uart.o(.text.write_nonblocking) for [Anonymous Symbol]
    am_hal_uart.o(.text.read_nonblocking) refers to am_hal_uart.o(.text.rx_queue_update) for rx_queue_update
    am_hal_uart.o(.text.read_nonblocking) refers to am_hal_queue.o(.text.am_hal_queue_item_get) for am_hal_queue_item_get
    am_hal_uart.o(.text.read_nonblocking) refers to am_hal_uart.o(.text.uart_fifo_read) for uart_fifo_read
    am_hal_uart.o(.ARM.exidx.text.read_nonblocking) refers to am_hal_uart.o(.text.read_nonblocking) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_init) refers to am_hal_wdt.o(.text.am_hal_wdt_init) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_start) refers to am_hal_wdt.o(.text.am_hal_wdt_start) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_halt) refers to am_hal_wdt.o(.text.am_hal_wdt_halt) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_lock_and_start) refers to am_hal_wdt.o(.text.am_hal_wdt_lock_and_start) for [Anonymous Symbol]
    am_hal_wdt.o(.text.am_hal_wdt_int_status_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_wdt.o(.text.am_hal_wdt_int_status_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_status_get) refers to am_hal_wdt.o(.text.am_hal_wdt_int_status_get) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_set) refers to am_hal_wdt.o(.text.am_hal_wdt_int_set) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_clear) refers to am_hal_wdt.o(.text.am_hal_wdt_int_clear) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_enable) refers to am_hal_wdt.o(.text.am_hal_wdt_int_enable) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_enable_get) refers to am_hal_wdt.o(.text.am_hal_wdt_int_enable_get) for [Anonymous Symbol]
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_disable) refers to am_hal_wdt.o(.text.am_hal_wdt_int_disable) for [Anonymous Symbol]
    am_hal_wdt.o(.text.am_hal_wdt_counter_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_wdt.o(.text.am_hal_wdt_counter_get) refers to am_hal_global.o(.emb_text) for am_hal_triple_read
    am_hal_wdt.o(.text.am_hal_wdt_counter_get) refers to am_hal_wdt.o(.rodata.str1.1) for .L.str
    am_hal_wdt.o(.text.am_hal_wdt_counter_get) refers to am_hal_debug.o(.text.am_hal_debug_error) for am_hal_debug_error
    am_hal_wdt.o(.text.am_hal_wdt_counter_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_counter_get) refers to am_hal_wdt.o(.text.am_hal_wdt_counter_get) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_mass_erase) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_mass_erase) refers to am_hal_flash.o(.text.am_hal_flash_mass_erase) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_page_erase) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_page_erase) refers to am_hal_flash.o(.text.am_hal_flash_page_erase) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_program_main) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_program_main) refers to am_hal_flash.o(.text.am_hal_flash_program_main) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_clear_bits) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_clear_bits) refers to am_hal_flash.o(.text.am_hal_flash_clear_bits) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_program_info) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_program_info) refers to am_hal_flash.o(.text.am_hal_flash_program_info) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_erase_info) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_erase_info) refers to am_hal_flash.o(.text.am_hal_flash_erase_info) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_erase_main_plus_info) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_erase_main_plus_info) refers to am_hal_flash.o(.text.am_hal_flash_erase_main_plus_info) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_erase_main_plus_info_both_instances) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_erase_main_plus_info_both_instances) refers to am_hal_flash.o(.text.am_hal_flash_erase_main_plus_info_both_instances) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_recovery) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_recovery) refers to am_hal_flash.o(.text.am_hal_flash_recovery) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_delay) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_delay) refers to am_hal_flash.o(.text.am_hal_flash_delay) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_delay_status_change) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_delay_status_change) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_change) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_delay_status_check) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_delay_status_check) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for [Anonymous Symbol]
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_customer_info_signature_check) refers to am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_info_signature_set) refers to am_hal_flash.o(.text.customer_info_signature_set) for customer_info_signature_set
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_signature_set) refers to am_hal_flash.o(.text.am_hal_flash_info_signature_set) for [Anonymous Symbol]
    am_hal_flash.o(.text.customer_info_signature_set) refers to am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check) for am_hal_flash_customer_info_signature_check
    am_hal_flash.o(.text.customer_info_signature_set) refers to am_hal_flash.o(.text.customer_info_signature_erased) for customer_info_signature_erased
    am_hal_flash.o(.text.customer_info_signature_set) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.customer_info_signature_set) refers to am_hal_flash.o(.text.customer_info_signature_set) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_info_erase_disable) refers to am_hal_flash.o(.text.customer_info_signature_set) for customer_info_signature_set
    am_hal_flash.o(.text.am_hal_flash_info_erase_disable) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_erase_disable) refers to am_hal_flash.o(.text.am_hal_flash_info_erase_disable) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_info_erase_disable_check) refers to am_hal_flash.o(.text.customer_info_signature_erased) for customer_info_signature_erased
    am_hal_flash.o(.text.am_hal_flash_info_erase_disable_check) refers to am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check) for am_hal_flash_customer_info_signature_check
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_erase_disable_check) refers to am_hal_flash.o(.text.am_hal_flash_info_erase_disable_check) for [Anonymous Symbol]
    am_hal_flash.o(.ARM.exidx.text.customer_info_signature_erased) refers to am_hal_flash.o(.text.customer_info_signature_erased) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_info_program_disable) refers to am_hal_flash.o(.text.customer_info_signature_set) for customer_info_signature_set
    am_hal_flash.o(.text.am_hal_flash_info_program_disable) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_program_disable) refers to am_hal_flash.o(.text.am_hal_flash_info_program_disable) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_info_program_disable_get) refers to am_hal_flash.o(.text.customer_info_signature_erased) for customer_info_signature_erased
    am_hal_flash.o(.text.am_hal_flash_info_program_disable_get) refers to am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check) for am_hal_flash_customer_info_signature_check
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_program_disable_get) refers to am_hal_flash.o(.text.am_hal_flash_info_program_disable_get) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_wipe_flash_enable) refers to am_hal_flash.o(.text.customer_info_signature_set) for customer_info_signature_set
    am_hal_flash.o(.text.am_hal_flash_wipe_flash_enable) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_wipe_flash_enable) refers to am_hal_flash.o(.text.am_hal_flash_wipe_flash_enable) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_wipe_flash_enable_check) refers to am_hal_flash.o(.text.customer_info_signature_erased) for customer_info_signature_erased
    am_hal_flash.o(.text.am_hal_flash_wipe_flash_enable_check) refers to am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check) for am_hal_flash_customer_info_signature_check
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_wipe_flash_enable_check) refers to am_hal_flash.o(.text.am_hal_flash_wipe_flash_enable_check) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_wipe_sram_enable) refers to am_hal_flash.o(.text.customer_info_signature_set) for customer_info_signature_set
    am_hal_flash.o(.text.am_hal_flash_wipe_sram_enable) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_wipe_sram_enable) refers to am_hal_flash.o(.text.am_hal_flash_wipe_sram_enable) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_wipe_sram_enable_check) refers to am_hal_flash.o(.text.customer_info_signature_erased) for customer_info_signature_erased
    am_hal_flash.o(.text.am_hal_flash_wipe_sram_enable_check) refers to am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check) for am_hal_flash_customer_info_signature_check
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_wipe_sram_enable_check) refers to am_hal_flash.o(.text.am_hal_flash_wipe_sram_enable_check) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_swo_disable) refers to am_hal_flash.o(.text.customer_info_signature_set) for customer_info_signature_set
    am_hal_flash.o(.text.am_hal_flash_swo_disable) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_swo_disable) refers to am_hal_flash.o(.text.am_hal_flash_swo_disable) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_swo_disable_check) refers to am_hal_flash.o(.text.customer_info_signature_erased) for customer_info_signature_erased
    am_hal_flash.o(.text.am_hal_flash_swo_disable_check) refers to am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check) for am_hal_flash_customer_info_signature_check
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_swo_disable_check) refers to am_hal_flash.o(.text.am_hal_flash_swo_disable_check) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_debugger_disable) refers to am_hal_flash.o(.text.customer_info_signature_set) for customer_info_signature_set
    am_hal_flash.o(.text.am_hal_flash_debugger_disable) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_debugger_disable) refers to am_hal_flash.o(.text.am_hal_flash_debugger_disable) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_debugger_disable_check) refers to am_hal_flash.o(.text.customer_info_signature_erased) for customer_info_signature_erased
    am_hal_flash.o(.text.am_hal_flash_debugger_disable_check) refers to am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check) for am_hal_flash_customer_info_signature_check
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_debugger_disable_check) refers to am_hal_flash.o(.text.am_hal_flash_debugger_disable_check) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_copy_protect_set) refers to am_hal_flash.o(.text.generate_chunk_mask) for generate_chunk_mask
    am_hal_flash.o(.text.am_hal_flash_copy_protect_set) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_copy_protect_set) refers to am_hal_flash.o(.text.am_hal_flash_copy_protect_set) for [Anonymous Symbol]
    am_hal_flash.o(.ARM.exidx.text.generate_chunk_mask) refers to am_hal_flash.o(.text.generate_chunk_mask) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_copy_protect_check) refers to am_hal_flash.o(.text.generate_chunk_mask) for generate_chunk_mask
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_copy_protect_check) refers to am_hal_flash.o(.text.am_hal_flash_copy_protect_check) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_write_protect_set) refers to am_hal_flash.o(.text.generate_chunk_mask) for generate_chunk_mask
    am_hal_flash.o(.text.am_hal_flash_write_protect_set) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_write_protect_set) refers to am_hal_flash.o(.text.am_hal_flash_write_protect_set) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_write_protect_check) refers to am_hal_flash.o(.text.generate_chunk_mask) for generate_chunk_mask
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_write_protect_check) refers to am_hal_flash.o(.text.am_hal_flash_write_protect_check) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_load_ui32) refers to am_hal_flash.o(.rodata.g_am_hal_flash) for g_am_hal_flash
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_load_ui32) refers to am_hal_flash.o(.text.am_hal_flash_load_ui32) for [Anonymous Symbol]
    am_hal_flash.o(.text.am_hal_flash_store_ui32) refers to am_hal_flash.o(.rodata..L__const.am_hal_flash_store_ui32.SRAM_write_ui32) for .L__const.am_hal_flash_store_ui32.SRAM_write_ui32
    am_hal_flash.o(.ARM.exidx.text.am_hal_flash_store_ui32) refers to am_hal_flash.o(.text.am_hal_flash_store_ui32) for [Anonymous Symbol]
    am_hal_adc.o(.text.am_hal_adc_initialize) refers to am_hal_adc.o(.bss.g_ADCState) for g_ADCState
    am_hal_adc.o(.text.am_hal_adc_initialize) refers to am_hal_adc.o(.bss.g_ADCSlotsConfigured) for g_ADCSlotsConfigured
    am_hal_adc.o(.text.am_hal_adc_initialize) refers to am_hal_flash.o(.text.am_hal_flash_load_ui32) for am_hal_flash_load_ui32
    am_hal_adc.o(.text.am_hal_adc_initialize) refers to am_hal_adc.o(.bss.priv_temp_trims) for priv_temp_trims
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_initialize) refers to am_hal_adc.o(.text.am_hal_adc_initialize) for [Anonymous Symbol]
    am_hal_adc.o(.text.am_hal_adc_deinitialize) refers to am_hal_adc.o(.text.am_hal_adc_disable) for am_hal_adc_disable
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_deinitialize) refers to am_hal_adc.o(.text.am_hal_adc_deinitialize) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_disable) refers to am_hal_adc.o(.text.am_hal_adc_disable) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_configure) refers to am_hal_adc.o(.text.am_hal_adc_configure) for [Anonymous Symbol]
    am_hal_adc.o(.text.am_hal_adc_configure_slot) refers to am_hal_adc.o(.bss.g_ADCSlotsConfigured) for g_ADCSlotsConfigured
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_configure_slot) refers to am_hal_adc.o(.text.am_hal_adc_configure_slot) for [Anonymous Symbol]
    am_hal_adc.o(.text.am_hal_adc_configure_dma) refers to am_hal_adc.o(.bss.g_ADCSlotsConfigured) for g_ADCSlotsConfigured
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_configure_dma) refers to am_hal_adc.o(.text.am_hal_adc_configure_dma) for [Anonymous Symbol]
    am_hal_adc.o(.text.am_hal_adc_control) refers to am_hal_adc.o(.bss.priv_temp_trims) for priv_temp_trims
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_control) refers to am_hal_adc.o(.text.am_hal_adc_control) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_enable) refers to am_hal_adc.o(.text.am_hal_adc_enable) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_status_get) refers to am_hal_adc.o(.text.am_hal_adc_status_get) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_interrupt_enable) refers to am_hal_adc.o(.text.am_hal_adc_interrupt_enable) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_interrupt_disable) refers to am_hal_adc.o(.text.am_hal_adc_interrupt_disable) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_interrupt_status) refers to am_hal_adc.o(.text.am_hal_adc_interrupt_status) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_interrupt_clear) refers to am_hal_adc.o(.text.am_hal_adc_interrupt_clear) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_samples_read) refers to am_hal_adc.o(.text.am_hal_adc_samples_read) for [Anonymous Symbol]
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_sw_trigger) refers to am_hal_adc.o(.text.am_hal_adc_sw_trigger) for [Anonymous Symbol]
    am_hal_adc.o(.text.am_hal_adc_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_adc.o(.text.am_hal_adc_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for am_hal_pwrctrl_periph_disable
    am_hal_adc.o(.ARM.exidx.text.am_hal_adc_power_control) refers to am_hal_adc.o(.text.am_hal_adc_power_control) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_wakeup_set) refers to am_hal_ble.o(.text.am_hal_ble_wakeup_set) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_initialize) refers to am_hal_ble.o(.bss.g_sBLEState) for g_sBLEState
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_initialize) refers to am_hal_ble.o(.text.am_hal_ble_initialize) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_deinitialize) refers to am_hal_ble.o(.text.am_hal_ble_deinitialize) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_config) refers to am_hal_ble_patch.o(.data.am_ble_nvds_patch) for am_ble_nvds_patch
    am_hal_ble.o(.text.am_hal_ble_config) refers to am_hal_ble.o(.text.am_hal_ble_crc_nz) for am_hal_ble_crc_nz
    am_hal_ble.o(.text.am_hal_ble_config) refers to am_hal_ble.o(.bss.g_sBLEState) for g_sBLEState
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_config) refers to am_hal_ble.o(.text.am_hal_ble_config) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_crc_nz) refers to am_hal_ble.o(.rodata.ccitt_table) for ccitt_table
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_crc_nz) refers to am_hal_ble.o(.text.am_hal_ble_crc_nz) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_power_control) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.am_hal_ble_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_ble.o(.text.am_hal_ble_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for am_hal_pwrctrl_periph_disable
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_power_control) refers to am_hal_ble.o(.text.am_hal_ble_power_control) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_boot) refers to am_hal_ble.o(.text.am_hal_ble_default_copy_patch_apply) for am_hal_ble_default_copy_patch_apply
    am_hal_ble.o(.text.am_hal_ble_boot) refers to am_hal_ble.o(.text.am_hal_ble_default_trim_set_ramcode) for am_hal_ble_default_trim_set_ramcode
    am_hal_ble.o(.text.am_hal_ble_boot) refers to am_hal_ble.o(.text.am_hal_ble_default_patch_apply) for am_hal_ble_default_patch_apply
    am_hal_ble.o(.text.am_hal_ble_boot) refers to am_hal_ble.o(.text.am_hal_ble_patch_complete) for am_hal_ble_patch_complete
    am_hal_ble.o(.text.am_hal_ble_boot) refers to am_hal_ble.o(.text.am_hal_ble_check_32k_clock) for am_hal_ble_check_32k_clock
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_boot) refers to am_hal_ble.o(.text.am_hal_ble_boot) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_default_copy_patch_apply) refers to am_hal_ble_patch.o(.data.am_hal_ble_default_copy_patches) for am_hal_ble_default_copy_patches
    am_hal_ble.o(.text.am_hal_ble_default_copy_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_crc_nz) for am_hal_ble_crc_nz
    am_hal_ble.o(.text.am_hal_ble_default_copy_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_patch_apply) for am_hal_ble_patch_apply
    am_hal_ble.o(.text.am_hal_ble_default_copy_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_patch_copy_end_apply) for am_hal_ble_patch_copy_end_apply
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_default_copy_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_default_copy_patch_apply) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_default_trim_set_ramcode) refers to am_hal_ble_patch_b0.o(.data.am_ble_performance_patch_b0) for am_ble_performance_patch_b0
    am_hal_ble.o(.text.am_hal_ble_default_trim_set_ramcode) refers to am_hal_ble_patch.o(.data.am_ble_performance_patch) for am_ble_performance_patch
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_default_trim_set_ramcode) refers to am_hal_ble.o(.text.am_hal_ble_default_trim_set_ramcode) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_default_patch_apply) refers to am_hal_ble_patch.o(.rodata.am_hal_ble_num_default_patches) for am_hal_ble_num_default_patches
    am_hal_ble.o(.text.am_hal_ble_default_patch_apply) refers to am_hal_ble_patch.o(.data.am_hal_ble_default_patches) for am_hal_ble_default_patches
    am_hal_ble.o(.text.am_hal_ble_default_patch_apply) refers to am_hal_ble_patch_b0.o(.rodata.am_hal_ble_num_default_patches_b0) for am_hal_ble_num_default_patches_b0
    am_hal_ble.o(.text.am_hal_ble_default_patch_apply) refers to am_hal_ble_patch_b0.o(.data.am_hal_ble_default_patches_b0) for am_hal_ble_default_patches_b0
    am_hal_ble.o(.text.am_hal_ble_default_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_crc_nz) for am_hal_ble_crc_nz
    am_hal_ble.o(.text.am_hal_ble_default_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_patch_apply) for am_hal_ble_patch_apply
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_default_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_default_patch_apply) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_patch_complete) refers to am_hal_ble.o(.text.am_hal_ble_blocking_transfer) for am_hal_ble_blocking_transfer
    am_hal_ble.o(.text.am_hal_ble_patch_complete) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.am_hal_ble_patch_complete) refers to am_hal_ble.o(.text.am_hal_ble_wakeup_set) for am_hal_ble_wakeup_set
    am_hal_ble.o(.text.am_hal_ble_patch_complete) refers to am_hal_ble.o(.text.am_hal_ble_load_modex_trim_set) for am_hal_ble_load_modex_trim_set
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_patch_complete) refers to am_hal_ble.o(.text.am_hal_ble_patch_complete) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_check_32k_clock) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_read) for am_hal_ble_plf_reg_read
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_check_32k_clock) refers to am_hal_ble.o(.text.am_hal_ble_check_32k_clock) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_blocking_hci_write) for am_hal_ble_blocking_hci_write
    am_hal_ble.o(.text.am_hal_ble_patch_apply) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.am_hal_ble_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_blocking_transfer) for am_hal_ble_blocking_transfer
    am_hal_ble.o(.text.am_hal_ble_patch_apply) refers to am_hal_ble.o(.text.buffer_compare) for buffer_compare
    am_hal_ble.o(.text.am_hal_ble_patch_apply) refers to am_hal_ble.o(.bss.g_psPatchBuffer) for g_psPatchBuffer
    am_hal_ble.o(.text.am_hal_ble_patch_apply) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_patch_apply) refers to am_hal_ble.o(.text.am_hal_ble_patch_apply) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_blocking_hci_write) refers to am_hal_ble.o(.text.am_hal_ble_blocking_transfer) for am_hal_ble_blocking_transfer
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_blocking_hci_write) refers to am_hal_ble.o(.text.am_hal_ble_blocking_hci_write) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_ble.o(.text.am_hal_ble_check_status) for am_hal_ble_check_status
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_ble.o(.text.am_hal_ble_wakeup_set) for am_hal_ble_wakeup_set
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_ble.o(.text.am_hal_ble_bus_lock) for am_hal_ble_bus_lock
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_ble.o(.text.am_hal_ble_cmd_write) for am_hal_ble_cmd_write
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_ble.o(.text.am_hal_ble_fifo_drain) for am_hal_ble_fifo_drain
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ble.o(.text.am_hal_ble_blocking_transfer) refers to am_hal_ble.o(.text.am_hal_ble_bus_release) for am_hal_ble_bus_release
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_blocking_transfer) refers to am_hal_ble.o(.text.am_hal_ble_blocking_transfer) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.buffer_compare) refers to am_hal_ble.o(.text.buffer_compare) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_patch_copy_end_apply) refers to am_hal_ble.o(.text.am_hal_ble_blocking_hci_write) for am_hal_ble_blocking_hci_write
    am_hal_ble.o(.text.am_hal_ble_patch_copy_end_apply) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.am_hal_ble_patch_copy_end_apply) refers to am_hal_ble.o(.text.am_hal_ble_blocking_transfer) for am_hal_ble_blocking_transfer
    am_hal_ble.o(.text.am_hal_ble_patch_copy_end_apply) refers to am_hal_ble.o(.text.buffer_compare) for buffer_compare
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_patch_copy_end_apply) refers to am_hal_ble.o(.text.am_hal_ble_patch_copy_end_apply) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_load_modex_trim_set) refers to am_hal_ble.o(.text.am_hal_ble_read_trimdata_from_info1) for am_hal_ble_read_trimdata_from_info1
    am_hal_ble.o(.text.am_hal_ble_load_modex_trim_set) refers to am_hal_ble.o(.text.am_hal_ble_transmitter_modex_set) for am_hal_ble_transmitter_modex_set
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_load_modex_trim_set) refers to am_hal_ble.o(.text.am_hal_ble_load_modex_trim_set) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_trim_set) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_read) for am_hal_ble_plf_reg_read
    am_hal_ble.o(.text.am_hal_ble_trim_set) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_write) for am_hal_ble_plf_reg_write
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_trim_set) refers to am_hal_ble.o(.text.am_hal_ble_trim_set) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_plf_reg_read) refers to am_hal_ble.o(.text.am_hal_ble_vs_command_build) for am_hal_ble_vs_command_build
    am_hal_ble.o(.text.am_hal_ble_plf_reg_read) refers to am_hal_ble.o(.text.am_hal_ble_blocking_hci_write) for am_hal_ble_blocking_hci_write
    am_hal_ble.o(.text.am_hal_ble_plf_reg_read) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.am_hal_ble_plf_reg_read) refers to am_hal_ble.o(.text.am_hal_ble_blocking_hci_read) for am_hal_ble_blocking_hci_read
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_plf_reg_read) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_read) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_plf_reg_write) refers to am_hal_ble.o(.text.am_hal_ble_vs_command_build) for am_hal_ble_vs_command_build
    am_hal_ble.o(.text.am_hal_ble_plf_reg_write) refers to am_hal_ble.o(.text.am_hal_ble_blocking_hci_write) for am_hal_ble_blocking_hci_write
    am_hal_ble.o(.text.am_hal_ble_plf_reg_write) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.am_hal_ble_plf_reg_write) refers to am_hal_ble.o(.text.am_hal_ble_blocking_hci_read) for am_hal_ble_blocking_hci_read
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_plf_reg_write) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_write) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_vs_command_build) refers to am_hal_ble.o(.text.am_hal_ble_vs_command_build) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_blocking_hci_read) refers to am_hal_ble.o(.text.am_hal_ble_blocking_transfer) for am_hal_ble_blocking_transfer
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_blocking_hci_read) refers to am_hal_ble.o(.text.am_hal_ble_blocking_hci_read) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_nonblocking_hci_write) refers to am_hal_ble.o(.text.am_hal_ble_nonblocking_transfer) for am_hal_ble_nonblocking_transfer
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_nonblocking_hci_write) refers to am_hal_ble.o(.text.am_hal_ble_nonblocking_hci_write) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_nonblocking_transfer) refers to am_hal_ble.o(.text.nonblocking_write) for nonblocking_write
    am_hal_ble.o(.text.am_hal_ble_nonblocking_transfer) refers to am_hal_ble.o(.text.nonblocking_read) for nonblocking_read
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_nonblocking_transfer) refers to am_hal_ble.o(.text.am_hal_ble_nonblocking_transfer) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_nonblocking_hci_read) refers to am_hal_ble.o(.text.am_hal_ble_check_irq) for am_hal_ble_check_irq
    am_hal_ble.o(.text.am_hal_ble_nonblocking_hci_read) refers to am_hal_ble.o(.text.am_hal_ble_blocking_transfer) for am_hal_ble_blocking_transfer
    am_hal_ble.o(.text.am_hal_ble_nonblocking_hci_read) refers to am_hal_ble.o(.text.am_hal_ble_nonblocking_transfer) for am_hal_ble_nonblocking_transfer
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_nonblocking_hci_read) refers to am_hal_ble.o(.text.am_hal_ble_nonblocking_hci_read) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_check_irq) refers to am_hal_ble.o(.text.am_hal_ble_check_irq) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_check_status) refers to am_hal_ble.o(.text.am_hal_ble_check_status) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_bus_lock) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ble.o(.text.am_hal_ble_bus_lock) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_bus_lock) refers to am_hal_ble.o(.text.am_hal_ble_bus_lock) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_cmd_write) refers to am_hal_ble.o(.text.am_hal_ble_cmd_write) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_fifo_drain) refers to am_hal_ble.o(.text.am_hal_ble_fifo_read) for am_hal_ble_fifo_read
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_fifo_drain) refers to am_hal_ble.o(.text.am_hal_ble_fifo_drain) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_bus_release) refers to am_hal_ble.o(.text.am_hal_ble_bus_release) for [Anonymous Symbol]
    am_hal_ble.o(.text.nonblocking_write) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ble.o(.text.nonblocking_write) refers to am_hal_ble.o(.text.am_hal_ble_check_irq) for am_hal_ble_check_irq
    am_hal_ble.o(.text.nonblocking_write) refers to am_hal_ble.o(.text.am_hal_ble_check_status) for am_hal_ble_check_status
    am_hal_ble.o(.text.nonblocking_write) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.nonblocking_write) refers to am_hal_ble.o(.text.am_hal_ble_cmd_write) for am_hal_ble_cmd_write
    am_hal_ble.o(.text.nonblocking_write) refers to am_hal_ble.o(.text.am_hal_ble_wakeup_set) for am_hal_ble_wakeup_set
    am_hal_ble.o(.text.nonblocking_write) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ble.o(.ARM.exidx.text.nonblocking_write) refers to am_hal_ble.o(.text.nonblocking_write) for [Anonymous Symbol]
    am_hal_ble.o(.text.nonblocking_read) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ble.o(.text.nonblocking_read) refers to am_hal_ble.o(.text.am_hal_ble_check_irq) for am_hal_ble_check_irq
    am_hal_ble.o(.text.nonblocking_read) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_ble.o(.text.nonblocking_read) refers to am_hal_ble.o(.text.am_hal_ble_cmd_write) for am_hal_ble_cmd_write
    am_hal_ble.o(.text.nonblocking_read) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ble.o(.ARM.exidx.text.nonblocking_read) refers to am_hal_ble.o(.text.nonblocking_read) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_int_service) refers to am_hal_ble.o(.text.am_hal_ble_wakeup_set) for am_hal_ble_wakeup_set
    am_hal_ble.o(.text.am_hal_ble_int_service) refers to am_hal_ble.o(.text.am_hal_ble_bus_release) for am_hal_ble_bus_release
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_service) refers to am_hal_ble.o(.text.am_hal_ble_int_service) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_int_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ble.o(.text.am_hal_ble_int_enable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_enable) refers to am_hal_ble.o(.text.am_hal_ble_int_enable) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_int_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_ble.o(.text.am_hal_ble_int_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_disable) refers to am_hal_ble.o(.text.am_hal_ble_int_disable) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_status) refers to am_hal_ble.o(.text.am_hal_ble_int_status) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_clear) refers to am_hal_ble.o(.text.am_hal_ble_int_clear) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_transmitter_modex_set) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_read) for am_hal_ble_plf_reg_read
    am_hal_ble.o(.text.am_hal_ble_transmitter_modex_set) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_write) for am_hal_ble_plf_reg_write
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_transmitter_modex_set) refers to am_hal_ble.o(.text.am_hal_ble_transmitter_modex_set) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_sleep_set) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_read) for am_hal_ble_plf_reg_read
    am_hal_ble.o(.text.am_hal_ble_sleep_set) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_write) for am_hal_ble_plf_reg_write
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_sleep_set) refers to am_hal_ble.o(.text.am_hal_ble_sleep_set) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_sleep_get) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_read) for am_hal_ble_plf_reg_read
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_sleep_get) refers to am_hal_ble.o(.text.am_hal_ble_sleep_get) for [Anonymous Symbol]
    am_hal_ble.o(.text.am_hal_ble_tx_power_set) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_read) for am_hal_ble_plf_reg_read
    am_hal_ble.o(.text.am_hal_ble_tx_power_set) refers to am_hal_ble.o(.text.am_hal_ble_plf_reg_write) for am_hal_ble_plf_reg_write
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_tx_power_set) refers to am_hal_ble.o(.text.am_hal_ble_tx_power_set) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_fifo_read) refers to am_hal_ble.o(.text.am_hal_ble_fifo_read) for [Anonymous Symbol]
    am_hal_ble.o(.ARM.exidx.text.am_hal_ble_read_trimdata_from_info1) refers to am_hal_ble.o(.text.am_hal_ble_read_trimdata_from_info1) for [Anonymous Symbol]
    am_hal_ble_patch.o(.data.am_ble_performance_patch) refers to am_hal_ble_patch.o(.data.am_ble_performance_patch_data) for am_ble_performance_patch_data
    am_hal_ble_patch.o(.data.am_ble_buffer_patch) refers to am_hal_ble_patch.o(.rodata.am_ble_buffer_patch_data) for am_ble_buffer_patch_data
    am_hal_ble_patch.o(.data.am_ble_nvds_patch) refers to am_hal_ble_patch.o(.data.am_ble_buffer_nvds_data) for am_ble_buffer_nvds_data
    am_hal_ble_patch.o(.data.am_hal_ble_default_patch_array) refers to am_hal_ble_patch.o(.data.am_ble_performance_patch) for am_ble_performance_patch
    am_hal_ble_patch.o(.data.am_hal_ble_default_patch_array) refers to am_hal_ble_patch.o(.data.am_ble_buffer_patch) for am_ble_buffer_patch
    am_hal_ble_patch.o(.data.am_hal_ble_default_patch_array) refers to am_hal_ble_patch.o(.data.am_ble_nvds_patch) for am_ble_nvds_patch
    am_hal_ble_patch.o(.data.am_ble_performance_copy_patch) refers to am_hal_ble_patch.o(.rodata.am_ble_performance_copy_patch_data) for am_ble_performance_copy_patch_data
    am_hal_ble_patch.o(.data.am_hal_ble_default_copy_patch_array) refers to am_hal_ble_patch.o(.data.am_ble_performance_copy_patch) for am_ble_performance_copy_patch
    am_hal_ble_patch.o(.data.am_hal_ble_default_patches) refers to am_hal_ble_patch.o(.data.am_hal_ble_default_patch_array) for am_hal_ble_default_patch_array
    am_hal_ble_patch.o(.data.am_hal_ble_default_copy_patches) refers to am_hal_ble_patch.o(.data.am_hal_ble_default_copy_patch_array) for am_hal_ble_default_copy_patch_array
    am_hal_ble_patch_b0.o(.data.am_ble_performance_patch_b0) refers to am_hal_ble_patch_b0.o(.data.am_ble_performance_patch_data_b0) for am_ble_performance_patch_data_b0
    am_hal_ble_patch_b0.o(.data.am_ble_buffer_patch_b0) refers to am_hal_ble_patch_b0.o(.rodata.am_ble_buffer_patch_data_b0) for am_ble_buffer_patch_data_b0
    am_hal_ble_patch_b0.o(.data.am_ble_nvds_patch_b0) refers to am_hal_ble_patch_b0.o(.data.am_ble_buffer_nvds_data_b0) for am_ble_buffer_nvds_data_b0
    am_hal_ble_patch_b0.o(.data.am_hal_ble_default_patch_array_b0) refers to am_hal_ble_patch_b0.o(.data.am_ble_performance_patch_b0) for am_ble_performance_patch_b0
    am_hal_ble_patch_b0.o(.data.am_hal_ble_default_patch_array_b0) refers to am_hal_ble_patch_b0.o(.data.am_ble_buffer_patch_b0) for am_ble_buffer_patch_b0
    am_hal_ble_patch_b0.o(.data.am_hal_ble_default_patch_array_b0) refers to am_hal_ble_patch_b0.o(.data.am_ble_nvds_patch_b0) for am_ble_nvds_patch_b0
    am_hal_ble_patch_b0.o(.data.am_hal_ble_default_patches_b0) refers to am_hal_ble_patch_b0.o(.data.am_hal_ble_default_patch_array_b0) for am_hal_ble_default_patch_array_b0
    am_hal_burst.o(.text.am_hal_burst_mode_initialize) refers to am_hal_burst.o(.bss.g_am_hal_burst_mode_available) for g_am_hal_burst_mode_available
    am_hal_burst.o(.text.am_hal_burst_mode_initialize) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_burst.o(.ARM.exidx.text.am_hal_burst_mode_initialize) refers to am_hal_burst.o(.text.am_hal_burst_mode_initialize) for [Anonymous Symbol]
    am_hal_burst.o(.text.am_hal_burst_mode_enable) refers to am_hal_burst.o(.bss.g_am_hal_burst_mode_available) for g_am_hal_burst_mode_available
    am_hal_burst.o(.text.am_hal_burst_mode_enable) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_burst.o(.ARM.exidx.text.am_hal_burst_mode_enable) refers to am_hal_burst.o(.text.am_hal_burst_mode_enable) for [Anonymous Symbol]
    am_hal_burst.o(.text.am_hal_burst_mode_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_burst.o(.text.am_hal_burst_mode_disable) refers to am_hal_flash.o(.text.am_hal_flash_store_ui32) for am_hal_flash_store_ui32
    am_hal_burst.o(.text.am_hal_burst_mode_disable) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_burst.o(.text.am_hal_burst_mode_disable) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_check) for am_hal_flash_delay_status_check
    am_hal_burst.o(.ARM.exidx.text.am_hal_burst_mode_disable) refers to am_hal_burst.o(.text.am_hal_burst_mode_disable) for [Anonymous Symbol]
    am_hal_cmdq.o(.text.am_hal_cmdq_init) refers to am_hal_cmdq.o(.bss.gAmHalCmdq) for gAmHalCmdq
    am_hal_cmdq.o(.text.am_hal_cmdq_init) refers to am_hal_cmdq.o(.rodata.gAmHalCmdQReg) for gAmHalCmdQReg
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_init) refers to am_hal_cmdq.o(.text.am_hal_cmdq_init) for [Anonymous Symbol]
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_enable) refers to am_hal_cmdq.o(.text.am_hal_cmdq_enable) for [Anonymous Symbol]
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_disable) refers to am_hal_cmdq.o(.text.am_hal_cmdq_disable) for [Anonymous Symbol]
    am_hal_cmdq.o(.text.am_hal_cmdq_alloc_block) refers to am_hal_cmdq.o(.text.update_indices) for update_indices
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_alloc_block) refers to am_hal_cmdq.o(.text.am_hal_cmdq_alloc_block) for [Anonymous Symbol]
    am_hal_cmdq.o(.text.update_indices) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_cmdq.o(.text.update_indices) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_cmdq.o(.ARM.exidx.text.update_indices) refers to am_hal_cmdq.o(.text.update_indices) for [Anonymous Symbol]
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_release_block) refers to am_hal_cmdq.o(.text.am_hal_cmdq_release_block) for [Anonymous Symbol]
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_post_block) refers to am_hal_cmdq.o(.text.am_hal_cmdq_post_block) for [Anonymous Symbol]
    am_hal_cmdq.o(.text.am_hal_cmdq_get_status) refers to am_hal_cmdq.o(.text.update_indices) for update_indices
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_get_status) refers to am_hal_cmdq.o(.text.am_hal_cmdq_get_status) for [Anonymous Symbol]
    am_hal_cmdq.o(.text.am_hal_cmdq_term) refers to am_hal_cmdq.o(.text.update_indices) for update_indices
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_term) refers to am_hal_cmdq.o(.text.am_hal_cmdq_term) for [Anonymous Symbol]
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_error_resume) refers to am_hal_cmdq.o(.text.am_hal_cmdq_error_resume) for [Anonymous Symbol]
    am_hal_cmdq.o(.text.am_hal_cmdq_pause) refers to am_hal_flash.o(.text.am_hal_flash_delay_status_change) for am_hal_flash_delay_status_change
    am_hal_cmdq.o(.text.am_hal_cmdq_pause) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_pause) refers to am_hal_cmdq.o(.text.am_hal_cmdq_pause) for [Anonymous Symbol]
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_reset) refers to am_hal_cmdq.o(.text.am_hal_cmdq_reset) for [Anonymous Symbol]
    am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_post_loop_block) refers to am_hal_cmdq.o(.text.am_hal_cmdq_post_loop_block) for [Anonymous Symbol]
    am_hal_entropy.o(.text.am_hal_entropy_init) refers to am_hal_entropy.o(.text.entropy_ctimer_init) for entropy_ctimer_init
    am_hal_entropy.o(.text.am_hal_entropy_init) refers to am_hal_entropy.o(.text.entropy_ctimer_isr) for entropy_ctimer_isr
    am_hal_entropy.o(.text.am_hal_entropy_init) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_register) for am_hal_ctimer_int_register
    am_hal_entropy.o(.text.am_hal_entropy_init) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_enable) for am_hal_ctimer_int_enable
    am_hal_entropy.o(.text.am_hal_entropy_init) refers to am_hal_entropy.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    am_hal_entropy.o(.ARM.exidx.text.am_hal_entropy_init) refers to am_hal_entropy.o(.text.am_hal_entropy_init) for [Anonymous Symbol]
    am_hal_entropy.o(.text.entropy_ctimer_init) refers to am_hal_clkgen.o(.text.am_hal_clkgen_control) for am_hal_clkgen_control
    am_hal_entropy.o(.text.entropy_ctimer_init) refers to am_hal_ctimer.o(.text.am_hal_ctimer_clear) for am_hal_ctimer_clear
    am_hal_entropy.o(.text.entropy_ctimer_init) refers to am_hal_entropy.o(.data.sENTROPYTimerConfig) for sENTROPYTimerConfig
    am_hal_entropy.o(.text.entropy_ctimer_init) refers to am_hal_ctimer.o(.text.am_hal_ctimer_config) for am_hal_ctimer_config
    am_hal_entropy.o(.text.entropy_ctimer_init) refers to am_hal_ctimer.o(.text.am_hal_ctimer_period_set) for am_hal_ctimer_period_set
    am_hal_entropy.o(.text.entropy_ctimer_init) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_clear) for am_hal_ctimer_int_clear
    am_hal_entropy.o(.ARM.exidx.text.entropy_ctimer_init) refers to am_hal_entropy.o(.text.entropy_ctimer_init) for [Anonymous Symbol]
    am_hal_entropy.o(.text.entropy_ctimer_isr) refers to am_hal_systick.o(.text.am_hal_systick_count) for am_hal_systick_count
    am_hal_entropy.o(.text.entropy_ctimer_isr) refers to am_hal_entropy.o(.data.g_ui32LastSysTick) for g_ui32LastSysTick
    am_hal_entropy.o(.text.entropy_ctimer_isr) refers to am_hal_ctimer.o(.text.am_hal_ctimer_int_clear) for am_hal_ctimer_int_clear
    am_hal_entropy.o(.text.entropy_ctimer_isr) refers to am_hal_entropy.o(.bss.g_ui32LastSleepCount) for g_ui32LastSleepCount
    am_hal_entropy.o(.text.entropy_ctimer_isr) refers to am_hal_sysctrl.o(.bss.g_am_hal_sysctrl_sleep_count) for g_am_hal_sysctrl_sleep_count
    am_hal_entropy.o(.text.entropy_ctimer_isr) refers to am_hal_entropy.o(.bss.am_hal_entropy_timing_error_count) for am_hal_entropy_timing_error_count
    am_hal_entropy.o(.text.entropy_ctimer_isr) refers to am_hal_entropy.o(.bss.g_sEntropyCollector) for g_sEntropyCollector
    am_hal_entropy.o(.ARM.exidx.text.entropy_ctimer_isr) refers to am_hal_entropy.o(.text.entropy_ctimer_isr) for [Anonymous Symbol]
    am_hal_entropy.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to am_hal_entropy.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    am_hal_entropy.o(.text.am_hal_entropy_enable) refers to am_hal_entropy.o(.bss.am_hal_entropy_timing_error_count) for am_hal_entropy_timing_error_count
    am_hal_entropy.o(.text.am_hal_entropy_enable) refers to am_hal_entropy.o(.data.g_ui32LastSysTick) for g_ui32LastSysTick
    am_hal_entropy.o(.text.am_hal_entropy_enable) refers to am_hal_systick.o(.text.am_hal_systick_load) for am_hal_systick_load
    am_hal_entropy.o(.text.am_hal_entropy_enable) refers to am_hal_ctimer.o(.text.am_hal_ctimer_clear) for am_hal_ctimer_clear
    am_hal_entropy.o(.text.am_hal_entropy_enable) refers to am_hal_systick.o(.text.am_hal_systick_start) for am_hal_systick_start
    am_hal_entropy.o(.text.am_hal_entropy_enable) refers to am_hal_ctimer.o(.text.am_hal_ctimer_start) for am_hal_ctimer_start
    am_hal_entropy.o(.ARM.exidx.text.am_hal_entropy_enable) refers to am_hal_entropy.o(.text.am_hal_entropy_enable) for [Anonymous Symbol]
    am_hal_entropy.o(.text.am_hal_entropy_disable) refers to am_hal_systick.o(.text.am_hal_systick_stop) for am_hal_systick_stop
    am_hal_entropy.o(.text.am_hal_entropy_disable) refers to am_hal_ctimer.o(.text.am_hal_ctimer_stop) for am_hal_ctimer_stop
    am_hal_entropy.o(.ARM.exidx.text.am_hal_entropy_disable) refers to am_hal_entropy.o(.text.am_hal_entropy_disable) for [Anonymous Symbol]
    am_hal_entropy.o(.text.am_hal_entropy_get_values) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_entropy.o(.text.am_hal_entropy_get_values) refers to am_hal_entropy.o(.bss.g_sEntropyCollector) for g_sEntropyCollector
    am_hal_entropy.o(.text.am_hal_entropy_get_values) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_entropy.o(.ARM.exidx.text.am_hal_entropy_get_values) refers to am_hal_entropy.o(.text.am_hal_entropy_get_values) for [Anonymous Symbol]
    am_hal_pdm.o(.text.am_hal_pdm_initialize) refers to am_hal_pdm.o(.bss.g_am_hal_pdm_states) for g_am_hal_pdm_states
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_initialize) refers to am_hal_pdm.o(.text.am_hal_pdm_initialize) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_deinitialize) refers to am_hal_pdm.o(.text.am_hal_pdm_deinitialize) for [Anonymous Symbol]
    am_hal_pdm.o(.text.am_hal_pdm_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable) for am_hal_pwrctrl_periph_enable
    am_hal_pdm.o(.text.am_hal_pdm_power_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_pdm.o(.text.am_hal_pdm_power_control) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_pdm.o(.text.am_hal_pdm_power_control) refers to am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable) for am_hal_pwrctrl_periph_disable
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_power_control) refers to am_hal_pdm.o(.text.am_hal_pdm_power_control) for [Anonymous Symbol]
    am_hal_pdm.o(.text.am_hal_pdm_configure) refers to am_hal_clkgen.o(.text.am_hal_clkgen_status_get) for am_hal_clkgen_status_get
    am_hal_pdm.o(.text.am_hal_pdm_configure) refers to am_hal_flash.o(.text.am_hal_flash_delay) for am_hal_flash_delay
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_configure) refers to am_hal_pdm.o(.text.am_hal_pdm_configure) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_enable) refers to am_hal_pdm.o(.text.am_hal_pdm_enable) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_disable) refers to am_hal_pdm.o(.text.am_hal_pdm_disable) for [Anonymous Symbol]
    am_hal_pdm.o(.text.am_hal_pdm_dma_start) refers to am_hal_pdm.o(.text.find_dma_threshold) for find_dma_threshold
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_dma_start) refers to am_hal_pdm.o(.text.am_hal_pdm_dma_start) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.find_dma_threshold) refers to am_hal_pdm.o(.text.find_dma_threshold) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_fifo_flush) refers to am_hal_pdm.o(.text.am_hal_pdm_fifo_flush) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_i2s_enable) refers to am_hal_pdm.o(.text.am_hal_pdm_i2s_enable) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_i2s_disable) refers to am_hal_pdm.o(.text.am_hal_pdm_i2s_disable) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_interrupt_enable) refers to am_hal_pdm.o(.text.am_hal_pdm_interrupt_enable) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_interrupt_disable) refers to am_hal_pdm.o(.text.am_hal_pdm_interrupt_disable) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_interrupt_clear) refers to am_hal_pdm.o(.text.am_hal_pdm_interrupt_clear) for [Anonymous Symbol]
    am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_interrupt_status_get) refers to am_hal_pdm.o(.text.am_hal_pdm_interrupt_status_get) for [Anonymous Symbol]
    am_hal_queue.o(.ARM.exidx.text.am_hal_queue_init) refers to am_hal_queue.o(.text.am_hal_queue_init) for [Anonymous Symbol]
    am_hal_queue.o(.text.am_hal_queue_item_add) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_queue.o(.text.am_hal_queue_item_add) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_queue.o(.ARM.exidx.text.am_hal_queue_item_add) refers to am_hal_queue.o(.text.am_hal_queue_item_add) for [Anonymous Symbol]
    am_hal_queue.o(.text.am_hal_queue_item_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_disable) for am_hal_interrupt_master_disable
    am_hal_queue.o(.text.am_hal_queue_item_get) refers to am_hal_interrupt.o(.text.am_hal_interrupt_master_set) for am_hal_interrupt_master_set
    am_hal_queue.o(.ARM.exidx.text.am_hal_queue_item_get) refers to am_hal_queue.o(.text.am_hal_queue_item_get) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(x$fpl$d2f) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    d2f.o(x$fpl$d2f) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    d2f.o(x$fpl$d2f) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_keil.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.low_power_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.toVal), (8 bytes).
    Removing main.o(.ARM.exidx.text.mthToIndex), (8 bytes).
    Removing main.o(.ARM.exidx.text.amx8x5_ext1_gen), (8 bytes).
    Removing main.o(.ARM.exidx.text.amx8x5_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.amx8x5_ext_reset), (8 bytes).
    Removing main.o(.ARM.exidx.text.amx8x5_int_clear), (8 bytes).
    Removing main.o(.ARM.exidx.text.amx8x5_wait_por_ready), (8 bytes).
    Removing main.o(.text.rtc_assa_abloy_test_loop), (240 bytes).
    Removing main.o(.ARM.exidx.text.rtc_assa_abloy_test_loop), (8 bytes).
    Removing main.o(.ARM.exidx.text.sleep_loop), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing uart_debug.o(.text), (0 bytes).
    Removing uart_debug.o(.ARM.exidx.text.itm_printf_enable), (8 bytes).
    Removing uart_debug.o(.ARM.exidx.text.uart_string_print), (8 bytes).
    Removing uart_debug.o(.ARM.exidx.text.uart_printf_enable), (8 bytes).
    Removing uart_debug.o(.text.uart_printf_disable), (80 bytes).
    Removing uart_debug.o(.ARM.exidx.text.uart_printf_disable), (8 bytes).
    Removing uart_debug.o(.ARM.exidx.text.debug_printf_enable), (8 bytes).
    Removing uart_debug.o(.text.debug_printf_disable), (50 bytes).
    Removing uart_debug.o(.ARM.exidx.text.debug_printf_disable), (8 bytes).
    Removing uart_debug.o(.rodata.g_GPIO_DISABLE), (4 bytes).
    Removing iom_dma.o(.text), (0 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_dma_spi_configure), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_get_interface_clock_cfg), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_dma_i2c_configure), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_dma_configure), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_dma_enable), (8 bytes).
    Removing iom_dma.o(.text.iom_dma_disable), (84 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_dma_disable), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_dma_start), (8 bytes).
    Removing iom_dma.o(.text.iom_i2c_dma_pop_tail), (292 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_i2c_dma_pop_tail), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.am_iomaster0_isr), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.am_iomaster1_isr), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.am_iomaster2_isr), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.am_iomaster3_isr), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.am_iomaster4_isr), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.am_iomaster5_isr), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_dma_int_enable), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing iom_dma.o(.text.iom_dma_int_disable), (78 bytes).
    Removing iom_dma.o(.ARM.exidx.text.iom_dma_int_disable), (8 bytes).
    Removing iom_dma.o(.text.__NVIC_DisableIRQ), (56 bytes).
    Removing iom_dma.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.compute_freq), (8 bytes).
    Removing iom_dma.o(.ARM.exidx.text.onebit), (8 bytes).
    Removing amx8x5_device.o(.text), (0 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_clear), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_read), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_write), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_set), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_block_read), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_reg_block_write), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_reset), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_time_get), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.bcd_to_dec), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_time_set), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.dec_to_bcd), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_cal_set), (660 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_cal_set), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_alarm_set), (634 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_alarm_set), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_countdown_set), (1168 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_countdown_set), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_osc_sel), (300 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_osc_sel), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_sqw_set), (222 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_sqw_set), (8 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_sleep_set), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_watchdog_set), (362 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_watchdog_set), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_autocal_set), (308 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_autocal_set), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_ext_address_get), (142 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_ext_address_get), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_ram_read), (94 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_ram_read), (8 bytes).
    Removing amx8x5_device.o(.text.amx8x5_ram_write), (98 bytes).
    Removing amx8x5_device.o(.ARM.exidx.text.amx8x5_ram_write), (8 bytes).
    Removing amx8x5_device.o(.bss.Time), (10 bytes).
    Removing iom_spi.o(.text), (0 bytes).
    Removing iom_spi.o(.ARM.exidx.text.spi_callback), (8 bytes).
    Removing iom_spi.o(.ARM.exidx.text.iom_gpio_config), (8 bytes).
    Removing iom_spi.o(.ARM.exidx.text.iom_spi_write), (8 bytes).
    Removing iom_spi.o(.ARM.exidx.text.iom_spi_read), (8 bytes).
    Removing iom_spi.o(.ARM.exidx.text.iom_spi_init), (8 bytes).
    Removing am_util_delay.o(.text), (0 bytes).
    Removing am_util_delay.o(.text.am_util_delay_cycles), (16 bytes).
    Removing am_util_delay.o(.ARM.exidx.text.am_util_delay_cycles), (8 bytes).
    Removing am_util_delay.o(.ARM.exidx.text.am_util_delay_ms), (8 bytes).
    Removing am_util_delay.o(.ARM.exidx.text.am_util_delay_us), (8 bytes).
    Removing am_util_stdio.o(.text), (0 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_printf_init), (8 bytes).
    Removing am_util_stdio.o(.text.am_util_stdio_strtoul), (316 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_strtoul), (8 bytes).
    Removing am_util_stdio.o(.text.am_util_stdio_textmode_set), (46 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_textmode_set), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_vsprintf), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.decstr_to_int), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.simple_strlen), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.padbuffer), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.ndigits_in_hex), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.uint64_to_hexstr), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.ndigits_in_u64), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.uint64_to_str), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.ndigits_in_i64), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.ftoa), (8 bytes).
    Removing am_util_stdio.o(.text.am_util_stdio_sprintf), (42 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_sprintf), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_printf), (8 bytes).
    Removing am_util_stdio.o(.text.am_util_stdio_vsnprintf), (116 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_vsnprintf), (8 bytes).
    Removing am_util_stdio.o(.text.am_util_stdio_snprintf), (44 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_snprintf), (8 bytes).
    Removing am_util_stdio.o(.text.am_util_stdio_vprintf), (76 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_vprintf), (8 bytes).
    Removing am_util_stdio.o(.text.am_util_stdio_terminal_clear), (16 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.am_util_stdio_terminal_clear), (8 bytes).
    Removing am_util_stdio.o(.ARM.exidx.text.divu64_10), (8 bytes).
    Removing am_util_stdio.o(.rodata.str1.1), (19 bytes).
    Removing am_util_string.o(.text), (0 bytes).
    Removing am_util_string.o(.text.am_util_string_strcmp), (24 bytes).
    Removing am_util_string.o(.ARM.exidx.text.am_util_string_strcmp), (8 bytes).
    Removing am_util_string.o(.text.am_util_string_strncmp), (82 bytes).
    Removing am_util_string.o(.ARM.exidx.text.am_util_string_strncmp), (8 bytes).
    Removing am_util_string.o(.ARM.exidx.text.am_util_string_strnicmp), (8 bytes).
    Removing am_util_string.o(.text.am_util_string_stricmp), (168 bytes).
    Removing am_util_string.o(.ARM.exidx.text.am_util_string_stricmp), (8 bytes).
    Removing am_util_string.o(.text.am_util_string_strlen), (38 bytes).
    Removing am_util_string.o(.ARM.exidx.text.am_util_string_strlen), (8 bytes).
    Removing am_util_string.o(.text.am_util_string_strcpy), (46 bytes).
    Removing am_util_string.o(.ARM.exidx.text.am_util_string_strcpy), (8 bytes).
    Removing am_util_string.o(.text.am_util_string_strncpy), (72 bytes).
    Removing am_util_string.o(.ARM.exidx.text.am_util_string_strncpy), (8 bytes).
    Removing am_util_string.o(.text.am_util_string_strcat), (48 bytes).
    Removing am_util_string.o(.ARM.exidx.text.am_util_string_strcat), (8 bytes).
    Removing am_util_time.o(.text), (0 bytes).
    Removing am_util_time.o(.ARM.exidx.text.am_util_time_computeDayofWeek), (8 bytes).
    Removing am_util_debug.o(.text), (0 bytes).
    Removing am_hal_cachectrl.o(.text), (0 bytes).
    Removing am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_config), (8 bytes).
    Removing am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_enable), (8 bytes).
    Removing am_hal_cachectrl.o(.text.am_hal_cachectrl_disable), (46 bytes).
    Removing am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_disable), (8 bytes).
    Removing am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_control), (8 bytes).
    Removing am_hal_cachectrl.o(.ARM.exidx.text.set_LPMMODE), (8 bytes).
    Removing am_hal_cachectrl.o(.ARM.exidx.text.set_SEDELAY), (8 bytes).
    Removing am_hal_cachectrl.o(.ARM.exidx.text.set_RDWAIT), (8 bytes).
    Removing am_hal_cachectrl.o(.text.am_hal_cachectrl_status_get), (70 bytes).
    Removing am_hal_cachectrl.o(.ARM.exidx.text.am_hal_cachectrl_status_get), (8 bytes).
    Removing am_hal_clkgen.o(.text), (0 bytes).
    Removing am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_control), (8 bytes).
    Removing am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_status_get), (8 bytes).
    Removing am_hal_clkgen.o(.text.am_hal_clkgen_clkout_enable), (150 bytes).
    Removing am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_clkout_enable), (8 bytes).
    Removing am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_enable), (52 bytes).
    Removing am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_enable), (8 bytes).
    Removing am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_disable), (52 bytes).
    Removing am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_disable), (8 bytes).
    Removing am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_clear), (48 bytes).
    Removing am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_clear), (8 bytes).
    Removing am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_status_get), (78 bytes).
    Removing am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_status_get), (8 bytes).
    Removing am_hal_clkgen.o(.text.am_hal_clkgen_interrupt_set), (48 bytes).
    Removing am_hal_clkgen.o(.ARM.exidx.text.am_hal_clkgen_interrupt_set), (8 bytes).
    Removing am_hal_ctimer.o(.text), (0 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_int_service), (76 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_service), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_int_register), (582 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_register), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_globen), (38 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_globen), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_config), (168 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_config), (8 bytes).
    Removing am_hal_ctimer.o(.text.ctimer_clr), (54 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.ctimer_clr), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_config_single), (186 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_config_single), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_config_trigger), (84 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_config_trigger), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_start), (138 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_start), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_stop), (58 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_stop), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_clear), (54 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_clear), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_read), (282 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_read), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_output_config), (776 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_output_config), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_input_config), (26 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_input_config), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_compare_set), (180 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_compare_set), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_aux_compare_set), (180 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_aux_compare_set), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_period_set), (236 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_period_set), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_aux_period_set), (236 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_aux_period_set), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_adc_trigger_enable), (36 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_adc_trigger_enable), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_adc_trigger_disable), (36 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_adc_trigger_disable), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_int_enable), (38 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_enable), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_int_enable_get), (12 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_enable_get), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_int_disable), (38 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_disable), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_int_clear), (34 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_clear), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_int_set), (34 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_set), (8 bytes).
    Removing am_hal_ctimer.o(.text.am_hal_ctimer_int_status_get), (84 bytes).
    Removing am_hal_ctimer.o(.ARM.exidx.text.am_hal_ctimer_int_status_get), (8 bytes).
    Removing am_hal_ctimer.o(.bss.g_am_hal_ctimer_ppfnHandlers), (128 bytes).
    Removing am_hal_ctimer.o(.rodata.str1.1), (77 bytes).
    Removing am_hal_ctimer.o(.data.g_ui8ClkSrc), (16 bytes).
    Removing am_hal_ctimer.o(.rodata.g_ui32TMRAddrTbl), (32 bytes).
    Removing am_hal_ctimer.o(.rodata.g_ui8TmrClkSrcMask), (32 bytes).
    Removing am_hal_ctimer.o(.rodata.CTx_tbl), (64 bytes).
    Removing am_hal_ctimer.o(.rodata.outcfg_tbl), (128 bytes).
    Removing am_hal_debug.o(.text), (0 bytes).
    Removing am_hal_debug.o(.text.am_hal_debug_error), (12 bytes).
    Removing am_hal_debug.o(.ARM.exidx.text.am_hal_debug_error), (8 bytes).
    Removing am_hal_gpio.o(.text), (0 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_pinconfig), (8 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.pincfg_equ), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_fast_pinconfig), (232 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_fast_pinconfig), (8 bytes).
    Removing am_hal_gpio.o(.text.popcount), (58 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.popcount), (8 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_state_read), (8 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_state_write), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_interrupt_enable), (80 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_enable), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_interrupt_disable), (80 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_disable), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_interrupt_clear), (72 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_clear), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_interrupt_status_get), (156 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_status_get), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_interrupt_register), (60 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_register), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_interrupt_register_adv), (82 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_register_adv), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_interrupt_service), (238 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_interrupt_service), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_isinput), (54 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_isinput), (8 bytes).
    Removing am_hal_gpio.o(.text.am_hal_gpio_isgpio), (126 bytes).
    Removing am_hal_gpio.o(.ARM.exidx.text.am_hal_gpio_isgpio), (8 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_TRISTATE), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_INPUT), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_INPUT_PULLUP), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_INPUT_PULLUP_1_5), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_INPUT_PULLUP_6), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_INPUT_PULLUP_12), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_INPUT_PULLUP_24), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_OUTPUT), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_OUTPUT_4), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_OUTPUT_8), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_OUTPUT_12), (4 bytes).
    Removing am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_OUTPUT_WITH_READ), (4 bytes).
    Removing am_hal_gpio.o(.bss.gpio_ppfnHandlers), (200 bytes).
    Removing am_hal_gpio.o(.bss.gpio_pHandlerCtxt), (200 bytes).
    Removing am_hal_interrupt.o(.text), (0 bytes).
    Removing am_hal_interrupt.o(.ARM.exidx.text.am_hal_interrupt_master_enable), (8 bytes).
    Removing am_hal_interrupt.o(.ARM.exidx.text.am_hal_interrupt_master_disable), (8 bytes).
    Removing am_hal_interrupt.o(.ARM.exidx.text.am_hal_interrupt_master_set), (8 bytes).
    Removing am_hal_iom.o(.text), (0 bytes).
    Removing am_hal_iom.o(.text.internal_iom_get_int_err), (124 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.internal_iom_get_int_err), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_CQInit), (96 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_CQInit), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_IOM_CQReset), (48 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_IOM_CQReset), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_CQAddTransaction), (110 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_CQAddTransaction), (8 bytes).
    Removing am_hal_iom.o(.text.build_txn_cmdlist), (464 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.build_txn_cmdlist), (8 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_CQEnable), (8 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_CQDisable), (8 bytes).
    Removing am_hal_iom.o(.text.validate_transaction), (220 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.validate_transaction), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_uninitialize), (102 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_uninitialize), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_disable), (152 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_disable), (8 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_initialize), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_enable), (248 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_enable), (8 bytes).
    Removing am_hal_iom.o(.text.enable_submodule), (72 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.enable_submodule), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_status_get), (180 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_status_get), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_interrupt_enable), (108 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_enable), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_interrupt_disable), (90 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_disable), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_interrupt_status_get), (140 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_status_get), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_interrupt_clear), (86 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_clear), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_interrupt_service), (908 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_interrupt_service), (8 bytes).
    Removing am_hal_iom.o(.text.internal_iom_reset_on_error), (590 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.internal_iom_reset_on_error), (8 bytes).
    Removing am_hal_iom.o(.text.program_dma), (170 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.program_dma), (8 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_power_ctrl), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_configure), (594 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_configure), (8 bytes).
    Removing am_hal_iom.o(.text.iom_get_interface_clock_cfg), (602 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.iom_get_interface_clock_cfg), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_blocking_transfer), (1290 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_blocking_transfer), (8 bytes).
    Removing am_hal_iom.o(.text.build_cmd), (126 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.build_cmd), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_nonblocking_transfer), (510 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_nonblocking_transfer), (8 bytes).
    Removing am_hal_iom.o(.text.iom_dummy_callback), (10 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.iom_dummy_callback), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_spi_blocking_fullduplex), (1088 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_spi_blocking_fullduplex), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_control), (2134 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_control), (8 bytes).
    Removing am_hal_iom.o(.text.iom_cq_pause), (196 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.iom_cq_pause), (8 bytes).
    Removing am_hal_iom.o(.text.iom_seq_loopback), (58 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.iom_seq_loopback), (8 bytes).
    Removing am_hal_iom.o(.text.get_pause_val), (74 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.get_pause_val), (8 bytes).
    Removing am_hal_iom.o(.text.sched_hiprio), (146 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.sched_hiprio), (8 bytes).
    Removing am_hal_iom.o(.text.am_hal_iom_highprio_transfer), (234 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.am_hal_iom_highprio_transfer), (8 bytes).
    Removing am_hal_iom.o(.text.iom_add_hp_transaction), (288 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.iom_add_hp_transaction), (8 bytes).
    Removing am_hal_iom.o(.text.compute_freq), (84 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.compute_freq), (8 bytes).
    Removing am_hal_iom.o(.text.onebit), (40 bytes).
    Removing am_hal_iom.o(.ARM.exidx.text.onebit), (8 bytes).
    Removing am_hal_ios.o(.text), (0 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_power_ctrl), (334 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_power_ctrl), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_uninitialize), (98 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_uninitialize), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_disable), (110 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_disable), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_initialize), (152 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_initialize), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_enable), (110 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_enable), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_configure), (366 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_configure), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_buffer_init), (38 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_buffer_init), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_fifo_ptr_set), (124 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_fifo_ptr_set), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_interrupt_enable), (86 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_enable), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_interrupt_disable), (86 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_disable), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_interrupt_clear), (82 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_clear), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_interrupt_status_get), (136 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_status_get), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_fifo_space_used), (136 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_fifo_space_used), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_fifo_space_left), (156 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_fifo_space_left), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_interrupt_service), (506 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_interrupt_service), (8 bytes).
    Removing am_hal_ios.o(.text.fifo_write), (88 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.fifo_write), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_fifo_write), (474 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_fifo_write), (8 bytes).
    Removing am_hal_ios.o(.text.fifo_space_left), (112 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.fifo_space_left), (8 bytes).
    Removing am_hal_ios.o(.text.am_hal_ios_control), (338 bytes).
    Removing am_hal_ios.o(.ARM.exidx.text.am_hal_ios_control), (8 bytes).
    Removing am_hal_ios.o(.rodata.am_hal_ios_pui8LRAM), (4 bytes).
    Removing am_hal_ios.o(.bss.g_IOShandles), (52 bytes).
    Removing am_hal_ios.o(.bss.g_sSRAMBuffer), (20 bytes).
    Removing am_hal_ios.o(.rodata.str1.1), (36 bytes).
    Removing am_hal_itm.o(.text), (0 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_enable), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_disable), (184 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_disable), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_not_busy), (34 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_not_busy), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_trace_port_enable), (36 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_trace_port_enable), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_trace_port_disable), (36 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_trace_port_disable), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_stimulus_not_busy), (34 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_stimulus_not_busy), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_stimulus_reg_word_write), (40 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_stimulus_reg_word_write), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_stimulus_reg_short_write), (44 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_stimulus_reg_short_write), (8 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_stimulus_reg_byte_write), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_sync_send), (14 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_sync_send), (8 bytes).
    Removing am_hal_itm.o(.text.am_hal_itm_print_not_busy), (12 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_print_not_busy), (8 bytes).
    Removing am_hal_itm.o(.ARM.exidx.text.am_hal_itm_print), (8 bytes).
    Removing am_hal_mcuctrl.o(.text), (0 bytes).
    Removing am_hal_mcuctrl.o(.text.am_hal_mcuctrl_control), (596 bytes).
    Removing am_hal_mcuctrl.o(.ARM.exidx.text.am_hal_mcuctrl_control), (8 bytes).
    Removing am_hal_mcuctrl.o(.text.am_hal_mcuctrl_status_get), (140 bytes).
    Removing am_hal_mcuctrl.o(.ARM.exidx.text.am_hal_mcuctrl_status_get), (8 bytes).
    Removing am_hal_mcuctrl.o(.text.am_hal_mcuctrl_info_get), (172 bytes).
    Removing am_hal_mcuctrl.o(.ARM.exidx.text.am_hal_mcuctrl_info_get), (8 bytes).
    Removing am_hal_mcuctrl.o(.text.device_info_get), (320 bytes).
    Removing am_hal_mcuctrl.o(.ARM.exidx.text.device_info_get), (8 bytes).
    Removing am_hal_mcuctrl.o(.text.mcuctrl_fault_status), (100 bytes).
    Removing am_hal_mcuctrl.o(.ARM.exidx.text.mcuctrl_fault_status), (8 bytes).
    Removing am_hal_mcuctrl.o(.rodata.g_am_hal_mcuctrl_flash_size), (64 bytes).
    Removing am_hal_mcuctrl.o(.rodata.g_am_hal_mcuctrl_sram_size), (64 bytes).
    Removing am_hal_mspi.o(.text), (0 bytes).
    Removing am_hal_mspi.o(.text.build_dma_cmdlist), (432 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.build_dma_cmdlist), (8 bytes).
    Removing am_hal_mspi.o(.text.get_pause_val), (72 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.get_pause_val), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_initialize), (140 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_initialize), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_disable), (132 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_disable), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_cq_disable), (24 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_cq_disable), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_cq_term), (98 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_cq_term), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_deinitialize), (106 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_deinitialize), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_device_configure), (698 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_device_configure), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_device_configure), (1362 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_device_configure), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_enable), (186 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_enable), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_cq_init), (62 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_cq_init), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_control), (2060 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_control), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_cq_pause), (166 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_cq_pause), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_seq_loopback), (50 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_seq_loopback), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_cq_enable), (24 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_cq_enable), (8 bytes).
    Removing am_hal_mspi.o(.text.sched_hiprio), (134 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.sched_hiprio), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_dummy_callback), (10 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_dummy_callback), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_capabilities_get), (100 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_capabilities_get), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_blocking_transfer), (512 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_blocking_transfer), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_fifo_read), (234 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_fifo_read), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_fifo_write), (112 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_fifo_write), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_nonblocking_transfer), (400 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_nonblocking_transfer), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_cq_add_transaction), (196 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_cq_add_transaction), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_status_get), (120 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_status_get), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_interrupt_enable), (90 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_enable), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_interrupt_disable), (90 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_disable), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_interrupt_status_get), (136 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_status_get), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_interrupt_clear), (86 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_clear), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_interrupt_service), (914 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_interrupt_service), (8 bytes).
    Removing am_hal_mspi.o(.text.program_dma), (118 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.program_dma), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_power_control), (804 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_power_control), (8 bytes).
    Removing am_hal_mspi.o(.text.am_hal_mspi_highprio_transfer), (218 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.am_hal_mspi_highprio_transfer), (8 bytes).
    Removing am_hal_mspi.o(.text.mspi_add_hp_transaction), (156 bytes).
    Removing am_hal_mspi.o(.ARM.exidx.text.mspi_add_hp_transaction), (8 bytes).
    Removing am_hal_mspi.o(.bss.g_MSPIState), (2212 bytes).
    Removing am_hal_pwrctrl.o(.text), (0 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_periph_enable), (8 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_periph_disable), (8 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.pwrctrl_periph_disable_msk_check), (8 bytes).
    Removing am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enabled), (156 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_periph_enabled), (8 bytes).
    Removing am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_enable), (278 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_memory_enable), (8 bytes).
    Removing am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_deepsleep_powerdown), (70 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_memory_deepsleep_powerdown), (8 bytes).
    Removing am_hal_pwrctrl.o(.text.am_hal_pwrctrl_memory_deepsleep_retain), (70 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_memory_deepsleep_retain), (8 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_low_power_init), (8 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.simobuck_updates), (8 bytes).
    Removing am_hal_pwrctrl.o(.ARM.exidx.text.am_hal_pwrctrl_blebuck_trim), (8 bytes).
    Removing am_hal_pwrctrl.o(.bss.g_bSimobuckTrimsDone), (1 bytes).
    Removing am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_memory_control), (432 bytes).
    Removing am_hal_reset.o(.text), (0 bytes).
    Removing am_hal_reset.o(.text.am_hal_reset_configure), (144 bytes).
    Removing am_hal_reset.o(.ARM.exidx.text.am_hal_reset_configure), (8 bytes).
    Removing am_hal_reset.o(.text.am_hal_reset_control), (98 bytes).
    Removing am_hal_reset.o(.ARM.exidx.text.am_hal_reset_control), (8 bytes).
    Removing am_hal_reset.o(.text.am_hal_reset_status_get), (194 bytes).
    Removing am_hal_reset.o(.ARM.exidx.text.am_hal_reset_status_get), (8 bytes).
    Removing am_hal_reset.o(.text.am_hal_reset_interrupt_enable), (40 bytes).
    Removing am_hal_reset.o(.ARM.exidx.text.am_hal_reset_interrupt_enable), (8 bytes).
    Removing am_hal_reset.o(.text.am_hal_reset_interrupt_disable), (40 bytes).
    Removing am_hal_reset.o(.ARM.exidx.text.am_hal_reset_interrupt_disable), (8 bytes).
    Removing am_hal_reset.o(.text.am_hal_reset_interrupt_clear), (22 bytes).
    Removing am_hal_reset.o(.ARM.exidx.text.am_hal_reset_interrupt_clear), (8 bytes).
    Removing am_hal_reset.o(.text.am_hal_reset_interrupt_status_get), (46 bytes).
    Removing am_hal_reset.o(.ARM.exidx.text.am_hal_reset_interrupt_status_get), (8 bytes).
    Removing am_hal_rtc.o(.text), (0 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_osc_select), (32 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_osc_select), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_osc_enable), (18 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_osc_enable), (8 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_osc_disable), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_time_12hour), (38 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_time_12hour), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_int_enable), (24 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_enable), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_int_enable_get), (12 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_enable_get), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_int_disable), (24 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_disable), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_int_set), (20 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_set), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_int_clear), (20 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_clear), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_int_status_get), (78 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_int_status_get), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_time_set), (224 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_time_set), (8 bytes).
    Removing am_hal_rtc.o(.text.dec_to_bcd), (46 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.dec_to_bcd), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_time_get), (240 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_time_get), (8 bytes).
    Removing am_hal_rtc.o(.text.bcd_to_dec), (30 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.bcd_to_dec), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_alarm_interval_set), (134 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_alarm_interval_set), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_alarm_set), (246 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_alarm_set), (8 bytes).
    Removing am_hal_rtc.o(.text.am_hal_rtc_alarm_get), (196 bytes).
    Removing am_hal_rtc.o(.ARM.exidx.text.am_hal_rtc_alarm_get), (8 bytes).
    Removing am_hal_scard.o(.text), (0 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_initialize), (174 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_initialize), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_deinitialize), (84 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_deinitialize), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_power_control), (660 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_power_control), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_interrupt_clear), (114 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_clear), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_configure), (360 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_configure), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_control), (782 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_control), (8 bytes).
    Removing am_hal_scard.o(.text.buffer_configure), (258 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.buffer_configure), (8 bytes).
    Removing am_hal_scard.o(.text.scard_fifo_read), (534 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.scard_fifo_read), (8 bytes).
    Removing am_hal_scard.o(.text.config_etucounter), (180 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.config_etucounter), (8 bytes).
    Removing am_hal_scard.o(.text.scard_fifo_write), (736 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.scard_fifo_write), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_transfer), (96 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_transfer), (8 bytes).
    Removing am_hal_scard.o(.text.write_timeout), (206 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.write_timeout), (8 bytes).
    Removing am_hal_scard.o(.text.read_timeout), (206 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.read_timeout), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_tx_flush), (112 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_tx_flush), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_interrupt_service), (214 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_service), (8 bytes).
    Removing am_hal_scard.o(.text.rx_queue_update), (76 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.rx_queue_update), (8 bytes).
    Removing am_hal_scard.o(.text.tx_queue_update), (74 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.tx_queue_update), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_interrupt_enable), (122 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_enable), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_interrupt_disable), (122 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_disable), (8 bytes).
    Removing am_hal_scard.o(.text.am_hal_scard_interrupt_status_get), (112 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.am_hal_scard_interrupt_status_get), (8 bytes).
    Removing am_hal_scard.o(.text.config_baudrate), (190 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.config_baudrate), (8 bytes).
    Removing am_hal_scard.o(.text.config_cardformat), (586 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.config_cardformat), (8 bytes).
    Removing am_hal_scard.o(.text.config_parity), (282 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.config_parity), (8 bytes).
    Removing am_hal_scard.o(.text.config_protocol), (226 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.config_protocol), (8 bytes).
    Removing am_hal_scard.o(.text.write_nonblocking), (206 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.write_nonblocking), (8 bytes).
    Removing am_hal_scard.o(.text.read_nonblocking), (208 bytes).
    Removing am_hal_scard.o(.ARM.exidx.text.read_nonblocking), (8 bytes).
    Removing am_hal_scard.o(.bss.g_am_hal_scard_states), (112 bytes).
    Removing am_hal_scard.o(.data.g_WaitTime), (2 bytes).
    Removing am_hal_scard.o(.data.g_F_Integer), (64 bytes).
    Removing am_hal_scard.o(.data.g_D_Integer), (16 bytes).
    Removing am_hal_secure_ota.o(.text), (0 bytes).
    Removing am_hal_secure_ota.o(.text.am_hal_ota_init), (104 bytes).
    Removing am_hal_secure_ota.o(.ARM.exidx.text.am_hal_ota_init), (8 bytes).
    Removing am_hal_secure_ota.o(.text.erase_flash_page), (50 bytes).
    Removing am_hal_secure_ota.o(.ARM.exidx.text.erase_flash_page), (8 bytes).
    Removing am_hal_secure_ota.o(.text.am_hal_ota_add), (172 bytes).
    Removing am_hal_secure_ota.o(.ARM.exidx.text.am_hal_ota_add), (8 bytes).
    Removing am_hal_secure_ota.o(.text.am_hal_get_ota_status), (108 bytes).
    Removing am_hal_secure_ota.o(.ARM.exidx.text.am_hal_get_ota_status), (8 bytes).
    Removing am_hal_secure_ota.o(.bss.gSOtaState), (12 bytes).
    Removing am_hal_security.o(.text), (0 bytes).
    Removing am_hal_security.o(.text.am_hal_security_get_info), (290 bytes).
    Removing am_hal_security.o(.ARM.exidx.text.am_hal_security_get_info), (8 bytes).
    Removing am_hal_security.o(.text.am_hal_security_set_key), (122 bytes).
    Removing am_hal_security.o(.ARM.exidx.text.am_hal_security_set_key), (8 bytes).
    Removing am_hal_security.o(.text.am_hal_security_get_lock_status), (96 bytes).
    Removing am_hal_security.o(.ARM.exidx.text.am_hal_security_get_lock_status), (8 bytes).
    Removing am_hal_security.o(.text.am_hal_crc32_init), (60 bytes).
    Removing am_hal_security.o(.ARM.exidx.text.am_hal_crc32_init), (8 bytes).
    Removing am_hal_security.o(.text.am_hal_crc32_accum), (508 bytes).
    Removing am_hal_security.o(.ARM.exidx.text.am_hal_crc32_accum), (8 bytes).
    Removing am_hal_security.o(.text.am_hal_crc32), (42 bytes).
    Removing am_hal_security.o(.ARM.exidx.text.am_hal_crc32), (8 bytes).
    Removing am_hal_security.o(.text.am_hal_bootloader_exit), (224 bytes).
    Removing am_hal_security.o(.ARM.exidx.text.am_hal_bootloader_exit), (8 bytes).
    Removing am_hal_security.o(.text.bl_run_main), (18 bytes).
    Removing am_hal_security.o(.ARM.exidx.text.bl_run_main), (8 bytes).
    Removing am_hal_security.o(.bss.g_pFlash0), (4 bytes).
    Removing am_hal_security.o(.data.g_pFlash4), (4 bytes).
    Removing am_hal_security.o(.data.sblPreV2), (48 bytes).
    Removing am_hal_security.o(.bss.g_CRC_buffer), (512 bytes).
    Removing am_hal_stimer.o(.text), (0 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_config), (26 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_config), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_counter_get), (50 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_counter_get), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_counter_clear), (26 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_counter_clear), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_compare_delta_set), (184 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_compare_delta_set), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_compare_get), (42 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_compare_get), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_capture_start), (254 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_capture_start), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_capture_stop), (30 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_capture_stop), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_nvram_set), (20 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_nvram_set), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_nvram_get), (42 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_nvram_get), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_capture_get), (42 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_capture_get), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_int_enable), (24 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_enable), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_int_enable_get), (12 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_enable_get), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_int_disable), (24 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_disable), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_int_set), (20 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_set), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_int_clear), (20 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_clear), (8 bytes).
    Removing am_hal_stimer.o(.text.am_hal_stimer_int_status_get), (52 bytes).
    Removing am_hal_stimer.o(.ARM.exidx.text.am_hal_stimer_int_status_get), (8 bytes).
    Removing am_hal_sysctrl.o(.text), (0 bytes).
    Removing am_hal_sysctrl.o(.text.am_hal_sysctrl_sleep), (338 bytes).
    Removing am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_sleep), (8 bytes).
    Removing am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_enable), (16 bytes).
    Removing am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_fpu_enable), (8 bytes).
    Removing am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_disable), (14 bytes).
    Removing am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_fpu_disable), (8 bytes).
    Removing am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_stacking_enable), (72 bytes).
    Removing am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_fpu_stacking_enable), (8 bytes).
    Removing am_hal_sysctrl.o(.text.am_hal_sysctrl_fpu_stacking_disable), (36 bytes).
    Removing am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_fpu_stacking_disable), (8 bytes).
    Removing am_hal_sysctrl.o(.text.am_hal_sysctrl_aircr_reset), (4 bytes).
    Removing am_hal_sysctrl.o(.ARM.exidx.text.am_hal_sysctrl_aircr_reset), (8 bytes).
    Removing am_hal_sysctrl.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing am_hal_sysctrl.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing am_hal_sysctrl.o(.bss.g_am_hal_sysctrl_sleep_count), (4 bytes).
    Removing am_hal_sysctrl.o(.bss.g_ui32BusWriteFlush), (4 bytes).
    Removing am_hal_systick.o(.text), (0 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_start), (18 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_start), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_stop), (18 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_stop), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_int_enable), (18 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_int_enable), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_int_disable), (18 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_int_disable), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_int_status_get), (16 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_int_status_get), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_reset), (14 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_reset), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_load), (32 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_load), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_count), (12 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_count), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_wait_ticks), (92 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_wait_ticks), (8 bytes).
    Removing am_hal_systick.o(.text.am_hal_systick_delay_us), (184 bytes).
    Removing am_hal_systick.o(.ARM.exidx.text.am_hal_systick_delay_us), (8 bytes).
    Removing am_hal_tpiu.o(.text), (0 bytes).
    Removing am_hal_tpiu.o(.text.am_hal_tpiu_clock_enable), (18 bytes).
    Removing am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_clock_enable), (8 bytes).
    Removing am_hal_tpiu.o(.text.am_hal_tpiu_clock_disable), (18 bytes).
    Removing am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_clock_disable), (8 bytes).
    Removing am_hal_tpiu.o(.text.am_hal_tpiu_port_width_set), (24 bytes).
    Removing am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_port_width_set), (8 bytes).
    Removing am_hal_tpiu.o(.text.am_hal_tpiu_supported_port_width_get), (70 bytes).
    Removing am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_supported_port_width_get), (8 bytes).
    Removing am_hal_tpiu.o(.text.am_hal_tpiu_port_width_get), (62 bytes).
    Removing am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_port_width_get), (8 bytes).
    Removing am_hal_tpiu.o(.text.am_hal_tpiu_configure), (68 bytes).
    Removing am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_configure), (8 bytes).
    Removing am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_enable), (8 bytes).
    Removing am_hal_tpiu.o(.text.am_hal_tpiu_disable), (14 bytes).
    Removing am_hal_tpiu.o(.ARM.exidx.text.am_hal_tpiu_disable), (8 bytes).
    Removing am_hal_uart.o(.text), (0 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_initialize), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_deinitialize), (84 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_deinitialize), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_power_control), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_clear), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_configure), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.config_baudrate), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.buffer_configure), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_transfer), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.write_timeout), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.read_timeout), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_tx_flush), (118 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_tx_flush), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_flags_get), (104 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_flags_get), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_fifo_read), (80 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_fifo_read), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.uart_fifo_read), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_fifo_write), (80 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_fifo_write), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.uart_fifo_write), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_interrupt_service), (274 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_service), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.rx_queue_update), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.tx_queue_update), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_enable), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_disable), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_interrupt_status_get), (130 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_status_get), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_interrupt_enable_get), (92 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_interrupt_enable_get), (8 bytes).
    Removing am_hal_uart.o(.text.am_hal_uart_control), (98 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.am_hal_uart_control), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.write_nonblocking), (8 bytes).
    Removing am_hal_uart.o(.ARM.exidx.text.read_nonblocking), (8 bytes).
    Removing am_hal_wdt.o(.text), (0 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_init), (198 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_init), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_start), (30 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_start), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_halt), (18 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_halt), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_lock_and_start), (14 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_lock_and_start), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_int_status_get), (84 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_status_get), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_int_set), (14 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_set), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_int_clear), (14 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_clear), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_int_enable), (18 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_enable), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_int_enable_get), (12 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_enable_get), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_int_disable), (18 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_int_disable), (8 bytes).
    Removing am_hal_wdt.o(.text.am_hal_wdt_counter_get), (166 bytes).
    Removing am_hal_wdt.o(.ARM.exidx.text.am_hal_wdt_counter_get), (8 bytes).
    Removing am_hal_wdt.o(.rodata.str1.1), (49 bytes).
    Removing am_hal_flash.o(.text), (0 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_mass_erase), (28 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_mass_erase), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_page_erase), (32 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_page_erase), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_program_main), (158 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_program_main), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_clear_bits), (54 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_clear_bits), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_program_info), (190 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_program_info), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_erase_info), (28 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_erase_info), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_erase_main_plus_info), (28 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_erase_main_plus_info), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_erase_main_plus_info_both_instances), (24 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_erase_main_plus_info_both_instances), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_recovery), (56 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_recovery), (8 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_delay), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_delay_status_change), (70 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_delay_status_change), (8 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_delay_status_check), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_customer_info_signature_check), (110 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_customer_info_signature_check), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_info_signature_set), (22 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_signature_set), (8 bytes).
    Removing am_hal_flash.o(.text.customer_info_signature_set), (128 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.customer_info_signature_set), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_info_erase_disable), (78 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_erase_disable), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_info_erase_disable_check), (68 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_erase_disable_check), (8 bytes).
    Removing am_hal_flash.o(.text.customer_info_signature_erased), (78 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.customer_info_signature_erased), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_info_program_disable), (94 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_program_disable), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_info_program_disable_get), (60 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_info_program_disable_get), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_wipe_flash_enable), (78 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_wipe_flash_enable), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_wipe_flash_enable_check), (68 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_wipe_flash_enable_check), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_wipe_sram_enable), (78 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_wipe_sram_enable), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_wipe_sram_enable_check), (68 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_wipe_sram_enable_check), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_swo_disable), (78 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_swo_disable), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_swo_disable_check), (68 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_swo_disable_check), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_debugger_disable), (78 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_debugger_disable), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_debugger_disable_check), (62 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_debugger_disable_check), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_copy_protect_set), (268 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_copy_protect_set), (8 bytes).
    Removing am_hal_flash.o(.text.generate_chunk_mask), (190 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.generate_chunk_mask), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_copy_protect_check), (116 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_copy_protect_check), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_write_protect_set), (268 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_write_protect_set), (8 bytes).
    Removing am_hal_flash.o(.text.am_hal_flash_write_protect_check), (116 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_write_protect_check), (8 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_load_ui32), (8 bytes).
    Removing am_hal_flash.o(.ARM.exidx.text.am_hal_flash_store_ui32), (8 bytes).
    Removing am_hal_flash.o(.rodata.ui32SramMaxAddr), (4 bytes).
    Removing am_hal_flash.o(.data.SRAM_write_ui32), (12 bytes).
    Removing am_hal_adc.o(.text), (0 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_initialize), (298 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_initialize), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_deinitialize), (104 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_deinitialize), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_disable), (96 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_disable), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_configure), (206 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_configure), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_configure_slot), (204 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_configure_slot), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_configure_dma), (212 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_configure_dma), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_control), (424 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_control), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_enable), (114 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_enable), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_status_get), (134 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_status_get), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_interrupt_enable), (86 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_interrupt_enable), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_interrupt_disable), (86 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_interrupt_disable), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_interrupt_status), (132 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_interrupt_status), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_interrupt_clear), (82 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_interrupt_clear), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_samples_read), (298 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_samples_read), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_sw_trigger), (78 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_sw_trigger), (8 bytes).
    Removing am_hal_adc.o(.text.am_hal_adc_power_control), (484 bytes).
    Removing am_hal_adc.o(.ARM.exidx.text.am_hal_adc_power_control), (8 bytes).
    Removing am_hal_adc.o(.bss.g_ADCState), (64 bytes).
    Removing am_hal_adc.o(.bss.g_ADCSlotsConfigured), (4 bytes).
    Removing am_hal_adc.o(.bss.priv_temp_trims), (16 bytes).
    Removing am_hal_ble.o(.text), (0 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_wakeup_set), (112 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_wakeup_set), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_initialize), (322 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_initialize), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_deinitialize), (150 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_deinitialize), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_config), (372 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_config), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_crc_nz), (78 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_crc_nz), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_power_control), (524 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_power_control), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_boot), (216 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_boot), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_default_copy_patch_apply), (100 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_default_copy_patch_apply), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_default_trim_set_ramcode), (188 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_default_trim_set_ramcode), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_default_patch_apply), (194 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_default_patch_apply), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_patch_complete), (620 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_patch_complete), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_check_32k_clock), (106 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_check_32k_clock), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_patch_apply), (912 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_patch_apply), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_blocking_hci_write), (160 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_blocking_hci_write), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_blocking_transfer), (1110 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_blocking_transfer), (8 bytes).
    Removing am_hal_ble.o(.text.buffer_compare), (82 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.buffer_compare), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_patch_copy_end_apply), (330 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_patch_copy_end_apply), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_load_modex_trim_set), (50 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_load_modex_trim_set), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_trim_set), (154 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_trim_set), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_plf_reg_read), (244 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_plf_reg_read), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_plf_reg_write), (250 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_plf_reg_write), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_vs_command_build), (88 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_vs_command_build), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_blocking_hci_read), (256 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_blocking_hci_read), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_nonblocking_hci_write), (160 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_nonblocking_hci_write), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_nonblocking_transfer), (104 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_nonblocking_transfer), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_nonblocking_hci_read), (190 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_nonblocking_hci_read), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_check_irq), (46 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_check_irq), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_check_status), (74 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_check_status), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_bus_lock), (84 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_bus_lock), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_cmd_write), (222 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_cmd_write), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_fifo_drain), (188 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_fifo_drain), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_bus_release), (16 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_bus_release), (8 bytes).
    Removing am_hal_ble.o(.text.nonblocking_write), (278 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.nonblocking_write), (8 bytes).
    Removing am_hal_ble.o(.text.nonblocking_read), (244 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.nonblocking_read), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_int_service), (426 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_service), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_int_enable), (100 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_enable), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_int_disable), (100 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_disable), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_int_status), (74 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_status), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_int_clear), (82 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_int_clear), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_transmitter_modex_set), (254 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_transmitter_modex_set), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_sleep_set), (160 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_sleep_set), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_sleep_get), (98 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_sleep_get), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_tx_power_set), (218 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_tx_power_set), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_fifo_read), (68 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_fifo_read), (8 bytes).
    Removing am_hal_ble.o(.text.am_hal_ble_read_trimdata_from_info1), (102 bytes).
    Removing am_hal_ble.o(.ARM.exidx.text.am_hal_ble_read_trimdata_from_info1), (8 bytes).
    Removing am_hal_ble.o(.rodata.am_hal_ble_default_config), (28 bytes).
    Removing am_hal_ble.o(.bss.g_sBLEState), (72 bytes).
    Removing am_hal_ble.o(.bss.g_psPatchBuffer), (132 bytes).
    Removing am_hal_ble.o(.rodata.ccitt_table), (512 bytes).
    Removing am_hal_ble_patch.o(.text), (0 bytes).
    Removing am_hal_ble_patch.o(.data.am_ble_performance_patch), (16 bytes).
    Removing am_hal_ble_patch.o(.data.am_ble_buffer_patch), (16 bytes).
    Removing am_hal_ble_patch.o(.data.am_ble_nvds_patch), (16 bytes).
    Removing am_hal_ble_patch.o(.data.am_hal_ble_default_patch_array), (12 bytes).
    Removing am_hal_ble_patch.o(.data.am_ble_performance_copy_patch), (16 bytes).
    Removing am_hal_ble_patch.o(.data.am_hal_ble_default_copy_patch_array), (4 bytes).
    Removing am_hal_ble_patch.o(.data.am_hal_ble_default_patches), (4 bytes).
    Removing am_hal_ble_patch.o(.data.am_hal_ble_default_copy_patches), (4 bytes).
    Removing am_hal_ble_patch.o(.rodata.am_hal_ble_num_default_patches), (4 bytes).
    Removing am_hal_ble_patch.o(.rodata.am_ble_performance_copy_patch_data), (2324 bytes).
    Removing am_hal_ble_patch.o(.data.am_ble_performance_patch_data), (260 bytes).
    Removing am_hal_ble_patch.o(.rodata.am_ble_buffer_patch_data), (3384 bytes).
    Removing am_hal_ble_patch.o(.data.am_ble_buffer_nvds_data), (192 bytes).
    Removing am_hal_ble_patch_b0.o(.text), (0 bytes).
    Removing am_hal_ble_patch_b0.o(.data.am_ble_performance_patch_b0), (16 bytes).
    Removing am_hal_ble_patch_b0.o(.data.am_ble_buffer_patch_b0), (16 bytes).
    Removing am_hal_ble_patch_b0.o(.data.am_ble_nvds_patch_b0), (16 bytes).
    Removing am_hal_ble_patch_b0.o(.data.am_hal_ble_default_patch_array_b0), (12 bytes).
    Removing am_hal_ble_patch_b0.o(.data.am_hal_ble_default_patches_b0), (4 bytes).
    Removing am_hal_ble_patch_b0.o(.rodata.am_hal_ble_num_default_patches_b0), (4 bytes).
    Removing am_hal_ble_patch_b0.o(.data.am_ble_performance_patch_data_b0), (4788 bytes).
    Removing am_hal_ble_patch_b0.o(.rodata.am_ble_buffer_patch_data_b0), (1824 bytes).
    Removing am_hal_ble_patch_b0.o(.data.am_ble_buffer_nvds_data_b0), (200 bytes).
    Removing am_hal_burst.o(.text), (0 bytes).
    Removing am_hal_burst.o(.text.am_hal_burst_mode_initialize), (232 bytes).
    Removing am_hal_burst.o(.ARM.exidx.text.am_hal_burst_mode_initialize), (8 bytes).
    Removing am_hal_burst.o(.text.am_hal_burst_mode_enable), (164 bytes).
    Removing am_hal_burst.o(.ARM.exidx.text.am_hal_burst_mode_enable), (8 bytes).
    Removing am_hal_burst.o(.text.am_hal_burst_mode_disable), (140 bytes).
    Removing am_hal_burst.o(.ARM.exidx.text.am_hal_burst_mode_disable), (8 bytes).
    Removing am_hal_burst.o(.bss.g_am_hal_burst_mode_available), (1 bytes).
    Removing am_hal_cmdq.o(.text), (0 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_init), (306 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_init), (8 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_enable), (8 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_disable), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_alloc_block), (310 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_alloc_block), (8 bytes).
    Removing am_hal_cmdq.o(.text.update_indices), (88 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.update_indices), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_release_block), (98 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_release_block), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_post_block), (152 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_post_block), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_get_status), (194 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_get_status), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_term), (144 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_term), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_error_resume), (194 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_error_resume), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_pause), (406 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_pause), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_reset), (156 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_reset), (8 bytes).
    Removing am_hal_cmdq.o(.text.am_hal_cmdq_post_loop_block), (172 bytes).
    Removing am_hal_cmdq.o(.ARM.exidx.text.am_hal_cmdq_post_loop_block), (8 bytes).
    Removing am_hal_cmdq.o(.bss.gAmHalCmdq), (352 bytes).
    Removing am_hal_cmdq.o(.rodata.gAmHalCmdQReg), (320 bytes).
    Removing am_hal_entropy.o(.text), (0 bytes).
    Removing am_hal_entropy.o(.text.am_hal_entropy_init), (40 bytes).
    Removing am_hal_entropy.o(.ARM.exidx.text.am_hal_entropy_init), (8 bytes).
    Removing am_hal_entropy.o(.text.entropy_ctimer_init), (62 bytes).
    Removing am_hal_entropy.o(.ARM.exidx.text.entropy_ctimer_init), (8 bytes).
    Removing am_hal_entropy.o(.text.entropy_ctimer_isr), (274 bytes).
    Removing am_hal_entropy.o(.ARM.exidx.text.entropy_ctimer_isr), (8 bytes).
    Removing am_hal_entropy.o(.text.__NVIC_EnableIRQ), (48 bytes).
    Removing am_hal_entropy.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing am_hal_entropy.o(.text.am_hal_entropy_enable), (64 bytes).
    Removing am_hal_entropy.o(.ARM.exidx.text.am_hal_entropy_enable), (8 bytes).
    Removing am_hal_entropy.o(.text.am_hal_entropy_disable), (18 bytes).
    Removing am_hal_entropy.o(.ARM.exidx.text.am_hal_entropy_disable), (8 bytes).
    Removing am_hal_entropy.o(.text.am_hal_entropy_get_values), (84 bytes).
    Removing am_hal_entropy.o(.ARM.exidx.text.am_hal_entropy_get_values), (8 bytes).
    Removing am_hal_entropy.o(.bss.am_hal_entropy_timing_error_count), (4 bytes).
    Removing am_hal_entropy.o(.data.sENTROPYTimerConfig), (12 bytes).
    Removing am_hal_entropy.o(.data.g_ui32LastSysTick), (4 bytes).
    Removing am_hal_entropy.o(.bss.g_sEntropyCollector), (20 bytes).
    Removing am_hal_entropy.o(.bss.g_ui32LastSleepCount), (4 bytes).
    Removing am_hal_pdm.o(.text), (0 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_initialize), (164 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_initialize), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_deinitialize), (88 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_deinitialize), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_power_control), (224 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_power_control), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_configure), (484 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_configure), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_enable), (96 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_enable), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_disable), (96 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_disable), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_dma_start), (190 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_dma_start), (8 bytes).
    Removing am_hal_pdm.o(.text.find_dma_threshold), (74 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.find_dma_threshold), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_fifo_flush), (84 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_fifo_flush), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_i2s_enable), (88 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_i2s_enable), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_i2s_disable), (88 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_i2s_disable), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_interrupt_enable), (90 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_interrupt_enable), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_interrupt_disable), (90 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_interrupt_disable), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_interrupt_clear), (86 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_interrupt_clear), (8 bytes).
    Removing am_hal_pdm.o(.text.am_hal_pdm_interrupt_status_get), (138 bytes).
    Removing am_hal_pdm.o(.ARM.exidx.text.am_hal_pdm_interrupt_status_get), (8 bytes).
    Removing am_hal_pdm.o(.bss.g_am_hal_pdm_states), (12 bytes).
    Removing am_hal_queue.o(.text), (0 bytes).
    Removing am_hal_queue.o(.ARM.exidx.text.am_hal_queue_init), (8 bytes).
    Removing am_hal_queue.o(.ARM.exidx.text.am_hal_queue_item_add), (8 bytes).
    Removing am_hal_queue.o(.ARM.exidx.text.am_hal_queue_item_get), (8 bytes).
    Removing am_hal_global.o(.rev16_text), (4 bytes).
    Removing am_hal_global.o(.revsh_text), (4 bytes).
    Removing am_hal_global.o(.rrx_text), (6 bytes).
    Removing am_hal_global.o(.emb_text), (28 bytes).
    Removing am_hal_global.o(.constdata), (14 bytes).
    Removing am_hal_global.o(.constdata), (4 bytes).

1115 unused section(s) (total 98233 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../am_hal_global.c                       0x00000000   Number         0  am_hal_global.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/d2f.s                           0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ..\am_hal_global.c                       0x00000000   Number         0  am_hal_global.o ABSOLUTE
    am_hal_adc.c                             0x00000000   Number         0  am_hal_adc.o ABSOLUTE
    am_hal_ble.c                             0x00000000   Number         0  am_hal_ble.o ABSOLUTE
    am_hal_ble_patch.c                       0x00000000   Number         0  am_hal_ble_patch.o ABSOLUTE
    am_hal_ble_patch_b0.c                    0x00000000   Number         0  am_hal_ble_patch_b0.o ABSOLUTE
    am_hal_burst.c                           0x00000000   Number         0  am_hal_burst.o ABSOLUTE
    am_hal_cachectrl.c                       0x00000000   Number         0  am_hal_cachectrl.o ABSOLUTE
    am_hal_clkgen.c                          0x00000000   Number         0  am_hal_clkgen.o ABSOLUTE
    am_hal_cmdq.c                            0x00000000   Number         0  am_hal_cmdq.o ABSOLUTE
    am_hal_ctimer.c                          0x00000000   Number         0  am_hal_ctimer.o ABSOLUTE
    am_hal_debug.c                           0x00000000   Number         0  am_hal_debug.o ABSOLUTE
    am_hal_entropy.c                         0x00000000   Number         0  am_hal_entropy.o ABSOLUTE
    am_hal_flash.c                           0x00000000   Number         0  am_hal_flash.o ABSOLUTE
    am_hal_gpio.c                            0x00000000   Number         0  am_hal_gpio.o ABSOLUTE
    am_hal_interrupt.c                       0x00000000   Number         0  am_hal_interrupt.o ABSOLUTE
    am_hal_iom.c                             0x00000000   Number         0  am_hal_iom.o ABSOLUTE
    am_hal_ios.c                             0x00000000   Number         0  am_hal_ios.o ABSOLUTE
    am_hal_itm.c                             0x00000000   Number         0  am_hal_itm.o ABSOLUTE
    am_hal_mcuctrl.c                         0x00000000   Number         0  am_hal_mcuctrl.o ABSOLUTE
    am_hal_mspi.c                            0x00000000   Number         0  am_hal_mspi.o ABSOLUTE
    am_hal_pdm.c                             0x00000000   Number         0  am_hal_pdm.o ABSOLUTE
    am_hal_pwrctrl.c                         0x00000000   Number         0  am_hal_pwrctrl.o ABSOLUTE
    am_hal_queue.c                           0x00000000   Number         0  am_hal_queue.o ABSOLUTE
    am_hal_reset.c                           0x00000000   Number         0  am_hal_reset.o ABSOLUTE
    am_hal_rtc.c                             0x00000000   Number         0  am_hal_rtc.o ABSOLUTE
    am_hal_scard.c                           0x00000000   Number         0  am_hal_scard.o ABSOLUTE
    am_hal_secure_ota.c                      0x00000000   Number         0  am_hal_secure_ota.o ABSOLUTE
    am_hal_security.c                        0x00000000   Number         0  am_hal_security.o ABSOLUTE
    am_hal_stimer.c                          0x00000000   Number         0  am_hal_stimer.o ABSOLUTE
    am_hal_sysctrl.c                         0x00000000   Number         0  am_hal_sysctrl.o ABSOLUTE
    am_hal_systick.c                         0x00000000   Number         0  am_hal_systick.o ABSOLUTE
    am_hal_tpiu.c                            0x00000000   Number         0  am_hal_tpiu.o ABSOLUTE
    am_hal_uart.c                            0x00000000   Number         0  am_hal_uart.o ABSOLUTE
    am_hal_wdt.c                             0x00000000   Number         0  am_hal_wdt.o ABSOLUTE
    am_util_debug.c                          0x00000000   Number         0  am_util_debug.o ABSOLUTE
    am_util_delay.c                          0x00000000   Number         0  am_util_delay.o ABSOLUTE
    am_util_stdio.c                          0x00000000   Number         0  am_util_stdio.o ABSOLUTE
    am_util_string.c                         0x00000000   Number         0  am_util_string.o ABSOLUTE
    am_util_time.c                           0x00000000   Number         0  am_util_time.o ABSOLUTE
    amx8x5_device.c                          0x00000000   Number         0  amx8x5_device.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    iom_dma.c                                0x00000000   Number         0  iom_dma.o ABSOLUTE
    iom_spi.c                                0x00000000   Number         0  iom_spi.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    startup/startup_keil.s                   0x00000000   Number         0  startup_keil.o ABSOLUTE
    uart_debug.c                             0x00000000   Number         0  uart_debug.o ABSOLUTE
    RESET                                    0x0000c000   Section      308  startup_keil.o(RESET)
    $v0                                      0x0000c100   Number         0  startup_keil.o(RESET)
    !!!main                                  0x0000c134   Section        8  __main.o(!!!main)
    !!!scatter                               0x0000c13c   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x0000c170   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x0000c18c   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0000c1a8   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0000c1aa   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0000c1ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0000c1ae   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x0000c1b0   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000c1b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000c1b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000c1b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000c1b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000c1b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000c1b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000c1b2   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000c1b4   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000c1b4   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000c1b4   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0000c1ba   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0000c1ba   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000c1be   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000c1be   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000c1c6   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0000c1c8   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0000c1c8   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0000c1cc   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000c1d4   Number         0  startup_keil.o(.text)
    .text                                    0x0000c1d4   Section       24  startup_keil.o(.text)
    .text                                    0x0000c1ec   Section        0  heapauxi.o(.text)
    .text                                    0x0000c1f2   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0000c23c   Section        0  exit.o(.text)
    .text                                    0x0000c250   Section        8  libspace.o(.text)
    .text                                    0x0000c258   Section        0  sys_exit.o(.text)
    .text                                    0x0000c264   Section        2  use_no_semi.o(.text)
    .text                                    0x0000c266   Section        0  indicate_semi.o(.text)
    __NVIC_EnableIRQ                         0x0000c269   Thumb Code    48  iom_dma.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x0000c268   Section        0  iom_dma.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x0000c298   Section        0  am_hal_cachectrl.o(.text.am_hal_cachectrl_config)
    [Anonymous Symbol]                       0x0000c2ec   Section        0  am_hal_cachectrl.o(.text.am_hal_cachectrl_control)
    [Anonymous Symbol]                       0x0000c58c   Section        0  am_hal_cachectrl.o(.text.am_hal_cachectrl_enable)
    [Anonymous Symbol]                       0x0000c5a0   Section        0  am_hal_clkgen.o(.text.am_hal_clkgen_control)
    [Anonymous Symbol]                       0x0000c734   Section        0  am_hal_clkgen.o(.text.am_hal_clkgen_status_get)
    [Anonymous Symbol]                       0x0000c798   Section        0  am_hal_cmdq.o(.text.am_hal_cmdq_disable)
    [Anonymous Symbol]                       0x0000c804   Section        0  am_hal_cmdq.o(.text.am_hal_cmdq_enable)
    [Anonymous Symbol]                       0x0000c870   Section        0  am_hal_flash.o(.text.am_hal_flash_delay)
    [Anonymous Symbol]                       0x0000c8c0   Section        0  am_hal_flash.o(.text.am_hal_flash_delay_status_check)
    [Anonymous Symbol]                       0x0000c934   Section        0  am_hal_flash.o(.text.am_hal_flash_load_ui32)
    [Anonymous Symbol]                       0x0000c94c   Section        0  am_hal_flash.o(.text.am_hal_flash_store_ui32)
    [Anonymous Symbol]                       0x0000c980   Section        0  am_hal_gpio.o(.text.am_hal_gpio_pinconfig)
    [Anonymous Symbol]                       0x0000cd44   Section        0  am_hal_gpio.o(.text.am_hal_gpio_state_read)
    [Anonymous Symbol]                       0x0000ce08   Section        0  am_hal_gpio.o(.text.am_hal_gpio_state_write)
    [Anonymous Symbol]                       0x0000cedc   Section        0  am_hal_interrupt.o(.text.am_hal_interrupt_master_disable)
    [Anonymous Symbol]                       0x0000cee4   Section        0  am_hal_interrupt.o(.text.am_hal_interrupt_master_enable)
    [Anonymous Symbol]                       0x0000ceec   Section        0  am_hal_interrupt.o(.text.am_hal_interrupt_master_set)
    [Anonymous Symbol]                       0x0000cef4   Section        0  am_hal_iom.o(.text.am_hal_iom_CQDisable)
    [Anonymous Symbol]                       0x0000cf0c   Section        0  am_hal_iom.o(.text.am_hal_iom_CQEnable)
    [Anonymous Symbol]                       0x0000cf50   Section        0  am_hal_iom.o(.text.am_hal_iom_initialize)
    [Anonymous Symbol]                       0x0000cff0   Section        0  am_hal_iom.o(.text.am_hal_iom_power_ctrl)
    [Anonymous Symbol]                       0x0000d35c   Section        0  am_hal_itm.o(.text.am_hal_itm_enable)
    [Anonymous Symbol]                       0x0000d3c4   Section        0  am_hal_itm.o(.text.am_hal_itm_print)
    [Anonymous Symbol]                       0x0000d404   Section        0  am_hal_itm.o(.text.am_hal_itm_stimulus_reg_byte_write)
    [Anonymous Symbol]                       0x0000d430   Section        0  am_hal_pwrctrl.o(.text.am_hal_pwrctrl_blebuck_trim)
    [Anonymous Symbol]                       0x0000d484   Section        0  am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init)
    [Anonymous Symbol]                       0x0000d5a0   Section        0  am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable)
    [Anonymous Symbol]                       0x0000d65c   Section        0  am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable)
    [Anonymous Symbol]                       0x0000d740   Section        0  am_hal_queue.o(.text.am_hal_queue_init)
    [Anonymous Symbol]                       0x0000d770   Section        0  am_hal_queue.o(.text.am_hal_queue_item_add)
    [Anonymous Symbol]                       0x0000d814   Section        0  am_hal_queue.o(.text.am_hal_queue_item_get)
    [Anonymous Symbol]                       0x0000d8b4   Section        0  am_hal_rtc.o(.text.am_hal_rtc_osc_disable)
    [Anonymous Symbol]                       0x0000d8c8   Section        0  am_hal_tpiu.o(.text.am_hal_tpiu_enable)
    [Anonymous Symbol]                       0x0000d9c4   Section        0  am_hal_uart.o(.text.am_hal_uart_configure)
    [Anonymous Symbol]                       0x0000db94   Section        0  am_hal_uart.o(.text.am_hal_uart_initialize)
    [Anonymous Symbol]                       0x0000dc30   Section        0  am_hal_uart.o(.text.am_hal_uart_interrupt_clear)
    [Anonymous Symbol]                       0x0000dc8c   Section        0  am_hal_uart.o(.text.am_hal_uart_interrupt_disable)
    [Anonymous Symbol]                       0x0000dcec   Section        0  am_hal_uart.o(.text.am_hal_uart_interrupt_enable)
    [Anonymous Symbol]                       0x0000dd4c   Section        0  am_hal_uart.o(.text.am_hal_uart_power_control)
    [Anonymous Symbol]                       0x0000df48   Section        0  am_hal_uart.o(.text.am_hal_uart_transfer)
    [Anonymous Symbol]                       0x0000dfa8   Section        0  iom_dma.o(.text.am_iomaster0_isr)
    [Anonymous Symbol]                       0x0000e004   Section        0  iom_dma.o(.text.am_iomaster1_isr)
    [Anonymous Symbol]                       0x0000e074   Section        0  iom_dma.o(.text.am_iomaster2_isr)
    [Anonymous Symbol]                       0x0000e0d4   Section        0  iom_dma.o(.text.am_iomaster3_isr)
    [Anonymous Symbol]                       0x0000e134   Section        0  iom_dma.o(.text.am_iomaster4_isr)
    [Anonymous Symbol]                       0x0000e194   Section        0  iom_dma.o(.text.am_iomaster5_isr)
    [Anonymous Symbol]                       0x0000e1f4   Section        0  am_util_delay.o(.text.am_util_delay_ms)
    [Anonymous Symbol]                       0x0000e224   Section        0  am_util_delay.o(.text.am_util_delay_us)
    [Anonymous Symbol]                       0x0000e254   Section        0  am_util_stdio.o(.text.am_util_stdio_printf)
    [Anonymous Symbol]                       0x0000e2b0   Section        0  am_util_stdio.o(.text.am_util_stdio_printf_init)
    [Anonymous Symbol]                       0x0000e2c4   Section        0  am_util_stdio.o(.text.am_util_stdio_vsprintf)
    [Anonymous Symbol]                       0x0000e918   Section        0  am_util_string.o(.text.am_util_string_strnicmp)
    [Anonymous Symbol]                       0x0000e9d0   Section        0  am_util_time.o(.text.am_util_time_computeDayofWeek)
    [Anonymous Symbol]                       0x0000eba0   Section        0  main.o(.text.amx8x5_ext1_gen)
    [Anonymous Symbol]                       0x0000ebc8   Section        0  main.o(.text.amx8x5_ext_reset)
    [Anonymous Symbol]                       0x0000ec24   Section        0  main.o(.text.amx8x5_init)
    [Anonymous Symbol]                       0x0000ecbc   Section        0  main.o(.text.amx8x5_int_clear)
    [Anonymous Symbol]                       0x0000ecfc   Section        0  amx8x5_device.o(.text.amx8x5_reg_block_read)
    [Anonymous Symbol]                       0x0000ed60   Section        0  amx8x5_device.o(.text.amx8x5_reg_block_write)
    [Anonymous Symbol]                       0x0000edc4   Section        0  amx8x5_device.o(.text.amx8x5_reg_clear)
    [Anonymous Symbol]                       0x0000ee18   Section        0  amx8x5_device.o(.text.amx8x5_reg_read)
    [Anonymous Symbol]                       0x0000ee84   Section        0  amx8x5_device.o(.text.amx8x5_reg_set)
    [Anonymous Symbol]                       0x0000eed8   Section        0  amx8x5_device.o(.text.amx8x5_reg_write)
    [Anonymous Symbol]                       0x0000ef1c   Section        0  amx8x5_device.o(.text.amx8x5_reset)
    [Anonymous Symbol]                       0x0000ef58   Section        0  amx8x5_device.o(.text.amx8x5_sleep_set)
    [Anonymous Symbol]                       0x0000f0a4   Section        0  amx8x5_device.o(.text.amx8x5_time_get)
    [Anonymous Symbol]                       0x0000f1a4   Section        0  amx8x5_device.o(.text.amx8x5_time_set)
    [Anonymous Symbol]                       0x0000f37c   Section        0  main.o(.text.amx8x5_wait_por_ready)
    bcd_to_dec                               0x0000f3d5   Thumb Code    30  amx8x5_device.o(.text.bcd_to_dec)
    [Anonymous Symbol]                       0x0000f3d4   Section        0  amx8x5_device.o(.text.bcd_to_dec)
    buffer_configure                         0x0000f3f5   Thumb Code   254  am_hal_uart.o(.text.buffer_configure)
    [Anonymous Symbol]                       0x0000f3f4   Section        0  am_hal_uart.o(.text.buffer_configure)
    compute_freq                             0x0000f4f5   Thumb Code    84  iom_dma.o(.text.compute_freq)
    [Anonymous Symbol]                       0x0000f4f4   Section        0  iom_dma.o(.text.compute_freq)
    config_baudrate                          0x0000f549   Thumb Code   340  am_hal_uart.o(.text.config_baudrate)
    [Anonymous Symbol]                       0x0000f548   Section        0  am_hal_uart.o(.text.config_baudrate)
    [Anonymous Symbol]                       0x0000f69c   Section        0  uart_debug.o(.text.debug_printf_enable)
    dec_to_bcd                               0x0000f6d1   Thumb Code    46  amx8x5_device.o(.text.dec_to_bcd)
    [Anonymous Symbol]                       0x0000f6d0   Section        0  amx8x5_device.o(.text.dec_to_bcd)
    decstr_to_int                            0x0000f701   Thumb Code   166  am_util_stdio.o(.text.decstr_to_int)
    [Anonymous Symbol]                       0x0000f700   Section        0  am_util_stdio.o(.text.decstr_to_int)
    divu64_10                                0x0000f7a9   Thumb Code   280  am_util_stdio.o(.text.divu64_10)
    [Anonymous Symbol]                       0x0000f7a8   Section        0  am_util_stdio.o(.text.divu64_10)
    ftoa                                     0x0000f8c1   Thumb Code   560  am_util_stdio.o(.text.ftoa)
    [Anonymous Symbol]                       0x0000f8c0   Section        0  am_util_stdio.o(.text.ftoa)
    [Anonymous Symbol]                       0x0000faf0   Section        0  iom_dma.o(.text.iom_dma_configure)
    [Anonymous Symbol]                       0x0000fb30   Section        0  iom_dma.o(.text.iom_dma_enable)
    [Anonymous Symbol]                       0x0000fb98   Section        0  iom_dma.o(.text.iom_dma_i2c_configure)
    [Anonymous Symbol]                       0x0000fc9c   Section        0  iom_dma.o(.text.iom_dma_int_enable)
    [Anonymous Symbol]                       0x0000fcec   Section        0  iom_dma.o(.text.iom_dma_spi_configure)
    [Anonymous Symbol]                       0x0000fda0   Section        0  iom_dma.o(.text.iom_dma_start)
    iom_get_interface_clock_cfg              0x000100bd   Thumb Code   602  iom_dma.o(.text.iom_get_interface_clock_cfg)
    [Anonymous Symbol]                       0x000100bc   Section        0  iom_dma.o(.text.iom_get_interface_clock_cfg)
    [Anonymous Symbol]                       0x00010318   Section        0  iom_spi.o(.text.iom_gpio_config)
    [Anonymous Symbol]                       0x000103cc   Section        0  iom_spi.o(.text.iom_spi_init)
    [Anonymous Symbol]                       0x00010458   Section        0  iom_spi.o(.text.iom_spi_read)
    [Anonymous Symbol]                       0x00010550   Section        0  iom_spi.o(.text.iom_spi_write)
    [Anonymous Symbol]                       0x00010648   Section        0  uart_debug.o(.text.itm_printf_enable)
    [Anonymous Symbol]                       0x0001068c   Section        0  main.o(.text.low_power_init)
    [Anonymous Symbol]                       0x00010698   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00010734   Section        0  main.o(.text.mthToIndex)
    ndigits_in_hex                           0x00010781   Thumb Code    62  am_util_stdio.o(.text.ndigits_in_hex)
    [Anonymous Symbol]                       0x00010780   Section        0  am_util_stdio.o(.text.ndigits_in_hex)
    ndigits_in_i64                           0x000107c1   Thumb Code    48  am_util_stdio.o(.text.ndigits_in_i64)
    [Anonymous Symbol]                       0x000107c0   Section        0  am_util_stdio.o(.text.ndigits_in_i64)
    ndigits_in_u64                           0x000107f1   Thumb Code    60  am_util_stdio.o(.text.ndigits_in_u64)
    [Anonymous Symbol]                       0x000107f0   Section        0  am_util_stdio.o(.text.ndigits_in_u64)
    onebit                                   0x0001082d   Thumb Code    40  iom_dma.o(.text.onebit)
    [Anonymous Symbol]                       0x0001082c   Section        0  iom_dma.o(.text.onebit)
    padbuffer                                0x00010855   Thumb Code    80  am_util_stdio.o(.text.padbuffer)
    [Anonymous Symbol]                       0x00010854   Section        0  am_util_stdio.o(.text.padbuffer)
    pincfg_equ                               0x000108a5   Thumb Code    34  am_hal_gpio.o(.text.pincfg_equ)
    [Anonymous Symbol]                       0x000108a4   Section        0  am_hal_gpio.o(.text.pincfg_equ)
    pwrctrl_periph_disable_msk_check         0x000108c9   Thumb Code   222  am_hal_pwrctrl.o(.text.pwrctrl_periph_disable_msk_check)
    [Anonymous Symbol]                       0x000108c8   Section        0  am_hal_pwrctrl.o(.text.pwrctrl_periph_disable_msk_check)
    read_nonblocking                         0x000109a9   Thumb Code   212  am_hal_uart.o(.text.read_nonblocking)
    [Anonymous Symbol]                       0x000109a8   Section        0  am_hal_uart.o(.text.read_nonblocking)
    read_timeout                             0x00010a7d   Thumb Code   206  am_hal_uart.o(.text.read_timeout)
    [Anonymous Symbol]                       0x00010a7c   Section        0  am_hal_uart.o(.text.read_timeout)
    rx_queue_update                          0x00010b4d   Thumb Code    76  am_hal_uart.o(.text.rx_queue_update)
    [Anonymous Symbol]                       0x00010b4c   Section        0  am_hal_uart.o(.text.rx_queue_update)
    set_LPMMODE                              0x00010b99   Thumb Code   102  am_hal_cachectrl.o(.text.set_LPMMODE)
    [Anonymous Symbol]                       0x00010b98   Section        0  am_hal_cachectrl.o(.text.set_LPMMODE)
    set_RDWAIT                               0x00010c01   Thumb Code   102  am_hal_cachectrl.o(.text.set_RDWAIT)
    [Anonymous Symbol]                       0x00010c00   Section        0  am_hal_cachectrl.o(.text.set_RDWAIT)
    set_SEDELAY                              0x00010c69   Thumb Code   102  am_hal_cachectrl.o(.text.set_SEDELAY)
    [Anonymous Symbol]                       0x00010c68   Section        0  am_hal_cachectrl.o(.text.set_SEDELAY)
    simobuck_updates                         0x00010cd1   Thumb Code   160  am_hal_pwrctrl.o(.text.simobuck_updates)
    [Anonymous Symbol]                       0x00010cd0   Section        0  am_hal_pwrctrl.o(.text.simobuck_updates)
    simple_strlen                            0x00010d71   Thumb Code    54  am_util_stdio.o(.text.simple_strlen)
    [Anonymous Symbol]                       0x00010d70   Section        0  am_util_stdio.o(.text.simple_strlen)
    [Anonymous Symbol]                       0x00010da8   Section        0  main.o(.text.sleep_loop)
    [Anonymous Symbol]                       0x00010fb8   Section        0  iom_spi.o(.text.spi_callback)
    [Anonymous Symbol]                       0x000110b0   Section        0  main.o(.text.toVal)
    tx_queue_update                          0x000110fd   Thumb Code   110  am_hal_uart.o(.text.tx_queue_update)
    [Anonymous Symbol]                       0x000110fc   Section        0  am_hal_uart.o(.text.tx_queue_update)
    uart_fifo_read                           0x0001116d   Thumb Code   134  am_hal_uart.o(.text.uart_fifo_read)
    [Anonymous Symbol]                       0x0001116c   Section        0  am_hal_uart.o(.text.uart_fifo_read)
    uart_fifo_write                          0x000111f5   Thumb Code   108  am_hal_uart.o(.text.uart_fifo_write)
    [Anonymous Symbol]                       0x000111f4   Section        0  am_hal_uart.o(.text.uart_fifo_write)
    [Anonymous Symbol]                       0x00011260   Section        0  uart_debug.o(.text.uart_printf_enable)
    [Anonymous Symbol]                       0x000112d0   Section        0  uart_debug.o(.text.uart_string_print)
    uint64_to_hexstr                         0x0001131d   Thumb Code   192  am_util_stdio.o(.text.uint64_to_hexstr)
    [Anonymous Symbol]                       0x0001131c   Section        0  am_util_stdio.o(.text.uint64_to_hexstr)
    uint64_to_str                            0x000113dd   Thumb Code   136  am_util_stdio.o(.text.uint64_to_str)
    [Anonymous Symbol]                       0x000113dc   Section        0  am_util_stdio.o(.text.uint64_to_str)
    write_nonblocking                        0x00011465   Thumb Code   210  am_hal_uart.o(.text.write_nonblocking)
    [Anonymous Symbol]                       0x00011464   Section        0  am_hal_uart.o(.text.write_nonblocking)
    write_timeout                            0x00011539   Thumb Code   206  am_hal_uart.o(.text.write_timeout)
    [Anonymous Symbol]                       0x00011538   Section        0  am_hal_uart.o(.text.write_timeout)
    $v0                                      0x00011608   Number         0  d2f.o(x$fpl$d2f)
    x$fpl$d2f                                0x00011608   Section       98  d2f.o(x$fpl$d2f)
    $v0                                      0x0001166a   Number         0  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dnaninf                            0x0001166a   Section      156  dnaninf.o(x$fpl$dnaninf)
    $v0                                      0x00011706   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00011706   Section       26  fpinit.o(x$fpl$fpinit)
    $v0                                      0x00011720   Number         0  fretinf.o(x$fpl$fretinf)
    x$fpl$fretinf                            0x00011720   Section       10  fretinf.o(x$fpl$fretinf)
    x$fpl$usenofp                            0x0001172a   Section        0  usenofp.o(x$fpl$usenofp)
    .L__const.am_hal_flash_store_ui32.SRAM_write_ui32 0x0001172c   Data          12  am_hal_flash.o(.rodata..L__const.am_hal_flash_store_ui32.SRAM_write_ui32)
    g_iDaysPerMonth                          0x0001198c   Data          48  am_util_time.o(.rodata.g_iDaysPerMonth)
    [Anonymous Symbol]                       0x0001198c   Section        0  am_util_time.o(.rodata.g_iDaysPerMonth)
    g_iMonthOffsets                          0x000119bc   Data          48  am_util_time.o(.rodata.g_iMonthOffsets)
    [Anonymous Symbol]                       0x000119bc   Section        0  am_util_time.o(.rodata.g_iMonthOffsets)
    g_sBspUartConfig                         0x000119ec   Data          40  uart_debug.o(.rodata.g_sBspUartConfig)
    [Anonymous Symbol]                       0x000119ec   Section        0  uart_debug.o(.rodata.g_sBspUartConfig)
    g_ui8Bit76Capabilities                   0x00011a14   Data          50  am_hal_gpio.o(.rodata.g_ui8Bit76Capabilities)
    [Anonymous Symbol]                       0x00011a14   Section        0  am_hal_gpio.o(.rodata.g_ui8Bit76Capabilities)
    g_ui8Inpen                               0x00011a46   Data          50  am_hal_gpio.o(.rodata.g_ui8Inpen)
    [Anonymous Symbol]                       0x00011a46   Section        0  am_hal_gpio.o(.rodata.g_ui8Inpen)
    g_ui8NCEtable                            0x00011a78   Data         200  am_hal_gpio.o(.rodata.g_ui8NCEtable)
    [Anonymous Symbol]                       0x00011a78   Section        0  am_hal_gpio.o(.rodata.g_ui8NCEtable)
    g_ui8nCEpins                             0x00011b40   Data          50  am_hal_gpio.o(.rodata.g_ui8nCEpins)
    [Anonymous Symbol]                       0x00011b40   Section        0  am_hal_gpio.o(.rodata.g_ui8nCEpins)
    .L.str.30                                0x00011b72   Data          35  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00011b72   Section        0  main.o(.rodata.str1.1)
    .L.str.29                                0x00011b93   Data           2  main.o(.rodata.str1.1)
    .L.str.27                                0x00011b95   Data           5  main.o(.rodata.str1.1)
    .L.str.22                                0x00011b9a   Data           6  main.o(.rodata.str1.1)
    .L.str.23                                0x00011ba0   Data           8  main.o(.rodata.str1.1)
    .L.str.21                                0x00011ba8   Data          25  main.o(.rodata.str1.1)
    .L.str.25                                0x00011bc1   Data           6  main.o(.rodata.str1.1)
    .L.str.26                                0x00011bc5   Data           2  main.o(.rodata.str1.1)
    .L.str.24                                0x00011bc7   Data           6  main.o(.rodata.str1.1)
    .L.str.20                                0x00011bcd   Data          12  main.o(.rodata.str1.1)
    .L.str.19                                0x00011bd9   Data           9  main.o(.rodata.str1.1)
    .L.str.28                                0x00011be2   Data           7  main.o(.rodata.str1.1)
    .data                                    0x10000000   Section        4  am_hal_global.o(.data)
    g_sIOMSpiConfig                          0x10000050   Data           8  iom_spi.o(.data.g_sIOMSpiConfig)
    [Anonymous Symbol]                       0x10000050   Section        0  iom_spi.o(.data.g_sIOMSpiConfig)
    g_ui32PrintInterface                     0x10000058   Data           4  uart_debug.o(.data.g_ui32PrintInterface)
    [Anonymous Symbol]                       0x10000058   Section        0  uart_debug.o(.data.g_ui32PrintInterface)
    .bss                                     0x10000060   Section       96  libspace.o(.bss)
    g_am_hal_uart_states                     0x100034b8   Data         208  am_hal_uart.o(.bss.g_am_hal_uart_states)
    [Anonymous Symbol]                       0x100034b8   Section        0  am_hal_uart.o(.bss.g_am_hal_uart_states)
    g_bTxtXlate                              0x10003588   Data           1  am_util_stdio.o(.bss.g_bTxtXlate)
    [Anonymous Symbol]                       0x10003588   Section        0  am_util_stdio.o(.bss.g_bTxtXlate)
    g_prfbuf                                 0x10003590   Data        1024  am_util_stdio.o(.bss.g_prfbuf)
    [Anonymous Symbol]                       0x10003590   Section        0  am_util_stdio.o(.bss.g_prfbuf)
    g_sCOMUART                               0x1000399c   Data           4  uart_debug.o(.bss.g_sCOMUART)
    [Anonymous Symbol]                       0x1000399c   Section        0  uart_debug.o(.bss.g_sCOMUART)
    HeapMem                                  0x100039c8   Data           0  startup_keil.o(HEAP)
    StackMem                                 0x100039c8   Data           0  startup_keil.o(STACK)
    HEAP                                     0x100039c8   Section        0  startup_keil.o(HEAP)
    STACK                                    0x100039c8   Section     4096  startup_keil.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors                                0x0000c000   Data           0  startup_keil.o(RESET)
    __Patchable                              0x0000c0c0   Data           0  startup_keil.o(RESET)
    Reset_Handler                            0x0000c101   Thumb Code    28  startup_keil.o(RESET)
    HardFault_Handler                        0x0000c11d   Thumb Code     2  startup_keil.o(RESET)
    NMI_Handler                              0x0000c11f   Thumb Code     2  startup_keil.o(RESET)
    MemManage_Handler                        0x0000c121   Thumb Code     2  startup_keil.o(RESET)
    BusFault_Handler                         0x0000c123   Thumb Code     2  startup_keil.o(RESET)
    UsageFault_Handler                       0x0000c125   Thumb Code     2  startup_keil.o(RESET)
    SVC_Handler                              0x0000c127   Thumb Code     2  startup_keil.o(RESET)
    DebugMon_Handler                         0x0000c129   Thumb Code     2  startup_keil.o(RESET)
    PendSV_Handler                           0x0000c12b   Thumb Code     2  startup_keil.o(RESET)
    SysTick_Handler                          0x0000c12d   Thumb Code     2  startup_keil.o(RESET)
    am_adc_isr                               0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_ble_isr                               0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_brownout_isr                          0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_clkgen_isr                            0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_ctimer_isr                            0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_gpio_isr                              0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_ioslave_acc_isr                       0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_ioslave_ios_isr                       0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_mspi0_isr                             0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_pdm0_isr                              0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_rtc_isr                               0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_scard_isr                             0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_software0_isr                         0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_cmpr0_isr                      0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_cmpr1_isr                      0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_cmpr2_isr                      0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_cmpr3_isr                      0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_cmpr4_isr                      0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_cmpr5_isr                      0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_cmpr6_isr                      0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_cmpr7_isr                      0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_stimer_isr                            0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_uart0_isr                             0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_uart1_isr                             0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_uart_isr                              0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_vcomp_isr                             0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    am_watchdog_isr                          0x0000c12f   Thumb Code     0  startup_keil.o(RESET)
    __main                                   0x0000c135   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x0000c13d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0000c13d   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x0000c13d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0000c14b   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x0000c171   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x0000c18d   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0000c1a9   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0000c1ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0000c1af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x0000c1b1   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000c1b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000c1b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000c1b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000c1b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000c1b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000c1b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000c1b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000c1b5   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000c1b5   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000c1b5   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0000c1bb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0000c1bb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x0000c1bf   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000c1bf   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000c1c7   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0000c1c9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0000c1c9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0000c1cd   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __user_initial_stackheap                 0x0000c1d5   Thumb Code    10  startup_keil.o(.text)
    __use_two_region_memory                  0x0000c1ed   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000c1ef   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000c1f1   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x0000c1f3   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0000c23d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x0000c251   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0000c251   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x0000c251   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0000c259   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0000c265   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0000c265   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000c267   Thumb Code     0  indicate_semi.o(.text)
    am_hal_cachectrl_config                  0x0000c299   Thumb Code    84  am_hal_cachectrl.o(.text.am_hal_cachectrl_config)
    am_hal_cachectrl_control                 0x0000c2ed   Thumb Code   672  am_hal_cachectrl.o(.text.am_hal_cachectrl_control)
    am_hal_cachectrl_enable                  0x0000c58d   Thumb Code    20  am_hal_cachectrl.o(.text.am_hal_cachectrl_enable)
    am_hal_clkgen_control                    0x0000c5a1   Thumb Code   404  am_hal_clkgen.o(.text.am_hal_clkgen_control)
    am_hal_clkgen_status_get                 0x0000c735   Thumb Code    98  am_hal_clkgen.o(.text.am_hal_clkgen_status_get)
    am_hal_cmdq_disable                      0x0000c799   Thumb Code   108  am_hal_cmdq.o(.text.am_hal_cmdq_disable)
    am_hal_cmdq_enable                       0x0000c805   Thumb Code   108  am_hal_cmdq.o(.text.am_hal_cmdq_enable)
    am_hal_flash_delay                       0x0000c871   Thumb Code    80  am_hal_flash.o(.text.am_hal_flash_delay)
    am_hal_flash_delay_status_check          0x0000c8c1   Thumb Code   116  am_hal_flash.o(.text.am_hal_flash_delay_status_check)
    am_hal_flash_load_ui32                   0x0000c935   Thumb Code    24  am_hal_flash.o(.text.am_hal_flash_load_ui32)
    am_hal_flash_store_ui32                  0x0000c94d   Thumb Code    50  am_hal_flash.o(.text.am_hal_flash_store_ui32)
    am_hal_gpio_pinconfig                    0x0000c981   Thumb Code   964  am_hal_gpio.o(.text.am_hal_gpio_pinconfig)
    am_hal_gpio_state_read                   0x0000cd45   Thumb Code   196  am_hal_gpio.o(.text.am_hal_gpio_state_read)
    am_hal_gpio_state_write                  0x0000ce09   Thumb Code   212  am_hal_gpio.o(.text.am_hal_gpio_state_write)
    am_hal_interrupt_master_disable          0x0000cedd   Thumb Code     8  am_hal_interrupt.o(.text.am_hal_interrupt_master_disable)
    am_hal_interrupt_master_enable           0x0000cee5   Thumb Code     8  am_hal_interrupt.o(.text.am_hal_interrupt_master_enable)
    am_hal_interrupt_master_set              0x0000ceed   Thumb Code     6  am_hal_interrupt.o(.text.am_hal_interrupt_master_set)
    am_hal_iom_CQDisable                     0x0000cef5   Thumb Code    24  am_hal_iom.o(.text.am_hal_iom_CQDisable)
    am_hal_iom_CQEnable                      0x0000cf0d   Thumb Code    68  am_hal_iom.o(.text.am_hal_iom_CQEnable)
    am_hal_iom_initialize                    0x0000cf51   Thumb Code   158  am_hal_iom.o(.text.am_hal_iom_initialize)
    am_hal_iom_power_ctrl                    0x0000cff1   Thumb Code   874  am_hal_iom.o(.text.am_hal_iom_power_ctrl)
    am_hal_itm_enable                        0x0000d35d   Thumb Code   102  am_hal_itm.o(.text.am_hal_itm_enable)
    am_hal_itm_print                         0x0000d3c5   Thumb Code    64  am_hal_itm.o(.text.am_hal_itm_print)
    am_hal_itm_stimulus_reg_byte_write       0x0000d405   Thumb Code    44  am_hal_itm.o(.text.am_hal_itm_stimulus_reg_byte_write)
    am_hal_pwrctrl_blebuck_trim              0x0000d431   Thumb Code    82  am_hal_pwrctrl.o(.text.am_hal_pwrctrl_blebuck_trim)
    am_hal_pwrctrl_low_power_init            0x0000d485   Thumb Code   282  am_hal_pwrctrl.o(.text.am_hal_pwrctrl_low_power_init)
    am_hal_pwrctrl_periph_disable            0x0000d5a1   Thumb Code   186  am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_disable)
    am_hal_pwrctrl_periph_enable             0x0000d65d   Thumb Code   226  am_hal_pwrctrl.o(.text.am_hal_pwrctrl_periph_enable)
    am_hal_queue_init                        0x0000d741   Thumb Code    46  am_hal_queue.o(.text.am_hal_queue_init)
    am_hal_queue_item_add                    0x0000d771   Thumb Code   162  am_hal_queue.o(.text.am_hal_queue_item_add)
    am_hal_queue_item_get                    0x0000d815   Thumb Code   158  am_hal_queue.o(.text.am_hal_queue_item_get)
    am_hal_rtc_osc_disable                   0x0000d8b5   Thumb Code    18  am_hal_rtc.o(.text.am_hal_rtc_osc_disable)
    am_hal_tpiu_enable                       0x0000d8c9   Thumb Code   252  am_hal_tpiu.o(.text.am_hal_tpiu_enable)
    am_hal_uart_configure                    0x0000d9c5   Thumb Code   464  am_hal_uart.o(.text.am_hal_uart_configure)
    am_hal_uart_initialize                   0x0000db95   Thumb Code   156  am_hal_uart.o(.text.am_hal_uart_initialize)
    am_hal_uart_interrupt_clear              0x0000dc31   Thumb Code    90  am_hal_uart.o(.text.am_hal_uart_interrupt_clear)
    am_hal_uart_interrupt_disable            0x0000dc8d   Thumb Code    94  am_hal_uart.o(.text.am_hal_uart_interrupt_disable)
    am_hal_uart_interrupt_enable             0x0000dced   Thumb Code    94  am_hal_uart.o(.text.am_hal_uart_interrupt_enable)
    am_hal_uart_power_control                0x0000dd4d   Thumb Code   506  am_hal_uart.o(.text.am_hal_uart_power_control)
    am_hal_uart_transfer                     0x0000df49   Thumb Code    96  am_hal_uart.o(.text.am_hal_uart_transfer)
    am_iomaster0_isr                         0x0000dfa9   Thumb Code    92  iom_dma.o(.text.am_iomaster0_isr)
    am_iomaster1_isr                         0x0000e005   Thumb Code   110  iom_dma.o(.text.am_iomaster1_isr)
    am_iomaster2_isr                         0x0000e075   Thumb Code    94  iom_dma.o(.text.am_iomaster2_isr)
    am_iomaster3_isr                         0x0000e0d5   Thumb Code    94  iom_dma.o(.text.am_iomaster3_isr)
    am_iomaster4_isr                         0x0000e135   Thumb Code    94  iom_dma.o(.text.am_iomaster4_isr)
    am_iomaster5_isr                         0x0000e195   Thumb Code    94  iom_dma.o(.text.am_iomaster5_isr)
    am_util_delay_ms                         0x0000e1f5   Thumb Code    48  am_util_delay.o(.text.am_util_delay_ms)
    am_util_delay_us                         0x0000e225   Thumb Code    48  am_util_delay.o(.text.am_util_delay_us)
    am_util_stdio_printf                     0x0000e255   Thumb Code    92  am_util_stdio.o(.text.am_util_stdio_printf)
    am_util_stdio_printf_init                0x0000e2b1   Thumb Code    20  am_util_stdio.o(.text.am_util_stdio_printf_init)
    am_util_stdio_vsprintf                   0x0000e2c5   Thumb Code  1620  am_util_stdio.o(.text.am_util_stdio_vsprintf)
    am_util_string_strnicmp                  0x0000e919   Thumb Code   182  am_util_string.o(.text.am_util_string_strnicmp)
    am_util_time_computeDayofWeek            0x0000e9d1   Thumb Code   462  am_util_time.o(.text.am_util_time_computeDayofWeek)
    amx8x5_ext1_gen                          0x0000eba1   Thumb Code    40  main.o(.text.amx8x5_ext1_gen)
    amx8x5_ext_reset                         0x0000ebc9   Thumb Code    90  main.o(.text.amx8x5_ext_reset)
    amx8x5_init                              0x0000ec25   Thumb Code   152  main.o(.text.amx8x5_init)
    amx8x5_int_clear                         0x0000ecbd   Thumb Code    62  main.o(.text.amx8x5_int_clear)
    amx8x5_reg_block_read                    0x0000ecfd   Thumb Code   100  amx8x5_device.o(.text.amx8x5_reg_block_read)
    amx8x5_reg_block_write                   0x0000ed61   Thumb Code   100  amx8x5_device.o(.text.amx8x5_reg_block_write)
    amx8x5_reg_clear                         0x0000edc5   Thumb Code    82  amx8x5_device.o(.text.amx8x5_reg_clear)
    amx8x5_reg_read                          0x0000ee19   Thumb Code   106  amx8x5_device.o(.text.amx8x5_reg_read)
    amx8x5_reg_set                           0x0000ee85   Thumb Code    82  amx8x5_device.o(.text.amx8x5_reg_set)
    amx8x5_reg_write                         0x0000eed9   Thumb Code    68  amx8x5_device.o(.text.amx8x5_reg_write)
    amx8x5_reset                             0x0000ef1d   Thumb Code    58  amx8x5_device.o(.text.amx8x5_reset)
    amx8x5_sleep_set                         0x0000ef59   Thumb Code   330  amx8x5_device.o(.text.amx8x5_sleep_set)
    amx8x5_time_get                          0x0000f0a5   Thumb Code   254  amx8x5_device.o(.text.amx8x5_time_get)
    amx8x5_time_set                          0x0000f1a5   Thumb Code   472  amx8x5_device.o(.text.amx8x5_time_set)
    amx8x5_wait_por_ready                    0x0000f37d   Thumb Code    86  main.o(.text.amx8x5_wait_por_ready)
    debug_printf_enable                      0x0000f69d   Thumb Code    50  uart_debug.o(.text.debug_printf_enable)
    iom_dma_configure                        0x0000faf1   Thumb Code    64  iom_dma.o(.text.iom_dma_configure)
    iom_dma_enable                           0x0000fb31   Thumb Code   104  iom_dma.o(.text.iom_dma_enable)
    iom_dma_i2c_configure                    0x0000fb99   Thumb Code   260  iom_dma.o(.text.iom_dma_i2c_configure)
    iom_dma_int_enable                       0x0000fc9d   Thumb Code    78  iom_dma.o(.text.iom_dma_int_enable)
    iom_dma_spi_configure                    0x0000fced   Thumb Code   178  iom_dma.o(.text.iom_dma_spi_configure)
    iom_dma_start                            0x0000fda1   Thumb Code   796  iom_dma.o(.text.iom_dma_start)
    iom_gpio_config                          0x00010319   Thumb Code   180  iom_spi.o(.text.iom_gpio_config)
    iom_spi_init                             0x000103cd   Thumb Code   138  iom_spi.o(.text.iom_spi_init)
    iom_spi_read                             0x00010459   Thumb Code   248  iom_spi.o(.text.iom_spi_read)
    iom_spi_write                            0x00010551   Thumb Code   246  iom_spi.o(.text.iom_spi_write)
    itm_printf_enable                        0x00010649   Thumb Code    68  uart_debug.o(.text.itm_printf_enable)
    low_power_init                           0x0001068d   Thumb Code    12  main.o(.text.low_power_init)
    main                                     0x00010699   Thumb Code   156  main.o(.text.main)
    mthToIndex                               0x00010735   Thumb Code    74  main.o(.text.mthToIndex)
    sleep_loop                               0x00010da9   Thumb Code   528  main.o(.text.sleep_loop)
    spi_callback                             0x00010fb9   Thumb Code   246  iom_spi.o(.text.spi_callback)
    toVal                                    0x000110b1   Thumb Code    74  main.o(.text.toVal)
    uart_printf_enable                       0x00011261   Thumb Code   110  uart_debug.o(.text.uart_printf_enable)
    uart_string_print                        0x000112d1   Thumb Code    74  uart_debug.o(.text.uart_string_print)
    __aeabi_d2f                              0x00011609   Thumb Code     0  d2f.o(x$fpl$d2f)
    _d2f                                     0x00011609   Thumb Code    98  d2f.o(x$fpl$d2f)
    __fpl_dnaninf                            0x0001166b   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    _fp_init                                 0x00011707   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0001171f   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0001171f   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fpl_fretinf                            0x00011721   Thumb Code    10  fretinf.o(x$fpl$fretinf)
    __I$use$fp                               0x0001172a   Number         0  usenofp.o(x$fpl$usenofp)
    am_cattr                                 0x00011738   Data         256  am_util_string.o(.rodata.am_cattr)
    am_hal_cachectrl_defaults                0x00011838   Data           3  am_hal_cachectrl.o(.rodata.am_hal_cachectrl_defaults)
    am_hal_pwrctrl_peripheral_control        0x0001183c   Data         180  am_hal_pwrctrl.o(.rodata.am_hal_pwrctrl_peripheral_control)
    g_AM_HAL_GPIO_DISABLE                    0x000118f0   Data           4  am_hal_gpio.o(.rodata.g_AM_HAL_GPIO_DISABLE)
    g_GPIO_COM_UART_RX                       0x000118f4   Data           4  uart_debug.o(.rodata.g_GPIO_COM_UART_RX)
    g_GPIO_COM_UART_TX                       0x000118f8   Data           4  uart_debug.o(.rodata.g_GPIO_COM_UART_TX)
    g_GPIO_ITM_SWO                           0x000118fc   Data           4  uart_debug.o(.rodata.g_GPIO_ITM_SWO)
    g_GPIO_RTC_CLKOUT                        0x00011900   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_CLKOUT)
    g_GPIO_RTC_CS                            0x00011904   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_CS)
    g_GPIO_RTC_EXTI                          0x00011908   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_EXTI)
    g_GPIO_RTC_EXTR                          0x0001190c   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_EXTR)
    g_GPIO_RTC_FOUT                          0x00011910   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_FOUT)
    g_GPIO_RTC_MISO                          0x00011914   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_MISO)
    g_GPIO_RTC_MOSI                          0x00011918   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_MOSI)
    g_GPIO_RTC_PSW                           0x0001191c   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_PSW)
    g_GPIO_RTC_RST                           0x00011920   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_RST)
    g_GPIO_RTC_SCK                           0x00011924   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_SCK)
    g_GPIO_RTC_WDI                           0x00011928   Data           4  iom_spi.o(.rodata.g_GPIO_RTC_WDI)
    g_am_hal_flash                           0x0001192c   Data          96  am_hal_flash.o(.rodata.g_am_hal_flash)
    Region$$Table$$Base                      0x00011c78   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00011c98   Number         0  anon$$obj.o(Region$$Table)
    g_ui32HALflags                           0x10000000   Data           4  am_hal_global.o(.data)
    g_pcMonth                                0x10000004   Data          48  main.o(.data.g_pcMonth)
    g_pcWeekday                              0x10000034   Data          28  main.o(.data.g_pcWeekday)
    spi_rd_callback_cntx                     0x1000005c   Data           1  iom_spi.o(.data.spi_rd_callback_cntx)
    spi_wr_callback_cntx                     0x1000005d   Data           1  iom_spi.o(.data.spi_wr_callback_cntx)
    __libspace_start                         0x10000060   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x100000c0   Data           0  libspace.o(.bss)
    callback_cntx                            0x100000c0   Data          24  iom_dma.o(.bss.callback_cntx)
    gAmHalResetStatus                        0x100000d8   Data           4  am_hal_reset.o(.bss.gAmHalResetStatus)
    g_IOMHandle                              0x100000dc   Data           4  iom_spi.o(.bss.g_IOMHandle)
    g_IOMhandles                             0x100000e0   Data       13272  am_hal_iom.o(.bss.g_IOMhandles)
    g_pfnCharPrint                           0x1000358c   Data           4  am_util_stdio.o(.bss.g_pfnCharPrint)
    g_psTimeRegs                             0x10003990   Data          10  main.o(.bss.g_psTimeRegs)
    pop_tail                                 0x100039a0   Data           1  iom_dma.o(.bss.pop_tail)
    spi_cmd_completed                        0x100039a1   Data           1  iom_spi.o(.bss.spi_cmd_completed)
    spi_cmd_error                            0x100039a2   Data           1  iom_spi.o(.bss.spi_cmd_error)
    spi_dma_completed                        0x100039a3   Data           1  iom_spi.o(.bss.spi_dma_completed)
    transaction_rx_buff                      0x100039a4   Data           4  iom_dma.o(.bss.transaction_rx_buff)
    transaction_rx_size                      0x100039a8   Data           4  iom_dma.o(.bss.transaction_rx_size)
    user_callbacks                           0x100039ac   Data          24  iom_dma.o(.bss.user_callbacks)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000c135

  Load Region LR_IROM1 (Base: 0x0000c000, Size: 0x00005cf8, Max: 0x000f4000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x0000c000, Load base: 0x0000c000, Size: 0x00005c98, Max: 0x000f4000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x0000c000   0x0000c000   0x00000134   Code   RO          202    RESET               startup_keil.o
    0x0000c134   0x0000c134   0x00000008   Code   RO         1556  * !!!main             c_w.l(__main.o)
    0x0000c13c   0x0000c13c   0x00000034   Code   RO         1730    !!!scatter          c_w.l(__scatter.o)
    0x0000c170   0x0000c170   0x0000001a   Code   RO         1732    !!handler_copy      c_w.l(__scatter_copy.o)
    0x0000c18a   0x0000c18a   0x00000002   PAD
    0x0000c18c   0x0000c18c   0x0000001c   Code   RO         1734    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0000c1a8   0x0000c1a8   0x00000002   Code   RO         1592    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0000c1aa   0x0000c1aa   0x00000004   Code   RO         1598    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1601    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1603    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1606    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1608    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1610    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1613    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1615    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1617    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1619    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1621    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1623    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1625    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1627    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1629    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1631    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1633    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1637    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1639    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1641    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000000   Code   RO         1643    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0000c1ae   0x0000c1ae   0x00000002   Code   RO         1644    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x0000c1b0   0x0000c1b0   0x00000002   Code   RO         1666    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000c1b2   0x0000c1b2   0x00000000   Code   RO         1681    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000c1b2   0x0000c1b2   0x00000000   Code   RO         1683    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000c1b2   0x0000c1b2   0x00000000   Code   RO         1686    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000c1b2   0x0000c1b2   0x00000000   Code   RO         1689    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000c1b2   0x0000c1b2   0x00000000   Code   RO         1691    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000c1b2   0x0000c1b2   0x00000000   Code   RO         1694    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000c1b2   0x0000c1b2   0x00000002   Code   RO         1695    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000c1b4   0x0000c1b4   0x00000000   Code   RO         1560    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000c1b4   0x0000c1b4   0x00000000   Code   RO         1569    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000c1b4   0x0000c1b4   0x00000006   Code   RO         1581    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0000c1ba   0x0000c1ba   0x00000000   Code   RO         1571    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0000c1ba   0x0000c1ba   0x00000004   Code   RO         1572    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0000c1be   0x0000c1be   0x00000000   Code   RO         1574    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0000c1be   0x0000c1be   0x00000008   Code   RO         1575    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000c1c6   0x0000c1c6   0x00000002   Code   RO         1596    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0000c1c8   0x0000c1c8   0x00000000   Code   RO         1646    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0000c1c8   0x0000c1c8   0x00000004   Code   RO         1647    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0000c1cc   0x0000c1cc   0x00000006   Code   RO         1648    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000c1d2   0x0000c1d2   0x00000002   PAD
    0x0000c1d4   0x0000c1d4   0x00000018   Code   RO          203    .text               startup_keil.o
    0x0000c1ec   0x0000c1ec   0x00000006   Code   RO         1554    .text               c_w.l(heapauxi.o)
    0x0000c1f2   0x0000c1f2   0x0000004a   Code   RO         1583    .text               c_w.l(sys_stackheap_outer.o)
    0x0000c23c   0x0000c23c   0x00000012   Code   RO         1585    .text               c_w.l(exit.o)
    0x0000c24e   0x0000c24e   0x00000002   PAD
    0x0000c250   0x0000c250   0x00000008   Code   RO         1593    .text               c_w.l(libspace.o)
    0x0000c258   0x0000c258   0x0000000c   Code   RO         1656    .text               c_w.l(sys_exit.o)
    0x0000c264   0x0000c264   0x00000002   Code   RO         1671    .text               c_w.l(use_no_semi.o)
    0x0000c266   0x0000c266   0x00000000   Code   RO         1673    .text               c_w.l(indicate_semi.o)
    0x0000c266   0x0000c266   0x00000002   PAD
    0x0000c268   0x0000c268   0x00000030   Code   RO           92    .text.__NVIC_EnableIRQ  iom_dma.o
    0x0000c298   0x0000c298   0x00000054   Code   RO          312    .text.am_hal_cachectrl_config  am_hal_cachectrl.o
    0x0000c2ec   0x0000c2ec   0x000002a0   Code   RO          318    .text.am_hal_cachectrl_control  am_hal_cachectrl.o
    0x0000c58c   0x0000c58c   0x00000014   Code   RO          314    .text.am_hal_cachectrl_enable  am_hal_cachectrl.o
    0x0000c5a0   0x0000c5a0   0x00000194   Code   RO          336    .text.am_hal_clkgen_control  am_hal_clkgen.o
    0x0000c734   0x0000c734   0x00000062   Code   RO          338    .text.am_hal_clkgen_status_get  am_hal_clkgen.o
    0x0000c796   0x0000c796   0x00000002   PAD
    0x0000c798   0x0000c798   0x0000006c   Code   RO         1432    .text.am_hal_cmdq_disable  am_hal_cmdq.o
    0x0000c804   0x0000c804   0x0000006c   Code   RO         1430    .text.am_hal_cmdq_enable  am_hal_cmdq.o
    0x0000c870   0x0000c870   0x00000050   Code   RO         1176    .text.am_hal_flash_delay  am_hal_flash.o
    0x0000c8c0   0x0000c8c0   0x00000074   Code   RO         1180    .text.am_hal_flash_delay_status_check  am_hal_flash.o
    0x0000c934   0x0000c934   0x00000018   Code   RO         1224    .text.am_hal_flash_load_ui32  am_hal_flash.o
    0x0000c94c   0x0000c94c   0x00000032   Code   RO         1226    .text.am_hal_flash_store_ui32  am_hal_flash.o
    0x0000c97e   0x0000c97e   0x00000002   PAD
    0x0000c980   0x0000c980   0x000003c4   Code   RO          431    .text.am_hal_gpio_pinconfig  am_hal_gpio.o
    0x0000cd44   0x0000cd44   0x000000c4   Code   RO          439    .text.am_hal_gpio_state_read  am_hal_gpio.o
    0x0000ce08   0x0000ce08   0x000000d4   Code   RO          441    .text.am_hal_gpio_state_write  am_hal_gpio.o
    0x0000cedc   0x0000cedc   0x00000008   Code   RO          489    .text.am_hal_interrupt_master_disable  am_hal_interrupt.o
    0x0000cee4   0x0000cee4   0x00000008   Code   RO          487    .text.am_hal_interrupt_master_enable  am_hal_interrupt.o
    0x0000ceec   0x0000ceec   0x00000006   Code   RO          491    .text.am_hal_interrupt_master_set  am_hal_interrupt.o
    0x0000cef2   0x0000cef2   0x00000002   PAD
    0x0000cef4   0x0000cef4   0x00000018   Code   RO          512    .text.am_hal_iom_CQDisable  am_hal_iom.o
    0x0000cf0c   0x0000cf0c   0x00000044   Code   RO          510    .text.am_hal_iom_CQEnable  am_hal_iom.o
    0x0000cf50   0x0000cf50   0x0000009e   Code   RO          520    .text.am_hal_iom_initialize  am_hal_iom.o
    0x0000cfee   0x0000cfee   0x00000002   PAD
    0x0000cff0   0x0000cff0   0x0000036a   Code   RO          542    .text.am_hal_iom_power_ctrl  am_hal_iom.o
    0x0000d35a   0x0000d35a   0x00000002   PAD
    0x0000d35c   0x0000d35c   0x00000066   Code   RO          633    .text.am_hal_itm_enable  am_hal_itm.o
    0x0000d3c2   0x0000d3c2   0x00000002   PAD
    0x0000d3c4   0x0000d3c4   0x00000040   Code   RO          655    .text.am_hal_itm_print  am_hal_itm.o
    0x0000d404   0x0000d404   0x0000002c   Code   RO          649    .text.am_hal_itm_stimulus_reg_byte_write  am_hal_itm.o
    0x0000d430   0x0000d430   0x00000052   Code   RO          775    .text.am_hal_pwrctrl_blebuck_trim  am_hal_pwrctrl.o
    0x0000d482   0x0000d482   0x00000002   PAD
    0x0000d484   0x0000d484   0x0000011a   Code   RO          771    .text.am_hal_pwrctrl_low_power_init  am_hal_pwrctrl.o
    0x0000d59e   0x0000d59e   0x00000002   PAD
    0x0000d5a0   0x0000d5a0   0x000000ba   Code   RO          759    .text.am_hal_pwrctrl_periph_disable  am_hal_pwrctrl.o
    0x0000d65a   0x0000d65a   0x00000002   PAD
    0x0000d65c   0x0000d65c   0x000000e2   Code   RO          757    .text.am_hal_pwrctrl_periph_enable  am_hal_pwrctrl.o
    0x0000d73e   0x0000d73e   0x00000002   PAD
    0x0000d740   0x0000d740   0x0000002e   Code   RO         1527    .text.am_hal_queue_init  am_hal_queue.o
    0x0000d76e   0x0000d76e   0x00000002   PAD
    0x0000d770   0x0000d770   0x000000a2   Code   RO         1529    .text.am_hal_queue_item_add  am_hal_queue.o
    0x0000d812   0x0000d812   0x00000002   PAD
    0x0000d814   0x0000d814   0x0000009e   Code   RO         1531    .text.am_hal_queue_item_get  am_hal_queue.o
    0x0000d8b2   0x0000d8b2   0x00000002   PAD
    0x0000d8b4   0x0000d8b4   0x00000012   Code   RO          813    .text.am_hal_rtc_osc_disable  am_hal_rtc.o
    0x0000d8c6   0x0000d8c6   0x00000002   PAD
    0x0000d8c8   0x0000d8c8   0x000000fc   Code   RO         1057    .text.am_hal_tpiu_enable  am_hal_tpiu.o
    0x0000d9c4   0x0000d9c4   0x000001d0   Code   RO         1076    .text.am_hal_uart_configure  am_hal_uart.o
    0x0000db94   0x0000db94   0x0000009c   Code   RO         1068    .text.am_hal_uart_initialize  am_hal_uart.o
    0x0000dc30   0x0000dc30   0x0000005a   Code   RO         1074    .text.am_hal_uart_interrupt_clear  am_hal_uart.o
    0x0000dc8a   0x0000dc8a   0x00000002   PAD
    0x0000dc8c   0x0000dc8c   0x0000005e   Code   RO         1108    .text.am_hal_uart_interrupt_disable  am_hal_uart.o
    0x0000dcea   0x0000dcea   0x00000002   PAD
    0x0000dcec   0x0000dcec   0x0000005e   Code   RO         1106    .text.am_hal_uart_interrupt_enable  am_hal_uart.o
    0x0000dd4a   0x0000dd4a   0x00000002   PAD
    0x0000dd4c   0x0000dd4c   0x000001fa   Code   RO         1072    .text.am_hal_uart_power_control  am_hal_uart.o
    0x0000df46   0x0000df46   0x00000002   PAD
    0x0000df48   0x0000df48   0x00000060   Code   RO         1082    .text.am_hal_uart_transfer  am_hal_uart.o
    0x0000dfa8   0x0000dfa8   0x0000005c   Code   RO           78    .text.am_iomaster0_isr  iom_dma.o
    0x0000e004   0x0000e004   0x0000006e   Code   RO           80    .text.am_iomaster1_isr  iom_dma.o
    0x0000e072   0x0000e072   0x00000002   PAD
    0x0000e074   0x0000e074   0x0000005e   Code   RO           82    .text.am_iomaster2_isr  iom_dma.o
    0x0000e0d2   0x0000e0d2   0x00000002   PAD
    0x0000e0d4   0x0000e0d4   0x0000005e   Code   RO           84    .text.am_iomaster3_isr  iom_dma.o
    0x0000e132   0x0000e132   0x00000002   PAD
    0x0000e134   0x0000e134   0x0000005e   Code   RO           86    .text.am_iomaster4_isr  iom_dma.o
    0x0000e192   0x0000e192   0x00000002   PAD
    0x0000e194   0x0000e194   0x0000005e   Code   RO           88    .text.am_iomaster5_isr  iom_dma.o
    0x0000e1f2   0x0000e1f2   0x00000002   PAD
    0x0000e1f4   0x0000e1f4   0x00000030   Code   RO          215    .text.am_util_delay_ms  am_util_delay.o
    0x0000e224   0x0000e224   0x00000030   Code   RO          217    .text.am_util_delay_us  am_util_delay.o
    0x0000e254   0x0000e254   0x0000005c   Code   RO          254    .text.am_util_stdio_printf  am_util_stdio.o
    0x0000e2b0   0x0000e2b0   0x00000014   Code   RO          226    .text.am_util_stdio_printf_init  am_util_stdio.o
    0x0000e2c4   0x0000e2c4   0x00000654   Code   RO          232    .text.am_util_stdio_vsprintf  am_util_stdio.o
    0x0000e918   0x0000e918   0x000000b6   Code   RO          281    .text.am_util_string_strnicmp  am_util_string.o
    0x0000e9ce   0x0000e9ce   0x00000002   PAD
    0x0000e9d0   0x0000e9d0   0x000001ce   Code   RO          301    .text.am_util_time_computeDayofWeek  am_util_time.o
    0x0000eb9e   0x0000eb9e   0x00000002   PAD
    0x0000eba0   0x0000eba0   0x00000028   Code   RO            8    .text.amx8x5_ext1_gen  main.o
    0x0000ebc8   0x0000ebc8   0x0000005a   Code   RO           12    .text.amx8x5_ext_reset  main.o
    0x0000ec22   0x0000ec22   0x00000002   PAD
    0x0000ec24   0x0000ec24   0x00000098   Code   RO           10    .text.amx8x5_init   main.o
    0x0000ecbc   0x0000ecbc   0x0000003e   Code   RO           14    .text.amx8x5_int_clear  main.o
    0x0000ecfa   0x0000ecfa   0x00000002   PAD
    0x0000ecfc   0x0000ecfc   0x00000064   Code   RO          122    .text.amx8x5_reg_block_read  amx8x5_device.o
    0x0000ed60   0x0000ed60   0x00000064   Code   RO          124    .text.amx8x5_reg_block_write  amx8x5_device.o
    0x0000edc4   0x0000edc4   0x00000052   Code   RO          114    .text.amx8x5_reg_clear  amx8x5_device.o
    0x0000ee16   0x0000ee16   0x00000002   PAD
    0x0000ee18   0x0000ee18   0x0000006a   Code   RO          116    .text.amx8x5_reg_read  amx8x5_device.o
    0x0000ee82   0x0000ee82   0x00000002   PAD
    0x0000ee84   0x0000ee84   0x00000052   Code   RO          120    .text.amx8x5_reg_set  amx8x5_device.o
    0x0000eed6   0x0000eed6   0x00000002   PAD
    0x0000eed8   0x0000eed8   0x00000044   Code   RO          118    .text.amx8x5_reg_write  amx8x5_device.o
    0x0000ef1c   0x0000ef1c   0x0000003a   Code   RO          126    .text.amx8x5_reset  amx8x5_device.o
    0x0000ef56   0x0000ef56   0x00000002   PAD
    0x0000ef58   0x0000ef58   0x0000014a   Code   RO          146    .text.amx8x5_sleep_set  amx8x5_device.o
    0x0000f0a2   0x0000f0a2   0x00000002   PAD
    0x0000f0a4   0x0000f0a4   0x000000fe   Code   RO          128    .text.amx8x5_time_get  amx8x5_device.o
    0x0000f1a2   0x0000f1a2   0x00000002   PAD
    0x0000f1a4   0x0000f1a4   0x000001d8   Code   RO          132    .text.amx8x5_time_set  amx8x5_device.o
    0x0000f37c   0x0000f37c   0x00000056   Code   RO           16    .text.amx8x5_wait_por_ready  main.o
    0x0000f3d2   0x0000f3d2   0x00000002   PAD
    0x0000f3d4   0x0000f3d4   0x0000001e   Code   RO          130    .text.bcd_to_dec    amx8x5_device.o
    0x0000f3f2   0x0000f3f2   0x00000002   PAD
    0x0000f3f4   0x0000f3f4   0x000000fe   Code   RO         1080    .text.buffer_configure  am_hal_uart.o
    0x0000f4f2   0x0000f4f2   0x00000002   PAD
    0x0000f4f4   0x0000f4f4   0x00000054   Code   RO           98    .text.compute_freq  iom_dma.o
    0x0000f548   0x0000f548   0x00000154   Code   RO         1078    .text.config_baudrate  am_hal_uart.o
    0x0000f69c   0x0000f69c   0x00000032   Code   RO           44    .text.debug_printf_enable  uart_debug.o
    0x0000f6ce   0x0000f6ce   0x00000002   PAD
    0x0000f6d0   0x0000f6d0   0x0000002e   Code   RO          134    .text.dec_to_bcd    amx8x5_device.o
    0x0000f6fe   0x0000f6fe   0x00000002   PAD
    0x0000f700   0x0000f700   0x000000a6   Code   RO          234    .text.decstr_to_int  am_util_stdio.o
    0x0000f7a6   0x0000f7a6   0x00000002   PAD
    0x0000f7a8   0x0000f7a8   0x00000118   Code   RO          264    .text.divu64_10     am_util_stdio.o
    0x0000f8c0   0x0000f8c0   0x00000230   Code   RO          250    .text.ftoa          am_util_stdio.o
    0x0000faf0   0x0000faf0   0x00000040   Code   RO           68    .text.iom_dma_configure  iom_dma.o
    0x0000fb30   0x0000fb30   0x00000068   Code   RO           70    .text.iom_dma_enable  iom_dma.o
    0x0000fb98   0x0000fb98   0x00000104   Code   RO           66    .text.iom_dma_i2c_configure  iom_dma.o
    0x0000fc9c   0x0000fc9c   0x0000004e   Code   RO           90    .text.iom_dma_int_enable  iom_dma.o
    0x0000fcea   0x0000fcea   0x00000002   PAD
    0x0000fcec   0x0000fcec   0x000000b2   Code   RO           62    .text.iom_dma_spi_configure  iom_dma.o
    0x0000fd9e   0x0000fd9e   0x00000002   PAD
    0x0000fda0   0x0000fda0   0x0000031c   Code   RO           74    .text.iom_dma_start  iom_dma.o
    0x000100bc   0x000100bc   0x0000025a   Code   RO           64    .text.iom_get_interface_clock_cfg  iom_dma.o
    0x00010316   0x00010316   0x00000002   PAD
    0x00010318   0x00010318   0x000000b4   Code   RO          168    .text.iom_gpio_config  iom_spi.o
    0x000103cc   0x000103cc   0x0000008a   Code   RO          174    .text.iom_spi_init  iom_spi.o
    0x00010456   0x00010456   0x00000002   PAD
    0x00010458   0x00010458   0x000000f8   Code   RO          172    .text.iom_spi_read  iom_spi.o
    0x00010550   0x00010550   0x000000f6   Code   RO          170    .text.iom_spi_write  iom_spi.o
    0x00010646   0x00010646   0x00000002   PAD
    0x00010648   0x00010648   0x00000044   Code   RO           36    .text.itm_printf_enable  uart_debug.o
    0x0001068c   0x0001068c   0x0000000c   Code   RO            2    .text.low_power_init  main.o
    0x00010698   0x00010698   0x0000009c   Code   RO           22    .text.main          main.o
    0x00010734   0x00010734   0x0000004a   Code   RO            6    .text.mthToIndex    main.o
    0x0001077e   0x0001077e   0x00000002   PAD
    0x00010780   0x00010780   0x0000003e   Code   RO          240    .text.ndigits_in_hex  am_util_stdio.o
    0x000107be   0x000107be   0x00000002   PAD
    0x000107c0   0x000107c0   0x00000030   Code   RO          248    .text.ndigits_in_i64  am_util_stdio.o
    0x000107f0   0x000107f0   0x0000003c   Code   RO          244    .text.ndigits_in_u64  am_util_stdio.o
    0x0001082c   0x0001082c   0x00000028   Code   RO          100    .text.onebit        iom_dma.o
    0x00010854   0x00010854   0x00000050   Code   RO          238    .text.padbuffer     am_util_stdio.o
    0x000108a4   0x000108a4   0x00000022   Code   RO          433    .text.pincfg_equ    am_hal_gpio.o
    0x000108c6   0x000108c6   0x00000002   PAD
    0x000108c8   0x000108c8   0x000000de   Code   RO          761    .text.pwrctrl_periph_disable_msk_check  am_hal_pwrctrl.o
    0x000109a6   0x000109a6   0x00000002   PAD
    0x000109a8   0x000109a8   0x000000d4   Code   RO         1118    .text.read_nonblocking  am_hal_uart.o
    0x00010a7c   0x00010a7c   0x000000ce   Code   RO         1086    .text.read_timeout  am_hal_uart.o
    0x00010b4a   0x00010b4a   0x00000002   PAD
    0x00010b4c   0x00010b4c   0x0000004c   Code   RO         1102    .text.rx_queue_update  am_hal_uart.o
    0x00010b98   0x00010b98   0x00000066   Code   RO          320    .text.set_LPMMODE   am_hal_cachectrl.o
    0x00010bfe   0x00010bfe   0x00000002   PAD
    0x00010c00   0x00010c00   0x00000066   Code   RO          324    .text.set_RDWAIT    am_hal_cachectrl.o
    0x00010c66   0x00010c66   0x00000002   PAD
    0x00010c68   0x00010c68   0x00000066   Code   RO          322    .text.set_SEDELAY   am_hal_cachectrl.o
    0x00010cce   0x00010cce   0x00000002   PAD
    0x00010cd0   0x00010cd0   0x000000a0   Code   RO          773    .text.simobuck_updates  am_hal_pwrctrl.o
    0x00010d70   0x00010d70   0x00000036   Code   RO          236    .text.simple_strlen  am_util_stdio.o
    0x00010da6   0x00010da6   0x00000002   PAD
    0x00010da8   0x00010da8   0x00000210   Code   RO           20    .text.sleep_loop    main.o
    0x00010fb8   0x00010fb8   0x000000f6   Code   RO          166    .text.spi_callback  iom_spi.o
    0x000110ae   0x000110ae   0x00000002   PAD
    0x000110b0   0x000110b0   0x0000004a   Code   RO            4    .text.toVal         main.o
    0x000110fa   0x000110fa   0x00000002   PAD
    0x000110fc   0x000110fc   0x0000006e   Code   RO         1104    .text.tx_queue_update  am_hal_uart.o
    0x0001116a   0x0001116a   0x00000002   PAD
    0x0001116c   0x0001116c   0x00000086   Code   RO         1094    .text.uart_fifo_read  am_hal_uart.o
    0x000111f2   0x000111f2   0x00000002   PAD
    0x000111f4   0x000111f4   0x0000006c   Code   RO         1098    .text.uart_fifo_write  am_hal_uart.o
    0x00011260   0x00011260   0x0000006e   Code   RO           40    .text.uart_printf_enable  uart_debug.o
    0x000112ce   0x000112ce   0x00000002   PAD
    0x000112d0   0x000112d0   0x0000004a   Code   RO           38    .text.uart_string_print  uart_debug.o
    0x0001131a   0x0001131a   0x00000002   PAD
    0x0001131c   0x0001131c   0x000000c0   Code   RO          242    .text.uint64_to_hexstr  am_util_stdio.o
    0x000113dc   0x000113dc   0x00000088   Code   RO          246    .text.uint64_to_str  am_util_stdio.o
    0x00011464   0x00011464   0x000000d2   Code   RO         1116    .text.write_nonblocking  am_hal_uart.o
    0x00011536   0x00011536   0x00000002   PAD
    0x00011538   0x00011538   0x000000ce   Code   RO         1084    .text.write_timeout  am_hal_uart.o
    0x00011606   0x00011606   0x00000002   PAD
    0x00011608   0x00011608   0x00000062   Code   RO         1558    x$fpl$d2f           fz_wm.l(d2f.o)
    0x0001166a   0x0001166a   0x0000009c   Code   RO         1563    x$fpl$dnaninf       fz_wm.l(dnaninf.o)
    0x00011706   0x00011706   0x0000001a   Code   RO         1654    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00011720   0x00011720   0x0000000a   Code   RO         1565    x$fpl$fretinf       fz_wm.l(fretinf.o)
    0x0001172a   0x0001172a   0x00000000   Code   RO         1567    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x0001172a   0x0001172a   0x00000002   PAD
    0x0001172c   0x0001172c   0x0000000c   Data   RO         1231    .rodata..L__const.am_hal_flash_store_ui32.SRAM_write_ui32  am_hal_flash.o
    0x00011738   0x00011738   0x00000100   Data   RO          293    .rodata.am_cattr    am_util_string.o
    0x00011838   0x00011838   0x00000003   Data   RO          328    .rodata.am_hal_cachectrl_defaults  am_hal_cachectrl.o
    0x0001183b   0x0001183b   0x00000001   PAD
    0x0001183c   0x0001183c   0x000000b4   Data   RO          778    .rodata.am_hal_pwrctrl_peripheral_control  am_hal_pwrctrl.o
    0x000118f0   0x000118f0   0x00000004   Data   RO          461    .rodata.g_AM_HAL_GPIO_DISABLE  am_hal_gpio.o
    0x000118f4   0x000118f4   0x00000004   Data   RO           50    .rodata.g_GPIO_COM_UART_RX  uart_debug.o
    0x000118f8   0x000118f8   0x00000004   Data   RO           49    .rodata.g_GPIO_COM_UART_TX  uart_debug.o
    0x000118fc   0x000118fc   0x00000004   Data   RO           48    .rodata.g_GPIO_ITM_SWO  uart_debug.o
    0x00011900   0x00011900   0x00000004   Data   RO          187    .rodata.g_GPIO_RTC_CLKOUT  iom_spi.o
    0x00011904   0x00011904   0x00000004   Data   RO          184    .rodata.g_GPIO_RTC_CS  iom_spi.o
    0x00011908   0x00011908   0x00000004   Data   RO          188    .rodata.g_GPIO_RTC_EXTI  iom_spi.o
    0x0001190c   0x0001190c   0x00000004   Data   RO          186    .rodata.g_GPIO_RTC_EXTR  iom_spi.o
    0x00011910   0x00011910   0x00000004   Data   RO          185    .rodata.g_GPIO_RTC_FOUT  iom_spi.o
    0x00011914   0x00011914   0x00000004   Data   RO          182    .rodata.g_GPIO_RTC_MISO  iom_spi.o
    0x00011918   0x00011918   0x00000004   Data   RO          181    .rodata.g_GPIO_RTC_MOSI  iom_spi.o
    0x0001191c   0x0001191c   0x00000004   Data   RO          189    .rodata.g_GPIO_RTC_PSW  iom_spi.o
    0x00011920   0x00011920   0x00000004   Data   RO          191    .rodata.g_GPIO_RTC_RST  iom_spi.o
    0x00011924   0x00011924   0x00000004   Data   RO          183    .rodata.g_GPIO_RTC_SCK  iom_spi.o
    0x00011928   0x00011928   0x00000004   Data   RO          190    .rodata.g_GPIO_RTC_WDI  iom_spi.o
    0x0001192c   0x0001192c   0x00000060   Data   RO         1228    .rodata.g_am_hal_flash  am_hal_flash.o
    0x0001198c   0x0001198c   0x00000030   Data   RO          303    .rodata.g_iDaysPerMonth  am_util_time.o
    0x000119bc   0x000119bc   0x00000030   Data   RO          304    .rodata.g_iMonthOffsets  am_util_time.o
    0x000119ec   0x000119ec   0x00000028   Data   RO           54    .rodata.g_sBspUartConfig  uart_debug.o
    0x00011a14   0x00011a14   0x00000032   Data   RO          474    .rodata.g_ui8Bit76Capabilities  am_hal_gpio.o
    0x00011a46   0x00011a46   0x00000032   Data   RO          475    .rodata.g_ui8Inpen  am_hal_gpio.o
    0x00011a78   0x00011a78   0x000000c8   Data   RO          477    .rodata.g_ui8NCEtable  am_hal_gpio.o
    0x00011b40   0x00011b40   0x00000032   Data   RO          476    .rodata.g_ui8nCEpins  am_hal_gpio.o
    0x00011b72   0x00011b72   0x00000106   Data   RO           24    .rodata.str1.1      main.o
    0x00011c78   0x00011c78   0x00000020   Data   RO         1729    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x10000000, Load base: 0x00011c98, Size: 0x000049c8, Max: 0x00060000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000000   0x00011c98   0x00000004   Data   RW         1545    .data               libam_hal.lib(am_hal_global.o)
    0x10000004   0x00011c9c   0x00000030   Data   RW           26    .data.g_pcMonth     main.o
    0x10000034   0x00011ccc   0x0000001c   Data   RW           25    .data.g_pcWeekday   main.o
    0x10000050   0x00011ce8   0x00000008   Data   RW          193    .data.g_sIOMSpiConfig  iom_spi.o
    0x10000058   0x00011cf0   0x00000004   Data   RW           52    .data.g_ui32PrintInterface  uart_debug.o
    0x1000005c   0x00011cf4   0x00000001   Data   RW          177    .data.spi_rd_callback_cntx  iom_spi.o
    0x1000005d   0x00011cf5   0x00000001   Data   RW          176    .data.spi_wr_callback_cntx  iom_spi.o
    0x1000005e   0x00011cf6   0x00000002   PAD
    0x10000060        -       0x00000060   Zero   RW         1594    .bss                c_w.l(libspace.o)
    0x100000c0        -       0x00000018   Zero   RW          103    .bss.callback_cntx  iom_dma.o
    0x100000d8        -       0x00000004   Zero   RW          801    .bss.gAmHalResetStatus  am_hal_reset.o
    0x100000dc        -       0x00000004   Zero   RW          192    .bss.g_IOMHandle    iom_spi.o
    0x100000e0        -       0x000033d8   Zero   RW          576    .bss.g_IOMhandles   am_hal_iom.o
    0x100034b8        -       0x000000d0   Zero   RW         1120    .bss.g_am_hal_uart_states  am_hal_uart.o
    0x10003588        -       0x00000001   Zero   RW          267    .bss.g_bTxtXlate    am_util_stdio.o
    0x10003589   0x00011cf6   0x00000003   PAD
    0x1000358c        -       0x00000004   Zero   RW          266    .bss.g_pfnCharPrint  am_util_stdio.o
    0x10003590        -       0x00000400   Zero   RW          268    .bss.g_prfbuf       am_util_stdio.o
    0x10003990        -       0x0000000a   Zero   RW           27    .bss.g_psTimeRegs   main.o
    0x1000399a   0x00011cf6   0x00000002   PAD
    0x1000399c        -       0x00000004   Zero   RW           53    .bss.g_sCOMUART     uart_debug.o
    0x100039a0        -       0x00000001   Zero   RW          104    .bss.pop_tail       iom_dma.o
    0x100039a1        -       0x00000001   Zero   RW          178    .bss.spi_cmd_completed  iom_spi.o
    0x100039a2        -       0x00000001   Zero   RW          179    .bss.spi_cmd_error  iom_spi.o
    0x100039a3        -       0x00000001   Zero   RW          180    .bss.spi_dma_completed  iom_spi.o
    0x100039a4        -       0x00000004   Zero   RW          105    .bss.transaction_rx_buff  iom_dma.o
    0x100039a8        -       0x00000004   Zero   RW          106    .bss.transaction_rx_size  iom_dma.o
    0x100039ac        -       0x00000018   Zero   RW          102    .bss.user_callbacks  iom_dma.o
    0x100039c4   0x00011cf6   0x00000004   PAD
    0x100039c8        -       0x00000000   Zero   RW          201    HEAP                startup_keil.o
    0x100039c8        -       0x00001000   Zero   RW          200    STACK               startup_keil.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1082         18          3          0          0       7662   am_hal_cachectrl.o
       502         10          0          0          0      18042   am_hal_clkgen.o
       216          0          0          0          0       7245   am_hal_cmdq.o
       270          0        108          0          0      20492   am_hal_flash.o
      1406         10        354          0          0      31158   am_hal_gpio.o
        22          0          0          0          0        774   am_hal_interrupt.o
      1124          0          0          0      13272      41722   am_hal_iom.o
       210          0          0          0          0      11088   am_hal_itm.o
      1158          0        180          0          0      21483   am_hal_pwrctrl.o
       366          0          0          0          0       1952   am_hal_queue.o
         0          0          0          0          4       5104   am_hal_reset.o
        18          0          0          0          0       7883   am_hal_rtc.o
       252          0          0          0          0      10647   am_hal_tpiu.o
      3356          4          0          0        208      23507   am_hal_uart.o
        96          0          0          0          0       1225   am_util_delay.o
      3370        102          0          0       1029       8594   am_util_stdio.o
       182          0        256          0          0       2461   am_util_string.o
       462          0         96          0          0       1181   am_util_time.o
      1728          0          0          0          0      10693   amx8x5_device.o
      2832          6          0          0         57      16632   iom_dma.o
      1058          0         44         10          7       4369   iom_spi.o
      1274          0        262         76         10       4710   main.o
       332        274          0          0       4096       1244   startup_keil.o
       302          0         52          4          4       2983   uart_debug.o

    ----------------------------------------------------------------------
     21740        424       1388         92      18696     262851   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       122          0          1          2          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        98          4          0          0          0        140   d2f.o
       156          4          0          0          0        140   dnaninf.o
        26          0          0          0          0        116   fpinit.o
        10          0          0          0          0        116   fretinf.o
         0          0          0          0          0          0   usenofp.o
         0          0          0          4          0          0   am_hal_global.o

    ----------------------------------------------------------------------
       576         24          0          4         96       1096   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       276         16          0          0         96        584   c_w.l
       290          8          0          0          0        512   fz_wm.l
         0          0          0          4          0          0   libam_hal.lib

    ----------------------------------------------------------------------
       576         24          0          4         96       1096   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22316        448       1388         96      18792     262971   Grand Totals
     22316        448       1388         96      18792     262971   ELF Image Totals
     22316        448       1388         96          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23704 (  23.15kB)
    Total RW  Size (RW Data + ZI Data)             18888 (  18.45kB)
    Total ROM Size (Code + RO Data + RW Data)      23800 (  23.24kB)

==============================================================================

